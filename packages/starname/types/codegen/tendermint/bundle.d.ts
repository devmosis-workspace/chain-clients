import * as _123 from "./abci/types";
import * as _124 from "./crypto/keys";
import * as _125 from "./crypto/proof";
import * as _126 from "./libs/bits/types";
import * as _127 from "./p2p/types";
import * as _128 from "./types/block";
import * as _129 from "./types/evidence";
import * as _130 from "./types/params";
import * as _131 from "./types/types";
import * as _132 from "./types/validator";
import * as _133 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _123.CheckTxType;
        checkTxTypeToJSON(object: _123.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _123.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _123.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _123.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _123.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _123.EvidenceType;
        evidenceTypeToJSON(object: _123.EvidenceType): string;
        CheckTxType: typeof _123.CheckTxType;
        CheckTxTypeSDKType: typeof _123.CheckTxType;
        CheckTxTypeAmino: typeof _123.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _123.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _123.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _123.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _123.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _123.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _123.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _123.EvidenceType;
        EvidenceTypeSDKType: typeof _123.EvidenceType;
        EvidenceTypeAmino: typeof _123.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _123.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.Request;
            fromPartial(object: Partial<_123.Request>): _123.Request;
            fromAmino(object: _123.RequestAmino): _123.Request;
            toAmino(message: _123.Request): _123.RequestAmino;
            fromAminoMsg(object: _123.RequestAminoMsg): _123.Request;
            fromProtoMsg(message: _123.RequestProtoMsg): _123.Request;
            toProto(message: _123.Request): Uint8Array;
            toProtoMsg(message: _123.Request): _123.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _123.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestEcho;
            fromPartial(object: Partial<_123.RequestEcho>): _123.RequestEcho;
            fromAmino(object: _123.RequestEchoAmino): _123.RequestEcho;
            toAmino(message: _123.RequestEcho): _123.RequestEchoAmino;
            fromAminoMsg(object: _123.RequestEchoAminoMsg): _123.RequestEcho;
            fromProtoMsg(message: _123.RequestEchoProtoMsg): _123.RequestEcho;
            toProto(message: _123.RequestEcho): Uint8Array;
            toProtoMsg(message: _123.RequestEcho): _123.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _123.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _123.RequestFlush;
            fromPartial(_: Partial<_123.RequestFlush>): _123.RequestFlush;
            fromAmino(_: _123.RequestFlushAmino): _123.RequestFlush;
            toAmino(_: _123.RequestFlush): _123.RequestFlushAmino;
            fromAminoMsg(object: _123.RequestFlushAminoMsg): _123.RequestFlush;
            fromProtoMsg(message: _123.RequestFlushProtoMsg): _123.RequestFlush;
            toProto(message: _123.RequestFlush): Uint8Array;
            toProtoMsg(message: _123.RequestFlush): _123.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _123.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestInfo;
            fromPartial(object: Partial<_123.RequestInfo>): _123.RequestInfo;
            fromAmino(object: _123.RequestInfoAmino): _123.RequestInfo;
            toAmino(message: _123.RequestInfo): _123.RequestInfoAmino;
            fromAminoMsg(object: _123.RequestInfoAminoMsg): _123.RequestInfo;
            fromProtoMsg(message: _123.RequestInfoProtoMsg): _123.RequestInfo;
            toProto(message: _123.RequestInfo): Uint8Array;
            toProtoMsg(message: _123.RequestInfo): _123.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _123.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestSetOption;
            fromPartial(object: Partial<_123.RequestSetOption>): _123.RequestSetOption;
            fromAmino(object: _123.RequestSetOptionAmino): _123.RequestSetOption;
            toAmino(message: _123.RequestSetOption): _123.RequestSetOptionAmino;
            fromAminoMsg(object: _123.RequestSetOptionAminoMsg): _123.RequestSetOption;
            fromProtoMsg(message: _123.RequestSetOptionProtoMsg): _123.RequestSetOption;
            toProto(message: _123.RequestSetOption): Uint8Array;
            toProtoMsg(message: _123.RequestSetOption): _123.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _123.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestInitChain;
            fromPartial(object: Partial<_123.RequestInitChain>): _123.RequestInitChain;
            fromAmino(object: _123.RequestInitChainAmino): _123.RequestInitChain;
            toAmino(message: _123.RequestInitChain): _123.RequestInitChainAmino;
            fromAminoMsg(object: _123.RequestInitChainAminoMsg): _123.RequestInitChain;
            fromProtoMsg(message: _123.RequestInitChainProtoMsg): _123.RequestInitChain;
            toProto(message: _123.RequestInitChain): Uint8Array;
            toProtoMsg(message: _123.RequestInitChain): _123.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _123.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestQuery;
            fromPartial(object: Partial<_123.RequestQuery>): _123.RequestQuery;
            fromAmino(object: _123.RequestQueryAmino): _123.RequestQuery;
            toAmino(message: _123.RequestQuery): _123.RequestQueryAmino;
            fromAminoMsg(object: _123.RequestQueryAminoMsg): _123.RequestQuery;
            fromProtoMsg(message: _123.RequestQueryProtoMsg): _123.RequestQuery;
            toProto(message: _123.RequestQuery): Uint8Array;
            toProtoMsg(message: _123.RequestQuery): _123.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _123.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestBeginBlock;
            fromPartial(object: Partial<_123.RequestBeginBlock>): _123.RequestBeginBlock;
            fromAmino(object: _123.RequestBeginBlockAmino): _123.RequestBeginBlock;
            toAmino(message: _123.RequestBeginBlock): _123.RequestBeginBlockAmino;
            fromAminoMsg(object: _123.RequestBeginBlockAminoMsg): _123.RequestBeginBlock;
            fromProtoMsg(message: _123.RequestBeginBlockProtoMsg): _123.RequestBeginBlock;
            toProto(message: _123.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _123.RequestBeginBlock): _123.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _123.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestCheckTx;
            fromPartial(object: Partial<_123.RequestCheckTx>): _123.RequestCheckTx;
            fromAmino(object: _123.RequestCheckTxAmino): _123.RequestCheckTx;
            toAmino(message: _123.RequestCheckTx): _123.RequestCheckTxAmino;
            fromAminoMsg(object: _123.RequestCheckTxAminoMsg): _123.RequestCheckTx;
            fromProtoMsg(message: _123.RequestCheckTxProtoMsg): _123.RequestCheckTx;
            toProto(message: _123.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _123.RequestCheckTx): _123.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _123.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestDeliverTx;
            fromPartial(object: Partial<_123.RequestDeliverTx>): _123.RequestDeliverTx;
            fromAmino(object: _123.RequestDeliverTxAmino): _123.RequestDeliverTx;
            toAmino(message: _123.RequestDeliverTx): _123.RequestDeliverTxAmino;
            fromAminoMsg(object: _123.RequestDeliverTxAminoMsg): _123.RequestDeliverTx;
            fromProtoMsg(message: _123.RequestDeliverTxProtoMsg): _123.RequestDeliverTx;
            toProto(message: _123.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _123.RequestDeliverTx): _123.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _123.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestEndBlock;
            fromPartial(object: Partial<_123.RequestEndBlock>): _123.RequestEndBlock;
            fromAmino(object: _123.RequestEndBlockAmino): _123.RequestEndBlock;
            toAmino(message: _123.RequestEndBlock): _123.RequestEndBlockAmino;
            fromAminoMsg(object: _123.RequestEndBlockAminoMsg): _123.RequestEndBlock;
            fromProtoMsg(message: _123.RequestEndBlockProtoMsg): _123.RequestEndBlock;
            toProto(message: _123.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _123.RequestEndBlock): _123.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _123.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _123.RequestCommit;
            fromPartial(_: Partial<_123.RequestCommit>): _123.RequestCommit;
            fromAmino(_: _123.RequestCommitAmino): _123.RequestCommit;
            toAmino(_: _123.RequestCommit): _123.RequestCommitAmino;
            fromAminoMsg(object: _123.RequestCommitAminoMsg): _123.RequestCommit;
            fromProtoMsg(message: _123.RequestCommitProtoMsg): _123.RequestCommit;
            toProto(message: _123.RequestCommit): Uint8Array;
            toProtoMsg(message: _123.RequestCommit): _123.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _123.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _123.RequestListSnapshots;
            fromPartial(_: Partial<_123.RequestListSnapshots>): _123.RequestListSnapshots;
            fromAmino(_: _123.RequestListSnapshotsAmino): _123.RequestListSnapshots;
            toAmino(_: _123.RequestListSnapshots): _123.RequestListSnapshotsAmino;
            fromAminoMsg(object: _123.RequestListSnapshotsAminoMsg): _123.RequestListSnapshots;
            fromProtoMsg(message: _123.RequestListSnapshotsProtoMsg): _123.RequestListSnapshots;
            toProto(message: _123.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _123.RequestListSnapshots): _123.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _123.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestOfferSnapshot;
            fromPartial(object: Partial<_123.RequestOfferSnapshot>): _123.RequestOfferSnapshot;
            fromAmino(object: _123.RequestOfferSnapshotAmino): _123.RequestOfferSnapshot;
            toAmino(message: _123.RequestOfferSnapshot): _123.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _123.RequestOfferSnapshotAminoMsg): _123.RequestOfferSnapshot;
            fromProtoMsg(message: _123.RequestOfferSnapshotProtoMsg): _123.RequestOfferSnapshot;
            toProto(message: _123.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _123.RequestOfferSnapshot): _123.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _123.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_123.RequestLoadSnapshotChunk>): _123.RequestLoadSnapshotChunk;
            fromAmino(object: _123.RequestLoadSnapshotChunkAmino): _123.RequestLoadSnapshotChunk;
            toAmino(message: _123.RequestLoadSnapshotChunk): _123.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _123.RequestLoadSnapshotChunkAminoMsg): _123.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _123.RequestLoadSnapshotChunkProtoMsg): _123.RequestLoadSnapshotChunk;
            toProto(message: _123.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _123.RequestLoadSnapshotChunk): _123.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _123.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_123.RequestApplySnapshotChunk>): _123.RequestApplySnapshotChunk;
            fromAmino(object: _123.RequestApplySnapshotChunkAmino): _123.RequestApplySnapshotChunk;
            toAmino(message: _123.RequestApplySnapshotChunk): _123.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _123.RequestApplySnapshotChunkAminoMsg): _123.RequestApplySnapshotChunk;
            fromProtoMsg(message: _123.RequestApplySnapshotChunkProtoMsg): _123.RequestApplySnapshotChunk;
            toProto(message: _123.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _123.RequestApplySnapshotChunk): _123.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _123.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.Response;
            fromPartial(object: Partial<_123.Response>): _123.Response;
            fromAmino(object: _123.ResponseAmino): _123.Response;
            toAmino(message: _123.Response): _123.ResponseAmino;
            fromAminoMsg(object: _123.ResponseAminoMsg): _123.Response;
            fromProtoMsg(message: _123.ResponseProtoMsg): _123.Response;
            toProto(message: _123.Response): Uint8Array;
            toProtoMsg(message: _123.Response): _123.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _123.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseException;
            fromPartial(object: Partial<_123.ResponseException>): _123.ResponseException;
            fromAmino(object: _123.ResponseExceptionAmino): _123.ResponseException;
            toAmino(message: _123.ResponseException): _123.ResponseExceptionAmino;
            fromAminoMsg(object: _123.ResponseExceptionAminoMsg): _123.ResponseException;
            fromProtoMsg(message: _123.ResponseExceptionProtoMsg): _123.ResponseException;
            toProto(message: _123.ResponseException): Uint8Array;
            toProtoMsg(message: _123.ResponseException): _123.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _123.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseEcho;
            fromPartial(object: Partial<_123.ResponseEcho>): _123.ResponseEcho;
            fromAmino(object: _123.ResponseEchoAmino): _123.ResponseEcho;
            toAmino(message: _123.ResponseEcho): _123.ResponseEchoAmino;
            fromAminoMsg(object: _123.ResponseEchoAminoMsg): _123.ResponseEcho;
            fromProtoMsg(message: _123.ResponseEchoProtoMsg): _123.ResponseEcho;
            toProto(message: _123.ResponseEcho): Uint8Array;
            toProtoMsg(message: _123.ResponseEcho): _123.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _123.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _123.ResponseFlush;
            fromPartial(_: Partial<_123.ResponseFlush>): _123.ResponseFlush;
            fromAmino(_: _123.ResponseFlushAmino): _123.ResponseFlush;
            toAmino(_: _123.ResponseFlush): _123.ResponseFlushAmino;
            fromAminoMsg(object: _123.ResponseFlushAminoMsg): _123.ResponseFlush;
            fromProtoMsg(message: _123.ResponseFlushProtoMsg): _123.ResponseFlush;
            toProto(message: _123.ResponseFlush): Uint8Array;
            toProtoMsg(message: _123.ResponseFlush): _123.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _123.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseInfo;
            fromPartial(object: Partial<_123.ResponseInfo>): _123.ResponseInfo;
            fromAmino(object: _123.ResponseInfoAmino): _123.ResponseInfo;
            toAmino(message: _123.ResponseInfo): _123.ResponseInfoAmino;
            fromAminoMsg(object: _123.ResponseInfoAminoMsg): _123.ResponseInfo;
            fromProtoMsg(message: _123.ResponseInfoProtoMsg): _123.ResponseInfo;
            toProto(message: _123.ResponseInfo): Uint8Array;
            toProtoMsg(message: _123.ResponseInfo): _123.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _123.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseSetOption;
            fromPartial(object: Partial<_123.ResponseSetOption>): _123.ResponseSetOption;
            fromAmino(object: _123.ResponseSetOptionAmino): _123.ResponseSetOption;
            toAmino(message: _123.ResponseSetOption): _123.ResponseSetOptionAmino;
            fromAminoMsg(object: _123.ResponseSetOptionAminoMsg): _123.ResponseSetOption;
            fromProtoMsg(message: _123.ResponseSetOptionProtoMsg): _123.ResponseSetOption;
            toProto(message: _123.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _123.ResponseSetOption): _123.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _123.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseInitChain;
            fromPartial(object: Partial<_123.ResponseInitChain>): _123.ResponseInitChain;
            fromAmino(object: _123.ResponseInitChainAmino): _123.ResponseInitChain;
            toAmino(message: _123.ResponseInitChain): _123.ResponseInitChainAmino;
            fromAminoMsg(object: _123.ResponseInitChainAminoMsg): _123.ResponseInitChain;
            fromProtoMsg(message: _123.ResponseInitChainProtoMsg): _123.ResponseInitChain;
            toProto(message: _123.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _123.ResponseInitChain): _123.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _123.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseQuery;
            fromPartial(object: Partial<_123.ResponseQuery>): _123.ResponseQuery;
            fromAmino(object: _123.ResponseQueryAmino): _123.ResponseQuery;
            toAmino(message: _123.ResponseQuery): _123.ResponseQueryAmino;
            fromAminoMsg(object: _123.ResponseQueryAminoMsg): _123.ResponseQuery;
            fromProtoMsg(message: _123.ResponseQueryProtoMsg): _123.ResponseQuery;
            toProto(message: _123.ResponseQuery): Uint8Array;
            toProtoMsg(message: _123.ResponseQuery): _123.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _123.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseBeginBlock;
            fromPartial(object: Partial<_123.ResponseBeginBlock>): _123.ResponseBeginBlock;
            fromAmino(object: _123.ResponseBeginBlockAmino): _123.ResponseBeginBlock;
            toAmino(message: _123.ResponseBeginBlock): _123.ResponseBeginBlockAmino;
            fromAminoMsg(object: _123.ResponseBeginBlockAminoMsg): _123.ResponseBeginBlock;
            fromProtoMsg(message: _123.ResponseBeginBlockProtoMsg): _123.ResponseBeginBlock;
            toProto(message: _123.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _123.ResponseBeginBlock): _123.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _123.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseCheckTx;
            fromPartial(object: Partial<_123.ResponseCheckTx>): _123.ResponseCheckTx;
            fromAmino(object: _123.ResponseCheckTxAmino): _123.ResponseCheckTx;
            toAmino(message: _123.ResponseCheckTx): _123.ResponseCheckTxAmino;
            fromAminoMsg(object: _123.ResponseCheckTxAminoMsg): _123.ResponseCheckTx;
            fromProtoMsg(message: _123.ResponseCheckTxProtoMsg): _123.ResponseCheckTx;
            toProto(message: _123.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _123.ResponseCheckTx): _123.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _123.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseDeliverTx;
            fromPartial(object: Partial<_123.ResponseDeliverTx>): _123.ResponseDeliverTx;
            fromAmino(object: _123.ResponseDeliverTxAmino): _123.ResponseDeliverTx;
            toAmino(message: _123.ResponseDeliverTx): _123.ResponseDeliverTxAmino;
            fromAminoMsg(object: _123.ResponseDeliverTxAminoMsg): _123.ResponseDeliverTx;
            fromProtoMsg(message: _123.ResponseDeliverTxProtoMsg): _123.ResponseDeliverTx;
            toProto(message: _123.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _123.ResponseDeliverTx): _123.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _123.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseEndBlock;
            fromPartial(object: Partial<_123.ResponseEndBlock>): _123.ResponseEndBlock;
            fromAmino(object: _123.ResponseEndBlockAmino): _123.ResponseEndBlock;
            toAmino(message: _123.ResponseEndBlock): _123.ResponseEndBlockAmino;
            fromAminoMsg(object: _123.ResponseEndBlockAminoMsg): _123.ResponseEndBlock;
            fromProtoMsg(message: _123.ResponseEndBlockProtoMsg): _123.ResponseEndBlock;
            toProto(message: _123.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _123.ResponseEndBlock): _123.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _123.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseCommit;
            fromPartial(object: Partial<_123.ResponseCommit>): _123.ResponseCommit;
            fromAmino(object: _123.ResponseCommitAmino): _123.ResponseCommit;
            toAmino(message: _123.ResponseCommit): _123.ResponseCommitAmino;
            fromAminoMsg(object: _123.ResponseCommitAminoMsg): _123.ResponseCommit;
            fromProtoMsg(message: _123.ResponseCommitProtoMsg): _123.ResponseCommit;
            toProto(message: _123.ResponseCommit): Uint8Array;
            toProtoMsg(message: _123.ResponseCommit): _123.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _123.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseListSnapshots;
            fromPartial(object: Partial<_123.ResponseListSnapshots>): _123.ResponseListSnapshots;
            fromAmino(object: _123.ResponseListSnapshotsAmino): _123.ResponseListSnapshots;
            toAmino(message: _123.ResponseListSnapshots): _123.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _123.ResponseListSnapshotsAminoMsg): _123.ResponseListSnapshots;
            fromProtoMsg(message: _123.ResponseListSnapshotsProtoMsg): _123.ResponseListSnapshots;
            toProto(message: _123.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _123.ResponseListSnapshots): _123.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _123.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseOfferSnapshot;
            fromPartial(object: Partial<_123.ResponseOfferSnapshot>): _123.ResponseOfferSnapshot;
            fromAmino(object: _123.ResponseOfferSnapshotAmino): _123.ResponseOfferSnapshot;
            toAmino(message: _123.ResponseOfferSnapshot): _123.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _123.ResponseOfferSnapshotAminoMsg): _123.ResponseOfferSnapshot;
            fromProtoMsg(message: _123.ResponseOfferSnapshotProtoMsg): _123.ResponseOfferSnapshot;
            toProto(message: _123.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _123.ResponseOfferSnapshot): _123.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _123.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_123.ResponseLoadSnapshotChunk>): _123.ResponseLoadSnapshotChunk;
            fromAmino(object: _123.ResponseLoadSnapshotChunkAmino): _123.ResponseLoadSnapshotChunk;
            toAmino(message: _123.ResponseLoadSnapshotChunk): _123.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _123.ResponseLoadSnapshotChunkAminoMsg): _123.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _123.ResponseLoadSnapshotChunkProtoMsg): _123.ResponseLoadSnapshotChunk;
            toProto(message: _123.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _123.ResponseLoadSnapshotChunk): _123.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _123.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_123.ResponseApplySnapshotChunk>): _123.ResponseApplySnapshotChunk;
            fromAmino(object: _123.ResponseApplySnapshotChunkAmino): _123.ResponseApplySnapshotChunk;
            toAmino(message: _123.ResponseApplySnapshotChunk): _123.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _123.ResponseApplySnapshotChunkAminoMsg): _123.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _123.ResponseApplySnapshotChunkProtoMsg): _123.ResponseApplySnapshotChunk;
            toProto(message: _123.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _123.ResponseApplySnapshotChunk): _123.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _123.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ConsensusParams;
            fromPartial(object: Partial<_123.ConsensusParams>): _123.ConsensusParams;
            fromAmino(object: _123.ConsensusParamsAmino): _123.ConsensusParams;
            toAmino(message: _123.ConsensusParams): _123.ConsensusParamsAmino;
            fromAminoMsg(object: _123.ConsensusParamsAminoMsg): _123.ConsensusParams;
            fromProtoMsg(message: _123.ConsensusParamsProtoMsg): _123.ConsensusParams;
            toProto(message: _123.ConsensusParams): Uint8Array;
            toProtoMsg(message: _123.ConsensusParams): _123.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _123.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.BlockParams;
            fromPartial(object: Partial<_123.BlockParams>): _123.BlockParams;
            fromAmino(object: _123.BlockParamsAmino): _123.BlockParams;
            toAmino(message: _123.BlockParams): _123.BlockParamsAmino;
            fromAminoMsg(object: _123.BlockParamsAminoMsg): _123.BlockParams;
            fromProtoMsg(message: _123.BlockParamsProtoMsg): _123.BlockParams;
            toProto(message: _123.BlockParams): Uint8Array;
            toProtoMsg(message: _123.BlockParams): _123.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _123.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.LastCommitInfo;
            fromPartial(object: Partial<_123.LastCommitInfo>): _123.LastCommitInfo;
            fromAmino(object: _123.LastCommitInfoAmino): _123.LastCommitInfo;
            toAmino(message: _123.LastCommitInfo): _123.LastCommitInfoAmino;
            fromAminoMsg(object: _123.LastCommitInfoAminoMsg): _123.LastCommitInfo;
            fromProtoMsg(message: _123.LastCommitInfoProtoMsg): _123.LastCommitInfo;
            toProto(message: _123.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _123.LastCommitInfo): _123.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _123.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.Event;
            fromPartial(object: Partial<_123.Event>): _123.Event;
            fromAmino(object: _123.EventAmino): _123.Event;
            toAmino(message: _123.Event): _123.EventAmino;
            fromAminoMsg(object: _123.EventAminoMsg): _123.Event;
            fromProtoMsg(message: _123.EventProtoMsg): _123.Event;
            toProto(message: _123.Event): Uint8Array;
            toProtoMsg(message: _123.Event): _123.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _123.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.EventAttribute;
            fromPartial(object: Partial<_123.EventAttribute>): _123.EventAttribute;
            fromAmino(object: _123.EventAttributeAmino): _123.EventAttribute;
            toAmino(message: _123.EventAttribute): _123.EventAttributeAmino;
            fromAminoMsg(object: _123.EventAttributeAminoMsg): _123.EventAttribute;
            fromProtoMsg(message: _123.EventAttributeProtoMsg): _123.EventAttribute;
            toProto(message: _123.EventAttribute): Uint8Array;
            toProtoMsg(message: _123.EventAttribute): _123.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _123.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.TxResult;
            fromPartial(object: Partial<_123.TxResult>): _123.TxResult;
            fromAmino(object: _123.TxResultAmino): _123.TxResult;
            toAmino(message: _123.TxResult): _123.TxResultAmino;
            fromAminoMsg(object: _123.TxResultAminoMsg): _123.TxResult;
            fromProtoMsg(message: _123.TxResultProtoMsg): _123.TxResult;
            toProto(message: _123.TxResult): Uint8Array;
            toProtoMsg(message: _123.TxResult): _123.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _123.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.Validator;
            fromPartial(object: Partial<_123.Validator>): _123.Validator;
            fromAmino(object: _123.ValidatorAmino): _123.Validator;
            toAmino(message: _123.Validator): _123.ValidatorAmino;
            fromAminoMsg(object: _123.ValidatorAminoMsg): _123.Validator;
            fromProtoMsg(message: _123.ValidatorProtoMsg): _123.Validator;
            toProto(message: _123.Validator): Uint8Array;
            toProtoMsg(message: _123.Validator): _123.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _123.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.ValidatorUpdate;
            fromPartial(object: Partial<_123.ValidatorUpdate>): _123.ValidatorUpdate;
            fromAmino(object: _123.ValidatorUpdateAmino): _123.ValidatorUpdate;
            toAmino(message: _123.ValidatorUpdate): _123.ValidatorUpdateAmino;
            fromAminoMsg(object: _123.ValidatorUpdateAminoMsg): _123.ValidatorUpdate;
            fromProtoMsg(message: _123.ValidatorUpdateProtoMsg): _123.ValidatorUpdate;
            toProto(message: _123.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _123.ValidatorUpdate): _123.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _123.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.VoteInfo;
            fromPartial(object: Partial<_123.VoteInfo>): _123.VoteInfo;
            fromAmino(object: _123.VoteInfoAmino): _123.VoteInfo;
            toAmino(message: _123.VoteInfo): _123.VoteInfoAmino;
            fromAminoMsg(object: _123.VoteInfoAminoMsg): _123.VoteInfo;
            fromProtoMsg(message: _123.VoteInfoProtoMsg): _123.VoteInfo;
            toProto(message: _123.VoteInfo): Uint8Array;
            toProtoMsg(message: _123.VoteInfo): _123.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _123.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.Evidence;
            fromPartial(object: Partial<_123.Evidence>): _123.Evidence;
            fromAmino(object: _123.EvidenceAmino): _123.Evidence;
            toAmino(message: _123.Evidence): _123.EvidenceAmino;
            fromAminoMsg(object: _123.EvidenceAminoMsg): _123.Evidence;
            fromProtoMsg(message: _123.EvidenceProtoMsg): _123.Evidence;
            toProto(message: _123.Evidence): Uint8Array;
            toProtoMsg(message: _123.Evidence): _123.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _123.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.Snapshot;
            fromPartial(object: Partial<_123.Snapshot>): _123.Snapshot;
            fromAmino(object: _123.SnapshotAmino): _123.Snapshot;
            toAmino(message: _123.Snapshot): _123.SnapshotAmino;
            fromAminoMsg(object: _123.SnapshotAminoMsg): _123.Snapshot;
            fromProtoMsg(message: _123.SnapshotProtoMsg): _123.Snapshot;
            toProto(message: _123.Snapshot): Uint8Array;
            toProtoMsg(message: _123.Snapshot): _123.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _125.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _125.Proof;
            fromPartial(object: Partial<_125.Proof>): _125.Proof;
            fromAmino(object: _125.ProofAmino): _125.Proof;
            toAmino(message: _125.Proof): _125.ProofAmino;
            fromAminoMsg(object: _125.ProofAminoMsg): _125.Proof;
            fromProtoMsg(message: _125.ProofProtoMsg): _125.Proof;
            toProto(message: _125.Proof): Uint8Array;
            toProtoMsg(message: _125.Proof): _125.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _125.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _125.ValueOp;
            fromPartial(object: Partial<_125.ValueOp>): _125.ValueOp;
            fromAmino(object: _125.ValueOpAmino): _125.ValueOp;
            toAmino(message: _125.ValueOp): _125.ValueOpAmino;
            fromAminoMsg(object: _125.ValueOpAminoMsg): _125.ValueOp;
            fromProtoMsg(message: _125.ValueOpProtoMsg): _125.ValueOp;
            toProto(message: _125.ValueOp): Uint8Array;
            toProtoMsg(message: _125.ValueOp): _125.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _125.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _125.DominoOp;
            fromPartial(object: Partial<_125.DominoOp>): _125.DominoOp;
            fromAmino(object: _125.DominoOpAmino): _125.DominoOp;
            toAmino(message: _125.DominoOp): _125.DominoOpAmino;
            fromAminoMsg(object: _125.DominoOpAminoMsg): _125.DominoOp;
            fromProtoMsg(message: _125.DominoOpProtoMsg): _125.DominoOp;
            toProto(message: _125.DominoOp): Uint8Array;
            toProtoMsg(message: _125.DominoOp): _125.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _125.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _125.ProofOp;
            fromPartial(object: Partial<_125.ProofOp>): _125.ProofOp;
            fromAmino(object: _125.ProofOpAmino): _125.ProofOp;
            toAmino(message: _125.ProofOp): _125.ProofOpAmino;
            fromAminoMsg(object: _125.ProofOpAminoMsg): _125.ProofOp;
            fromProtoMsg(message: _125.ProofOpProtoMsg): _125.ProofOp;
            toProto(message: _125.ProofOp): Uint8Array;
            toProtoMsg(message: _125.ProofOp): _125.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _125.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _125.ProofOps;
            fromPartial(object: Partial<_125.ProofOps>): _125.ProofOps;
            fromAmino(object: _125.ProofOpsAmino): _125.ProofOps;
            toAmino(message: _125.ProofOps): _125.ProofOpsAmino;
            fromAminoMsg(object: _125.ProofOpsAminoMsg): _125.ProofOps;
            fromProtoMsg(message: _125.ProofOpsProtoMsg): _125.ProofOps;
            toProto(message: _125.ProofOps): Uint8Array;
            toProtoMsg(message: _125.ProofOps): _125.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _124.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _124.PublicKey;
            fromPartial(object: Partial<_124.PublicKey>): _124.PublicKey;
            fromAmino(object: _124.PublicKeyAmino): _124.PublicKey;
            toAmino(message: _124.PublicKey): _124.PublicKeyAmino;
            fromAminoMsg(object: _124.PublicKeyAminoMsg): _124.PublicKey;
            fromProtoMsg(message: _124.PublicKeyProtoMsg): _124.PublicKey;
            toProto(message: _124.PublicKey): Uint8Array;
            toProtoMsg(message: _124.PublicKey): _124.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _126.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _126.BitArray;
                fromPartial(object: Partial<_126.BitArray>): _126.BitArray;
                fromAmino(object: _126.BitArrayAmino): _126.BitArray;
                toAmino(message: _126.BitArray): _126.BitArrayAmino;
                fromAminoMsg(object: _126.BitArrayAminoMsg): _126.BitArray;
                fromProtoMsg(message: _126.BitArrayProtoMsg): _126.BitArray;
                toProto(message: _126.BitArray): Uint8Array;
                toProtoMsg(message: _126.BitArray): _126.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _127.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _127.NetAddress;
            fromPartial(object: Partial<_127.NetAddress>): _127.NetAddress;
            fromAmino(object: _127.NetAddressAmino): _127.NetAddress;
            toAmino(message: _127.NetAddress): _127.NetAddressAmino;
            fromAminoMsg(object: _127.NetAddressAminoMsg): _127.NetAddress;
            fromProtoMsg(message: _127.NetAddressProtoMsg): _127.NetAddress;
            toProto(message: _127.NetAddress): Uint8Array;
            toProtoMsg(message: _127.NetAddress): _127.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _127.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _127.ProtocolVersion;
            fromPartial(object: Partial<_127.ProtocolVersion>): _127.ProtocolVersion;
            fromAmino(object: _127.ProtocolVersionAmino): _127.ProtocolVersion;
            toAmino(message: _127.ProtocolVersion): _127.ProtocolVersionAmino;
            fromAminoMsg(object: _127.ProtocolVersionAminoMsg): _127.ProtocolVersion;
            fromProtoMsg(message: _127.ProtocolVersionProtoMsg): _127.ProtocolVersion;
            toProto(message: _127.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _127.ProtocolVersion): _127.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _127.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _127.DefaultNodeInfo;
            fromPartial(object: Partial<_127.DefaultNodeInfo>): _127.DefaultNodeInfo;
            fromAmino(object: _127.DefaultNodeInfoAmino): _127.DefaultNodeInfo;
            toAmino(message: _127.DefaultNodeInfo): _127.DefaultNodeInfoAmino;
            fromAminoMsg(object: _127.DefaultNodeInfoAminoMsg): _127.DefaultNodeInfo;
            fromProtoMsg(message: _127.DefaultNodeInfoProtoMsg): _127.DefaultNodeInfo;
            toProto(message: _127.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _127.DefaultNodeInfo): _127.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _127.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _127.DefaultNodeInfoOther;
            fromPartial(object: Partial<_127.DefaultNodeInfoOther>): _127.DefaultNodeInfoOther;
            fromAmino(object: _127.DefaultNodeInfoOtherAmino): _127.DefaultNodeInfoOther;
            toAmino(message: _127.DefaultNodeInfoOther): _127.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _127.DefaultNodeInfoOtherAminoMsg): _127.DefaultNodeInfoOther;
            fromProtoMsg(message: _127.DefaultNodeInfoOtherProtoMsg): _127.DefaultNodeInfoOther;
            toProto(message: _127.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _127.DefaultNodeInfoOther): _127.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _132.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _132.ValidatorSet;
            fromPartial(object: Partial<_132.ValidatorSet>): _132.ValidatorSet;
            fromAmino(object: _132.ValidatorSetAmino): _132.ValidatorSet;
            toAmino(message: _132.ValidatorSet): _132.ValidatorSetAmino;
            fromAminoMsg(object: _132.ValidatorSetAminoMsg): _132.ValidatorSet;
            fromProtoMsg(message: _132.ValidatorSetProtoMsg): _132.ValidatorSet;
            toProto(message: _132.ValidatorSet): Uint8Array;
            toProtoMsg(message: _132.ValidatorSet): _132.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _132.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _132.Validator;
            fromPartial(object: Partial<_132.Validator>): _132.Validator;
            fromAmino(object: _132.ValidatorAmino): _132.Validator;
            toAmino(message: _132.Validator): _132.ValidatorAmino;
            fromAminoMsg(object: _132.ValidatorAminoMsg): _132.Validator;
            fromProtoMsg(message: _132.ValidatorProtoMsg): _132.Validator;
            toProto(message: _132.Validator): Uint8Array;
            toProtoMsg(message: _132.Validator): _132.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _132.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _132.SimpleValidator;
            fromPartial(object: Partial<_132.SimpleValidator>): _132.SimpleValidator;
            fromAmino(object: _132.SimpleValidatorAmino): _132.SimpleValidator;
            toAmino(message: _132.SimpleValidator): _132.SimpleValidatorAmino;
            fromAminoMsg(object: _132.SimpleValidatorAminoMsg): _132.SimpleValidator;
            fromProtoMsg(message: _132.SimpleValidatorProtoMsg): _132.SimpleValidator;
            toProto(message: _132.SimpleValidator): Uint8Array;
            toProtoMsg(message: _132.SimpleValidator): _132.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _131.BlockIDFlag;
        blockIDFlagToJSON(object: _131.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _131.SignedMsgType;
        signedMsgTypeToJSON(object: _131.SignedMsgType): string;
        BlockIDFlag: typeof _131.BlockIDFlag;
        BlockIDFlagSDKType: typeof _131.BlockIDFlag;
        BlockIDFlagAmino: typeof _131.BlockIDFlag;
        SignedMsgType: typeof _131.SignedMsgType;
        SignedMsgTypeSDKType: typeof _131.SignedMsgType;
        SignedMsgTypeAmino: typeof _131.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _131.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.PartSetHeader;
            fromPartial(object: Partial<_131.PartSetHeader>): _131.PartSetHeader;
            fromAmino(object: _131.PartSetHeaderAmino): _131.PartSetHeader;
            toAmino(message: _131.PartSetHeader): _131.PartSetHeaderAmino;
            fromAminoMsg(object: _131.PartSetHeaderAminoMsg): _131.PartSetHeader;
            fromProtoMsg(message: _131.PartSetHeaderProtoMsg): _131.PartSetHeader;
            toProto(message: _131.PartSetHeader): Uint8Array;
            toProtoMsg(message: _131.PartSetHeader): _131.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _131.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.Part;
            fromPartial(object: Partial<_131.Part>): _131.Part;
            fromAmino(object: _131.PartAmino): _131.Part;
            toAmino(message: _131.Part): _131.PartAmino;
            fromAminoMsg(object: _131.PartAminoMsg): _131.Part;
            fromProtoMsg(message: _131.PartProtoMsg): _131.Part;
            toProto(message: _131.Part): Uint8Array;
            toProtoMsg(message: _131.Part): _131.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _131.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.BlockID;
            fromPartial(object: Partial<_131.BlockID>): _131.BlockID;
            fromAmino(object: _131.BlockIDAmino): _131.BlockID;
            toAmino(message: _131.BlockID): _131.BlockIDAmino;
            fromAminoMsg(object: _131.BlockIDAminoMsg): _131.BlockID;
            fromProtoMsg(message: _131.BlockIDProtoMsg): _131.BlockID;
            toProto(message: _131.BlockID): Uint8Array;
            toProtoMsg(message: _131.BlockID): _131.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _131.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.Header;
            fromPartial(object: Partial<_131.Header>): _131.Header;
            fromAmino(object: _131.HeaderAmino): _131.Header;
            toAmino(message: _131.Header): _131.HeaderAmino;
            fromAminoMsg(object: _131.HeaderAminoMsg): _131.Header;
            fromProtoMsg(message: _131.HeaderProtoMsg): _131.Header;
            toProto(message: _131.Header): Uint8Array;
            toProtoMsg(message: _131.Header): _131.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _131.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.Data;
            fromPartial(object: Partial<_131.Data>): _131.Data;
            fromAmino(object: _131.DataAmino): _131.Data;
            toAmino(message: _131.Data): _131.DataAmino;
            fromAminoMsg(object: _131.DataAminoMsg): _131.Data;
            fromProtoMsg(message: _131.DataProtoMsg): _131.Data;
            toProto(message: _131.Data): Uint8Array;
            toProtoMsg(message: _131.Data): _131.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _131.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.Vote;
            fromPartial(object: Partial<_131.Vote>): _131.Vote;
            fromAmino(object: _131.VoteAmino): _131.Vote;
            toAmino(message: _131.Vote): _131.VoteAmino;
            fromAminoMsg(object: _131.VoteAminoMsg): _131.Vote;
            fromProtoMsg(message: _131.VoteProtoMsg): _131.Vote;
            toProto(message: _131.Vote): Uint8Array;
            toProtoMsg(message: _131.Vote): _131.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _131.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.Commit;
            fromPartial(object: Partial<_131.Commit>): _131.Commit;
            fromAmino(object: _131.CommitAmino): _131.Commit;
            toAmino(message: _131.Commit): _131.CommitAmino;
            fromAminoMsg(object: _131.CommitAminoMsg): _131.Commit;
            fromProtoMsg(message: _131.CommitProtoMsg): _131.Commit;
            toProto(message: _131.Commit): Uint8Array;
            toProtoMsg(message: _131.Commit): _131.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _131.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.CommitSig;
            fromPartial(object: Partial<_131.CommitSig>): _131.CommitSig;
            fromAmino(object: _131.CommitSigAmino): _131.CommitSig;
            toAmino(message: _131.CommitSig): _131.CommitSigAmino;
            fromAminoMsg(object: _131.CommitSigAminoMsg): _131.CommitSig;
            fromProtoMsg(message: _131.CommitSigProtoMsg): _131.CommitSig;
            toProto(message: _131.CommitSig): Uint8Array;
            toProtoMsg(message: _131.CommitSig): _131.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _131.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.Proposal;
            fromPartial(object: Partial<_131.Proposal>): _131.Proposal;
            fromAmino(object: _131.ProposalAmino): _131.Proposal;
            toAmino(message: _131.Proposal): _131.ProposalAmino;
            fromAminoMsg(object: _131.ProposalAminoMsg): _131.Proposal;
            fromProtoMsg(message: _131.ProposalProtoMsg): _131.Proposal;
            toProto(message: _131.Proposal): Uint8Array;
            toProtoMsg(message: _131.Proposal): _131.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _131.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.SignedHeader;
            fromPartial(object: Partial<_131.SignedHeader>): _131.SignedHeader;
            fromAmino(object: _131.SignedHeaderAmino): _131.SignedHeader;
            toAmino(message: _131.SignedHeader): _131.SignedHeaderAmino;
            fromAminoMsg(object: _131.SignedHeaderAminoMsg): _131.SignedHeader;
            fromProtoMsg(message: _131.SignedHeaderProtoMsg): _131.SignedHeader;
            toProto(message: _131.SignedHeader): Uint8Array;
            toProtoMsg(message: _131.SignedHeader): _131.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _131.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.LightBlock;
            fromPartial(object: Partial<_131.LightBlock>): _131.LightBlock;
            fromAmino(object: _131.LightBlockAmino): _131.LightBlock;
            toAmino(message: _131.LightBlock): _131.LightBlockAmino;
            fromAminoMsg(object: _131.LightBlockAminoMsg): _131.LightBlock;
            fromProtoMsg(message: _131.LightBlockProtoMsg): _131.LightBlock;
            toProto(message: _131.LightBlock): Uint8Array;
            toProtoMsg(message: _131.LightBlock): _131.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _131.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.BlockMeta;
            fromPartial(object: Partial<_131.BlockMeta>): _131.BlockMeta;
            fromAmino(object: _131.BlockMetaAmino): _131.BlockMeta;
            toAmino(message: _131.BlockMeta): _131.BlockMetaAmino;
            fromAminoMsg(object: _131.BlockMetaAminoMsg): _131.BlockMeta;
            fromProtoMsg(message: _131.BlockMetaProtoMsg): _131.BlockMeta;
            toProto(message: _131.BlockMeta): Uint8Array;
            toProtoMsg(message: _131.BlockMeta): _131.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _131.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.TxProof;
            fromPartial(object: Partial<_131.TxProof>): _131.TxProof;
            fromAmino(object: _131.TxProofAmino): _131.TxProof;
            toAmino(message: _131.TxProof): _131.TxProofAmino;
            fromAminoMsg(object: _131.TxProofAminoMsg): _131.TxProof;
            fromProtoMsg(message: _131.TxProofProtoMsg): _131.TxProof;
            toProto(message: _131.TxProof): Uint8Array;
            toProtoMsg(message: _131.TxProof): _131.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _130.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ConsensusParams;
            fromPartial(object: Partial<_130.ConsensusParams>): _130.ConsensusParams;
            fromAmino(object: _130.ConsensusParamsAmino): _130.ConsensusParams;
            toAmino(message: _130.ConsensusParams): _130.ConsensusParamsAmino;
            fromAminoMsg(object: _130.ConsensusParamsAminoMsg): _130.ConsensusParams;
            fromProtoMsg(message: _130.ConsensusParamsProtoMsg): _130.ConsensusParams;
            toProto(message: _130.ConsensusParams): Uint8Array;
            toProtoMsg(message: _130.ConsensusParams): _130.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _130.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.BlockParams;
            fromPartial(object: Partial<_130.BlockParams>): _130.BlockParams;
            fromAmino(object: _130.BlockParamsAmino): _130.BlockParams;
            toAmino(message: _130.BlockParams): _130.BlockParamsAmino;
            fromAminoMsg(object: _130.BlockParamsAminoMsg): _130.BlockParams;
            fromProtoMsg(message: _130.BlockParamsProtoMsg): _130.BlockParams;
            toProto(message: _130.BlockParams): Uint8Array;
            toProtoMsg(message: _130.BlockParams): _130.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _130.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.EvidenceParams;
            fromPartial(object: Partial<_130.EvidenceParams>): _130.EvidenceParams;
            fromAmino(object: _130.EvidenceParamsAmino): _130.EvidenceParams;
            toAmino(message: _130.EvidenceParams): _130.EvidenceParamsAmino;
            fromAminoMsg(object: _130.EvidenceParamsAminoMsg): _130.EvidenceParams;
            fromProtoMsg(message: _130.EvidenceParamsProtoMsg): _130.EvidenceParams;
            toProto(message: _130.EvidenceParams): Uint8Array;
            toProtoMsg(message: _130.EvidenceParams): _130.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _130.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ValidatorParams;
            fromPartial(object: Partial<_130.ValidatorParams>): _130.ValidatorParams;
            fromAmino(object: _130.ValidatorParamsAmino): _130.ValidatorParams;
            toAmino(message: _130.ValidatorParams): _130.ValidatorParamsAmino;
            fromAminoMsg(object: _130.ValidatorParamsAminoMsg): _130.ValidatorParams;
            fromProtoMsg(message: _130.ValidatorParamsProtoMsg): _130.ValidatorParams;
            toProto(message: _130.ValidatorParams): Uint8Array;
            toProtoMsg(message: _130.ValidatorParams): _130.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _130.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.VersionParams;
            fromPartial(object: Partial<_130.VersionParams>): _130.VersionParams;
            fromAmino(object: _130.VersionParamsAmino): _130.VersionParams;
            toAmino(message: _130.VersionParams): _130.VersionParamsAmino;
            fromAminoMsg(object: _130.VersionParamsAminoMsg): _130.VersionParams;
            fromProtoMsg(message: _130.VersionParamsProtoMsg): _130.VersionParams;
            toProto(message: _130.VersionParams): Uint8Array;
            toProtoMsg(message: _130.VersionParams): _130.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _130.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.HashedParams;
            fromPartial(object: Partial<_130.HashedParams>): _130.HashedParams;
            fromAmino(object: _130.HashedParamsAmino): _130.HashedParams;
            toAmino(message: _130.HashedParams): _130.HashedParamsAmino;
            fromAminoMsg(object: _130.HashedParamsAminoMsg): _130.HashedParams;
            fromProtoMsg(message: _130.HashedParamsProtoMsg): _130.HashedParams;
            toProto(message: _130.HashedParams): Uint8Array;
            toProtoMsg(message: _130.HashedParams): _130.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _129.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _129.Evidence;
            fromPartial(object: Partial<_129.Evidence>): _129.Evidence;
            fromAmino(object: _129.EvidenceAmino): _129.Evidence;
            toAmino(message: _129.Evidence): _129.EvidenceAmino;
            fromAminoMsg(object: _129.EvidenceAminoMsg): _129.Evidence;
            fromProtoMsg(message: _129.EvidenceProtoMsg): _129.Evidence;
            toProto(message: _129.Evidence): Uint8Array;
            toProtoMsg(message: _129.Evidence): _129.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _129.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _129.DuplicateVoteEvidence;
            fromPartial(object: Partial<_129.DuplicateVoteEvidence>): _129.DuplicateVoteEvidence;
            fromAmino(object: _129.DuplicateVoteEvidenceAmino): _129.DuplicateVoteEvidence;
            toAmino(message: _129.DuplicateVoteEvidence): _129.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _129.DuplicateVoteEvidenceAminoMsg): _129.DuplicateVoteEvidence;
            fromProtoMsg(message: _129.DuplicateVoteEvidenceProtoMsg): _129.DuplicateVoteEvidence;
            toProto(message: _129.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _129.DuplicateVoteEvidence): _129.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _129.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _129.LightClientAttackEvidence;
            fromPartial(object: Partial<_129.LightClientAttackEvidence>): _129.LightClientAttackEvidence;
            fromAmino(object: _129.LightClientAttackEvidenceAmino): _129.LightClientAttackEvidence;
            toAmino(message: _129.LightClientAttackEvidence): _129.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _129.LightClientAttackEvidenceAminoMsg): _129.LightClientAttackEvidence;
            fromProtoMsg(message: _129.LightClientAttackEvidenceProtoMsg): _129.LightClientAttackEvidence;
            toProto(message: _129.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _129.LightClientAttackEvidence): _129.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _129.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _129.EvidenceList;
            fromPartial(object: Partial<_129.EvidenceList>): _129.EvidenceList;
            fromAmino(object: _129.EvidenceListAmino): _129.EvidenceList;
            toAmino(message: _129.EvidenceList): _129.EvidenceListAmino;
            fromAminoMsg(object: _129.EvidenceListAminoMsg): _129.EvidenceList;
            fromProtoMsg(message: _129.EvidenceListProtoMsg): _129.EvidenceList;
            toProto(message: _129.EvidenceList): Uint8Array;
            toProtoMsg(message: _129.EvidenceList): _129.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _128.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _128.Block;
            fromPartial(object: Partial<_128.Block>): _128.Block;
            fromAmino(object: _128.BlockAmino): _128.Block;
            toAmino(message: _128.Block): _128.BlockAmino;
            fromAminoMsg(object: _128.BlockAminoMsg): _128.Block;
            fromProtoMsg(message: _128.BlockProtoMsg): _128.Block;
            toProto(message: _128.Block): Uint8Array;
            toProtoMsg(message: _128.Block): _128.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _133.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _133.App;
            fromPartial(object: Partial<_133.App>): _133.App;
            fromAmino(object: _133.AppAmino): _133.App;
            toAmino(message: _133.App): _133.AppAmino;
            fromAminoMsg(object: _133.AppAminoMsg): _133.App;
            fromProtoMsg(message: _133.AppProtoMsg): _133.App;
            toProto(message: _133.App): Uint8Array;
            toProtoMsg(message: _133.App): _133.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _133.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _133.Consensus;
            fromPartial(object: Partial<_133.Consensus>): _133.Consensus;
            fromAmino(object: _133.ConsensusAmino): _133.Consensus;
            toAmino(message: _133.Consensus): _133.ConsensusAmino;
            fromAminoMsg(object: _133.ConsensusAminoMsg): _133.Consensus;
            fromProtoMsg(message: _133.ConsensusProtoMsg): _133.Consensus;
            toProto(message: _133.Consensus): Uint8Array;
            toProtoMsg(message: _133.Consensus): _133.ConsensusProtoMsg;
        };
    };
}
