import * as _108 from "./abci/types";
import * as _109 from "./crypto/keys";
import * as _110 from "./crypto/proof";
import * as _111 from "./libs/bits/types";
import * as _112 from "./p2p/types";
import * as _113 from "./types/block";
import * as _114 from "./types/evidence";
import * as _115 from "./types/params";
import * as _116 from "./types/types";
import * as _117 from "./types/validator";
import * as _118 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _108.CheckTxType;
        checkTxTypeToJSON(object: _108.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _108.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _108.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _108.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _108.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _108.EvidenceType;
        evidenceTypeToJSON(object: _108.EvidenceType): string;
        CheckTxType: typeof _108.CheckTxType;
        CheckTxTypeSDKType: typeof _108.CheckTxType;
        CheckTxTypeAmino: typeof _108.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _108.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _108.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _108.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _108.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _108.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _108.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _108.EvidenceType;
        EvidenceTypeSDKType: typeof _108.EvidenceType;
        EvidenceTypeAmino: typeof _108.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _108.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.Request;
            fromPartial(object: Partial<_108.Request>): _108.Request;
            fromAmino(object: _108.RequestAmino): _108.Request;
            toAmino(message: _108.Request): _108.RequestAmino;
            fromAminoMsg(object: _108.RequestAminoMsg): _108.Request;
            fromProtoMsg(message: _108.RequestProtoMsg): _108.Request;
            toProto(message: _108.Request): Uint8Array;
            toProtoMsg(message: _108.Request): _108.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _108.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestEcho;
            fromPartial(object: Partial<_108.RequestEcho>): _108.RequestEcho;
            fromAmino(object: _108.RequestEchoAmino): _108.RequestEcho;
            toAmino(message: _108.RequestEcho): _108.RequestEchoAmino;
            fromAminoMsg(object: _108.RequestEchoAminoMsg): _108.RequestEcho;
            fromProtoMsg(message: _108.RequestEchoProtoMsg): _108.RequestEcho;
            toProto(message: _108.RequestEcho): Uint8Array;
            toProtoMsg(message: _108.RequestEcho): _108.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _108.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _108.RequestFlush;
            fromPartial(_: Partial<_108.RequestFlush>): _108.RequestFlush;
            fromAmino(_: _108.RequestFlushAmino): _108.RequestFlush;
            toAmino(_: _108.RequestFlush): _108.RequestFlushAmino;
            fromAminoMsg(object: _108.RequestFlushAminoMsg): _108.RequestFlush;
            fromProtoMsg(message: _108.RequestFlushProtoMsg): _108.RequestFlush;
            toProto(message: _108.RequestFlush): Uint8Array;
            toProtoMsg(message: _108.RequestFlush): _108.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _108.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestInfo;
            fromPartial(object: Partial<_108.RequestInfo>): _108.RequestInfo;
            fromAmino(object: _108.RequestInfoAmino): _108.RequestInfo;
            toAmino(message: _108.RequestInfo): _108.RequestInfoAmino;
            fromAminoMsg(object: _108.RequestInfoAminoMsg): _108.RequestInfo;
            fromProtoMsg(message: _108.RequestInfoProtoMsg): _108.RequestInfo;
            toProto(message: _108.RequestInfo): Uint8Array;
            toProtoMsg(message: _108.RequestInfo): _108.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _108.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestSetOption;
            fromPartial(object: Partial<_108.RequestSetOption>): _108.RequestSetOption;
            fromAmino(object: _108.RequestSetOptionAmino): _108.RequestSetOption;
            toAmino(message: _108.RequestSetOption): _108.RequestSetOptionAmino;
            fromAminoMsg(object: _108.RequestSetOptionAminoMsg): _108.RequestSetOption;
            fromProtoMsg(message: _108.RequestSetOptionProtoMsg): _108.RequestSetOption;
            toProto(message: _108.RequestSetOption): Uint8Array;
            toProtoMsg(message: _108.RequestSetOption): _108.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _108.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestInitChain;
            fromPartial(object: Partial<_108.RequestInitChain>): _108.RequestInitChain;
            fromAmino(object: _108.RequestInitChainAmino): _108.RequestInitChain;
            toAmino(message: _108.RequestInitChain): _108.RequestInitChainAmino;
            fromAminoMsg(object: _108.RequestInitChainAminoMsg): _108.RequestInitChain;
            fromProtoMsg(message: _108.RequestInitChainProtoMsg): _108.RequestInitChain;
            toProto(message: _108.RequestInitChain): Uint8Array;
            toProtoMsg(message: _108.RequestInitChain): _108.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _108.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestQuery;
            fromPartial(object: Partial<_108.RequestQuery>): _108.RequestQuery;
            fromAmino(object: _108.RequestQueryAmino): _108.RequestQuery;
            toAmino(message: _108.RequestQuery): _108.RequestQueryAmino;
            fromAminoMsg(object: _108.RequestQueryAminoMsg): _108.RequestQuery;
            fromProtoMsg(message: _108.RequestQueryProtoMsg): _108.RequestQuery;
            toProto(message: _108.RequestQuery): Uint8Array;
            toProtoMsg(message: _108.RequestQuery): _108.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _108.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestBeginBlock;
            fromPartial(object: Partial<_108.RequestBeginBlock>): _108.RequestBeginBlock;
            fromAmino(object: _108.RequestBeginBlockAmino): _108.RequestBeginBlock;
            toAmino(message: _108.RequestBeginBlock): _108.RequestBeginBlockAmino;
            fromAminoMsg(object: _108.RequestBeginBlockAminoMsg): _108.RequestBeginBlock;
            fromProtoMsg(message: _108.RequestBeginBlockProtoMsg): _108.RequestBeginBlock;
            toProto(message: _108.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _108.RequestBeginBlock): _108.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _108.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestCheckTx;
            fromPartial(object: Partial<_108.RequestCheckTx>): _108.RequestCheckTx;
            fromAmino(object: _108.RequestCheckTxAmino): _108.RequestCheckTx;
            toAmino(message: _108.RequestCheckTx): _108.RequestCheckTxAmino;
            fromAminoMsg(object: _108.RequestCheckTxAminoMsg): _108.RequestCheckTx;
            fromProtoMsg(message: _108.RequestCheckTxProtoMsg): _108.RequestCheckTx;
            toProto(message: _108.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _108.RequestCheckTx): _108.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _108.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestDeliverTx;
            fromPartial(object: Partial<_108.RequestDeliverTx>): _108.RequestDeliverTx;
            fromAmino(object: _108.RequestDeliverTxAmino): _108.RequestDeliverTx;
            toAmino(message: _108.RequestDeliverTx): _108.RequestDeliverTxAmino;
            fromAminoMsg(object: _108.RequestDeliverTxAminoMsg): _108.RequestDeliverTx;
            fromProtoMsg(message: _108.RequestDeliverTxProtoMsg): _108.RequestDeliverTx;
            toProto(message: _108.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _108.RequestDeliverTx): _108.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _108.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestEndBlock;
            fromPartial(object: Partial<_108.RequestEndBlock>): _108.RequestEndBlock;
            fromAmino(object: _108.RequestEndBlockAmino): _108.RequestEndBlock;
            toAmino(message: _108.RequestEndBlock): _108.RequestEndBlockAmino;
            fromAminoMsg(object: _108.RequestEndBlockAminoMsg): _108.RequestEndBlock;
            fromProtoMsg(message: _108.RequestEndBlockProtoMsg): _108.RequestEndBlock;
            toProto(message: _108.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _108.RequestEndBlock): _108.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _108.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _108.RequestCommit;
            fromPartial(_: Partial<_108.RequestCommit>): _108.RequestCommit;
            fromAmino(_: _108.RequestCommitAmino): _108.RequestCommit;
            toAmino(_: _108.RequestCommit): _108.RequestCommitAmino;
            fromAminoMsg(object: _108.RequestCommitAminoMsg): _108.RequestCommit;
            fromProtoMsg(message: _108.RequestCommitProtoMsg): _108.RequestCommit;
            toProto(message: _108.RequestCommit): Uint8Array;
            toProtoMsg(message: _108.RequestCommit): _108.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _108.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _108.RequestListSnapshots;
            fromPartial(_: Partial<_108.RequestListSnapshots>): _108.RequestListSnapshots;
            fromAmino(_: _108.RequestListSnapshotsAmino): _108.RequestListSnapshots;
            toAmino(_: _108.RequestListSnapshots): _108.RequestListSnapshotsAmino;
            fromAminoMsg(object: _108.RequestListSnapshotsAminoMsg): _108.RequestListSnapshots;
            fromProtoMsg(message: _108.RequestListSnapshotsProtoMsg): _108.RequestListSnapshots;
            toProto(message: _108.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _108.RequestListSnapshots): _108.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _108.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestOfferSnapshot;
            fromPartial(object: Partial<_108.RequestOfferSnapshot>): _108.RequestOfferSnapshot;
            fromAmino(object: _108.RequestOfferSnapshotAmino): _108.RequestOfferSnapshot;
            toAmino(message: _108.RequestOfferSnapshot): _108.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _108.RequestOfferSnapshotAminoMsg): _108.RequestOfferSnapshot;
            fromProtoMsg(message: _108.RequestOfferSnapshotProtoMsg): _108.RequestOfferSnapshot;
            toProto(message: _108.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _108.RequestOfferSnapshot): _108.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _108.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_108.RequestLoadSnapshotChunk>): _108.RequestLoadSnapshotChunk;
            fromAmino(object: _108.RequestLoadSnapshotChunkAmino): _108.RequestLoadSnapshotChunk;
            toAmino(message: _108.RequestLoadSnapshotChunk): _108.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _108.RequestLoadSnapshotChunkAminoMsg): _108.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _108.RequestLoadSnapshotChunkProtoMsg): _108.RequestLoadSnapshotChunk;
            toProto(message: _108.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _108.RequestLoadSnapshotChunk): _108.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _108.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_108.RequestApplySnapshotChunk>): _108.RequestApplySnapshotChunk;
            fromAmino(object: _108.RequestApplySnapshotChunkAmino): _108.RequestApplySnapshotChunk;
            toAmino(message: _108.RequestApplySnapshotChunk): _108.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _108.RequestApplySnapshotChunkAminoMsg): _108.RequestApplySnapshotChunk;
            fromProtoMsg(message: _108.RequestApplySnapshotChunkProtoMsg): _108.RequestApplySnapshotChunk;
            toProto(message: _108.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _108.RequestApplySnapshotChunk): _108.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _108.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.Response;
            fromPartial(object: Partial<_108.Response>): _108.Response;
            fromAmino(object: _108.ResponseAmino): _108.Response;
            toAmino(message: _108.Response): _108.ResponseAmino;
            fromAminoMsg(object: _108.ResponseAminoMsg): _108.Response;
            fromProtoMsg(message: _108.ResponseProtoMsg): _108.Response;
            toProto(message: _108.Response): Uint8Array;
            toProtoMsg(message: _108.Response): _108.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _108.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseException;
            fromPartial(object: Partial<_108.ResponseException>): _108.ResponseException;
            fromAmino(object: _108.ResponseExceptionAmino): _108.ResponseException;
            toAmino(message: _108.ResponseException): _108.ResponseExceptionAmino;
            fromAminoMsg(object: _108.ResponseExceptionAminoMsg): _108.ResponseException;
            fromProtoMsg(message: _108.ResponseExceptionProtoMsg): _108.ResponseException;
            toProto(message: _108.ResponseException): Uint8Array;
            toProtoMsg(message: _108.ResponseException): _108.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _108.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseEcho;
            fromPartial(object: Partial<_108.ResponseEcho>): _108.ResponseEcho;
            fromAmino(object: _108.ResponseEchoAmino): _108.ResponseEcho;
            toAmino(message: _108.ResponseEcho): _108.ResponseEchoAmino;
            fromAminoMsg(object: _108.ResponseEchoAminoMsg): _108.ResponseEcho;
            fromProtoMsg(message: _108.ResponseEchoProtoMsg): _108.ResponseEcho;
            toProto(message: _108.ResponseEcho): Uint8Array;
            toProtoMsg(message: _108.ResponseEcho): _108.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _108.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _108.ResponseFlush;
            fromPartial(_: Partial<_108.ResponseFlush>): _108.ResponseFlush;
            fromAmino(_: _108.ResponseFlushAmino): _108.ResponseFlush;
            toAmino(_: _108.ResponseFlush): _108.ResponseFlushAmino;
            fromAminoMsg(object: _108.ResponseFlushAminoMsg): _108.ResponseFlush;
            fromProtoMsg(message: _108.ResponseFlushProtoMsg): _108.ResponseFlush;
            toProto(message: _108.ResponseFlush): Uint8Array;
            toProtoMsg(message: _108.ResponseFlush): _108.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _108.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseInfo;
            fromPartial(object: Partial<_108.ResponseInfo>): _108.ResponseInfo;
            fromAmino(object: _108.ResponseInfoAmino): _108.ResponseInfo;
            toAmino(message: _108.ResponseInfo): _108.ResponseInfoAmino;
            fromAminoMsg(object: _108.ResponseInfoAminoMsg): _108.ResponseInfo;
            fromProtoMsg(message: _108.ResponseInfoProtoMsg): _108.ResponseInfo;
            toProto(message: _108.ResponseInfo): Uint8Array;
            toProtoMsg(message: _108.ResponseInfo): _108.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _108.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseSetOption;
            fromPartial(object: Partial<_108.ResponseSetOption>): _108.ResponseSetOption;
            fromAmino(object: _108.ResponseSetOptionAmino): _108.ResponseSetOption;
            toAmino(message: _108.ResponseSetOption): _108.ResponseSetOptionAmino;
            fromAminoMsg(object: _108.ResponseSetOptionAminoMsg): _108.ResponseSetOption;
            fromProtoMsg(message: _108.ResponseSetOptionProtoMsg): _108.ResponseSetOption;
            toProto(message: _108.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _108.ResponseSetOption): _108.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _108.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseInitChain;
            fromPartial(object: Partial<_108.ResponseInitChain>): _108.ResponseInitChain;
            fromAmino(object: _108.ResponseInitChainAmino): _108.ResponseInitChain;
            toAmino(message: _108.ResponseInitChain): _108.ResponseInitChainAmino;
            fromAminoMsg(object: _108.ResponseInitChainAminoMsg): _108.ResponseInitChain;
            fromProtoMsg(message: _108.ResponseInitChainProtoMsg): _108.ResponseInitChain;
            toProto(message: _108.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _108.ResponseInitChain): _108.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _108.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseQuery;
            fromPartial(object: Partial<_108.ResponseQuery>): _108.ResponseQuery;
            fromAmino(object: _108.ResponseQueryAmino): _108.ResponseQuery;
            toAmino(message: _108.ResponseQuery): _108.ResponseQueryAmino;
            fromAminoMsg(object: _108.ResponseQueryAminoMsg): _108.ResponseQuery;
            fromProtoMsg(message: _108.ResponseQueryProtoMsg): _108.ResponseQuery;
            toProto(message: _108.ResponseQuery): Uint8Array;
            toProtoMsg(message: _108.ResponseQuery): _108.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _108.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseBeginBlock;
            fromPartial(object: Partial<_108.ResponseBeginBlock>): _108.ResponseBeginBlock;
            fromAmino(object: _108.ResponseBeginBlockAmino): _108.ResponseBeginBlock;
            toAmino(message: _108.ResponseBeginBlock): _108.ResponseBeginBlockAmino;
            fromAminoMsg(object: _108.ResponseBeginBlockAminoMsg): _108.ResponseBeginBlock;
            fromProtoMsg(message: _108.ResponseBeginBlockProtoMsg): _108.ResponseBeginBlock;
            toProto(message: _108.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _108.ResponseBeginBlock): _108.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _108.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseCheckTx;
            fromPartial(object: Partial<_108.ResponseCheckTx>): _108.ResponseCheckTx;
            fromAmino(object: _108.ResponseCheckTxAmino): _108.ResponseCheckTx;
            toAmino(message: _108.ResponseCheckTx): _108.ResponseCheckTxAmino;
            fromAminoMsg(object: _108.ResponseCheckTxAminoMsg): _108.ResponseCheckTx;
            fromProtoMsg(message: _108.ResponseCheckTxProtoMsg): _108.ResponseCheckTx;
            toProto(message: _108.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _108.ResponseCheckTx): _108.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _108.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseDeliverTx;
            fromPartial(object: Partial<_108.ResponseDeliverTx>): _108.ResponseDeliverTx;
            fromAmino(object: _108.ResponseDeliverTxAmino): _108.ResponseDeliverTx;
            toAmino(message: _108.ResponseDeliverTx): _108.ResponseDeliverTxAmino;
            fromAminoMsg(object: _108.ResponseDeliverTxAminoMsg): _108.ResponseDeliverTx;
            fromProtoMsg(message: _108.ResponseDeliverTxProtoMsg): _108.ResponseDeliverTx;
            toProto(message: _108.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _108.ResponseDeliverTx): _108.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _108.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseEndBlock;
            fromPartial(object: Partial<_108.ResponseEndBlock>): _108.ResponseEndBlock;
            fromAmino(object: _108.ResponseEndBlockAmino): _108.ResponseEndBlock;
            toAmino(message: _108.ResponseEndBlock): _108.ResponseEndBlockAmino;
            fromAminoMsg(object: _108.ResponseEndBlockAminoMsg): _108.ResponseEndBlock;
            fromProtoMsg(message: _108.ResponseEndBlockProtoMsg): _108.ResponseEndBlock;
            toProto(message: _108.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _108.ResponseEndBlock): _108.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _108.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseCommit;
            fromPartial(object: Partial<_108.ResponseCommit>): _108.ResponseCommit;
            fromAmino(object: _108.ResponseCommitAmino): _108.ResponseCommit;
            toAmino(message: _108.ResponseCommit): _108.ResponseCommitAmino;
            fromAminoMsg(object: _108.ResponseCommitAminoMsg): _108.ResponseCommit;
            fromProtoMsg(message: _108.ResponseCommitProtoMsg): _108.ResponseCommit;
            toProto(message: _108.ResponseCommit): Uint8Array;
            toProtoMsg(message: _108.ResponseCommit): _108.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _108.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseListSnapshots;
            fromPartial(object: Partial<_108.ResponseListSnapshots>): _108.ResponseListSnapshots;
            fromAmino(object: _108.ResponseListSnapshotsAmino): _108.ResponseListSnapshots;
            toAmino(message: _108.ResponseListSnapshots): _108.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _108.ResponseListSnapshotsAminoMsg): _108.ResponseListSnapshots;
            fromProtoMsg(message: _108.ResponseListSnapshotsProtoMsg): _108.ResponseListSnapshots;
            toProto(message: _108.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _108.ResponseListSnapshots): _108.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _108.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseOfferSnapshot;
            fromPartial(object: Partial<_108.ResponseOfferSnapshot>): _108.ResponseOfferSnapshot;
            fromAmino(object: _108.ResponseOfferSnapshotAmino): _108.ResponseOfferSnapshot;
            toAmino(message: _108.ResponseOfferSnapshot): _108.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _108.ResponseOfferSnapshotAminoMsg): _108.ResponseOfferSnapshot;
            fromProtoMsg(message: _108.ResponseOfferSnapshotProtoMsg): _108.ResponseOfferSnapshot;
            toProto(message: _108.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _108.ResponseOfferSnapshot): _108.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _108.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_108.ResponseLoadSnapshotChunk>): _108.ResponseLoadSnapshotChunk;
            fromAmino(object: _108.ResponseLoadSnapshotChunkAmino): _108.ResponseLoadSnapshotChunk;
            toAmino(message: _108.ResponseLoadSnapshotChunk): _108.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _108.ResponseLoadSnapshotChunkAminoMsg): _108.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _108.ResponseLoadSnapshotChunkProtoMsg): _108.ResponseLoadSnapshotChunk;
            toProto(message: _108.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _108.ResponseLoadSnapshotChunk): _108.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _108.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_108.ResponseApplySnapshotChunk>): _108.ResponseApplySnapshotChunk;
            fromAmino(object: _108.ResponseApplySnapshotChunkAmino): _108.ResponseApplySnapshotChunk;
            toAmino(message: _108.ResponseApplySnapshotChunk): _108.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _108.ResponseApplySnapshotChunkAminoMsg): _108.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _108.ResponseApplySnapshotChunkProtoMsg): _108.ResponseApplySnapshotChunk;
            toProto(message: _108.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _108.ResponseApplySnapshotChunk): _108.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _108.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ConsensusParams;
            fromPartial(object: Partial<_108.ConsensusParams>): _108.ConsensusParams;
            fromAmino(object: _108.ConsensusParamsAmino): _108.ConsensusParams;
            toAmino(message: _108.ConsensusParams): _108.ConsensusParamsAmino;
            fromAminoMsg(object: _108.ConsensusParamsAminoMsg): _108.ConsensusParams;
            fromProtoMsg(message: _108.ConsensusParamsProtoMsg): _108.ConsensusParams;
            toProto(message: _108.ConsensusParams): Uint8Array;
            toProtoMsg(message: _108.ConsensusParams): _108.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _108.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.BlockParams;
            fromPartial(object: Partial<_108.BlockParams>): _108.BlockParams;
            fromAmino(object: _108.BlockParamsAmino): _108.BlockParams;
            toAmino(message: _108.BlockParams): _108.BlockParamsAmino;
            fromAminoMsg(object: _108.BlockParamsAminoMsg): _108.BlockParams;
            fromProtoMsg(message: _108.BlockParamsProtoMsg): _108.BlockParams;
            toProto(message: _108.BlockParams): Uint8Array;
            toProtoMsg(message: _108.BlockParams): _108.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _108.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.LastCommitInfo;
            fromPartial(object: Partial<_108.LastCommitInfo>): _108.LastCommitInfo;
            fromAmino(object: _108.LastCommitInfoAmino): _108.LastCommitInfo;
            toAmino(message: _108.LastCommitInfo): _108.LastCommitInfoAmino;
            fromAminoMsg(object: _108.LastCommitInfoAminoMsg): _108.LastCommitInfo;
            fromProtoMsg(message: _108.LastCommitInfoProtoMsg): _108.LastCommitInfo;
            toProto(message: _108.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _108.LastCommitInfo): _108.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _108.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.Event;
            fromPartial(object: Partial<_108.Event>): _108.Event;
            fromAmino(object: _108.EventAmino): _108.Event;
            toAmino(message: _108.Event): _108.EventAmino;
            fromAminoMsg(object: _108.EventAminoMsg): _108.Event;
            fromProtoMsg(message: _108.EventProtoMsg): _108.Event;
            toProto(message: _108.Event): Uint8Array;
            toProtoMsg(message: _108.Event): _108.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _108.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.EventAttribute;
            fromPartial(object: Partial<_108.EventAttribute>): _108.EventAttribute;
            fromAmino(object: _108.EventAttributeAmino): _108.EventAttribute;
            toAmino(message: _108.EventAttribute): _108.EventAttributeAmino;
            fromAminoMsg(object: _108.EventAttributeAminoMsg): _108.EventAttribute;
            fromProtoMsg(message: _108.EventAttributeProtoMsg): _108.EventAttribute;
            toProto(message: _108.EventAttribute): Uint8Array;
            toProtoMsg(message: _108.EventAttribute): _108.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _108.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.TxResult;
            fromPartial(object: Partial<_108.TxResult>): _108.TxResult;
            fromAmino(object: _108.TxResultAmino): _108.TxResult;
            toAmino(message: _108.TxResult): _108.TxResultAmino;
            fromAminoMsg(object: _108.TxResultAminoMsg): _108.TxResult;
            fromProtoMsg(message: _108.TxResultProtoMsg): _108.TxResult;
            toProto(message: _108.TxResult): Uint8Array;
            toProtoMsg(message: _108.TxResult): _108.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _108.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.Validator;
            fromPartial(object: Partial<_108.Validator>): _108.Validator;
            fromAmino(object: _108.ValidatorAmino): _108.Validator;
            toAmino(message: _108.Validator): _108.ValidatorAmino;
            fromAminoMsg(object: _108.ValidatorAminoMsg): _108.Validator;
            fromProtoMsg(message: _108.ValidatorProtoMsg): _108.Validator;
            toProto(message: _108.Validator): Uint8Array;
            toProtoMsg(message: _108.Validator): _108.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _108.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.ValidatorUpdate;
            fromPartial(object: Partial<_108.ValidatorUpdate>): _108.ValidatorUpdate;
            fromAmino(object: _108.ValidatorUpdateAmino): _108.ValidatorUpdate;
            toAmino(message: _108.ValidatorUpdate): _108.ValidatorUpdateAmino;
            fromAminoMsg(object: _108.ValidatorUpdateAminoMsg): _108.ValidatorUpdate;
            fromProtoMsg(message: _108.ValidatorUpdateProtoMsg): _108.ValidatorUpdate;
            toProto(message: _108.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _108.ValidatorUpdate): _108.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _108.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.VoteInfo;
            fromPartial(object: Partial<_108.VoteInfo>): _108.VoteInfo;
            fromAmino(object: _108.VoteInfoAmino): _108.VoteInfo;
            toAmino(message: _108.VoteInfo): _108.VoteInfoAmino;
            fromAminoMsg(object: _108.VoteInfoAminoMsg): _108.VoteInfo;
            fromProtoMsg(message: _108.VoteInfoProtoMsg): _108.VoteInfo;
            toProto(message: _108.VoteInfo): Uint8Array;
            toProtoMsg(message: _108.VoteInfo): _108.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _108.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.Evidence;
            fromPartial(object: Partial<_108.Evidence>): _108.Evidence;
            fromAmino(object: _108.EvidenceAmino): _108.Evidence;
            toAmino(message: _108.Evidence): _108.EvidenceAmino;
            fromAminoMsg(object: _108.EvidenceAminoMsg): _108.Evidence;
            fromProtoMsg(message: _108.EvidenceProtoMsg): _108.Evidence;
            toProto(message: _108.Evidence): Uint8Array;
            toProtoMsg(message: _108.Evidence): _108.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _108.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.Snapshot;
            fromPartial(object: Partial<_108.Snapshot>): _108.Snapshot;
            fromAmino(object: _108.SnapshotAmino): _108.Snapshot;
            toAmino(message: _108.Snapshot): _108.SnapshotAmino;
            fromAminoMsg(object: _108.SnapshotAminoMsg): _108.Snapshot;
            fromProtoMsg(message: _108.SnapshotProtoMsg): _108.Snapshot;
            toProto(message: _108.Snapshot): Uint8Array;
            toProtoMsg(message: _108.Snapshot): _108.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _110.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.Proof;
            fromPartial(object: Partial<_110.Proof>): _110.Proof;
            fromAmino(object: _110.ProofAmino): _110.Proof;
            toAmino(message: _110.Proof): _110.ProofAmino;
            fromAminoMsg(object: _110.ProofAminoMsg): _110.Proof;
            fromProtoMsg(message: _110.ProofProtoMsg): _110.Proof;
            toProto(message: _110.Proof): Uint8Array;
            toProtoMsg(message: _110.Proof): _110.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _110.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ValueOp;
            fromPartial(object: Partial<_110.ValueOp>): _110.ValueOp;
            fromAmino(object: _110.ValueOpAmino): _110.ValueOp;
            toAmino(message: _110.ValueOp): _110.ValueOpAmino;
            fromAminoMsg(object: _110.ValueOpAminoMsg): _110.ValueOp;
            fromProtoMsg(message: _110.ValueOpProtoMsg): _110.ValueOp;
            toProto(message: _110.ValueOp): Uint8Array;
            toProtoMsg(message: _110.ValueOp): _110.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _110.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.DominoOp;
            fromPartial(object: Partial<_110.DominoOp>): _110.DominoOp;
            fromAmino(object: _110.DominoOpAmino): _110.DominoOp;
            toAmino(message: _110.DominoOp): _110.DominoOpAmino;
            fromAminoMsg(object: _110.DominoOpAminoMsg): _110.DominoOp;
            fromProtoMsg(message: _110.DominoOpProtoMsg): _110.DominoOp;
            toProto(message: _110.DominoOp): Uint8Array;
            toProtoMsg(message: _110.DominoOp): _110.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _110.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ProofOp;
            fromPartial(object: Partial<_110.ProofOp>): _110.ProofOp;
            fromAmino(object: _110.ProofOpAmino): _110.ProofOp;
            toAmino(message: _110.ProofOp): _110.ProofOpAmino;
            fromAminoMsg(object: _110.ProofOpAminoMsg): _110.ProofOp;
            fromProtoMsg(message: _110.ProofOpProtoMsg): _110.ProofOp;
            toProto(message: _110.ProofOp): Uint8Array;
            toProtoMsg(message: _110.ProofOp): _110.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _110.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ProofOps;
            fromPartial(object: Partial<_110.ProofOps>): _110.ProofOps;
            fromAmino(object: _110.ProofOpsAmino): _110.ProofOps;
            toAmino(message: _110.ProofOps): _110.ProofOpsAmino;
            fromAminoMsg(object: _110.ProofOpsAminoMsg): _110.ProofOps;
            fromProtoMsg(message: _110.ProofOpsProtoMsg): _110.ProofOps;
            toProto(message: _110.ProofOps): Uint8Array;
            toProtoMsg(message: _110.ProofOps): _110.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _109.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _109.PublicKey;
            fromPartial(object: Partial<_109.PublicKey>): _109.PublicKey;
            fromAmino(object: _109.PublicKeyAmino): _109.PublicKey;
            toAmino(message: _109.PublicKey): _109.PublicKeyAmino;
            fromAminoMsg(object: _109.PublicKeyAminoMsg): _109.PublicKey;
            fromProtoMsg(message: _109.PublicKeyProtoMsg): _109.PublicKey;
            toProto(message: _109.PublicKey): Uint8Array;
            toProtoMsg(message: _109.PublicKey): _109.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _111.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _111.BitArray;
                fromPartial(object: Partial<_111.BitArray>): _111.BitArray;
                fromAmino(object: _111.BitArrayAmino): _111.BitArray;
                toAmino(message: _111.BitArray): _111.BitArrayAmino;
                fromAminoMsg(object: _111.BitArrayAminoMsg): _111.BitArray;
                fromProtoMsg(message: _111.BitArrayProtoMsg): _111.BitArray;
                toProto(message: _111.BitArray): Uint8Array;
                toProtoMsg(message: _111.BitArray): _111.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _112.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.NetAddress;
            fromPartial(object: Partial<_112.NetAddress>): _112.NetAddress;
            fromAmino(object: _112.NetAddressAmino): _112.NetAddress;
            toAmino(message: _112.NetAddress): _112.NetAddressAmino;
            fromAminoMsg(object: _112.NetAddressAminoMsg): _112.NetAddress;
            fromProtoMsg(message: _112.NetAddressProtoMsg): _112.NetAddress;
            toProto(message: _112.NetAddress): Uint8Array;
            toProtoMsg(message: _112.NetAddress): _112.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _112.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ProtocolVersion;
            fromPartial(object: Partial<_112.ProtocolVersion>): _112.ProtocolVersion;
            fromAmino(object: _112.ProtocolVersionAmino): _112.ProtocolVersion;
            toAmino(message: _112.ProtocolVersion): _112.ProtocolVersionAmino;
            fromAminoMsg(object: _112.ProtocolVersionAminoMsg): _112.ProtocolVersion;
            fromProtoMsg(message: _112.ProtocolVersionProtoMsg): _112.ProtocolVersion;
            toProto(message: _112.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _112.ProtocolVersion): _112.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _112.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.DefaultNodeInfo;
            fromPartial(object: Partial<_112.DefaultNodeInfo>): _112.DefaultNodeInfo;
            fromAmino(object: _112.DefaultNodeInfoAmino): _112.DefaultNodeInfo;
            toAmino(message: _112.DefaultNodeInfo): _112.DefaultNodeInfoAmino;
            fromAminoMsg(object: _112.DefaultNodeInfoAminoMsg): _112.DefaultNodeInfo;
            fromProtoMsg(message: _112.DefaultNodeInfoProtoMsg): _112.DefaultNodeInfo;
            toProto(message: _112.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _112.DefaultNodeInfo): _112.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _112.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.DefaultNodeInfoOther;
            fromPartial(object: Partial<_112.DefaultNodeInfoOther>): _112.DefaultNodeInfoOther;
            fromAmino(object: _112.DefaultNodeInfoOtherAmino): _112.DefaultNodeInfoOther;
            toAmino(message: _112.DefaultNodeInfoOther): _112.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _112.DefaultNodeInfoOtherAminoMsg): _112.DefaultNodeInfoOther;
            fromProtoMsg(message: _112.DefaultNodeInfoOtherProtoMsg): _112.DefaultNodeInfoOther;
            toProto(message: _112.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _112.DefaultNodeInfoOther): _112.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _117.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.ValidatorSet;
            fromPartial(object: Partial<_117.ValidatorSet>): _117.ValidatorSet;
            fromAmino(object: _117.ValidatorSetAmino): _117.ValidatorSet;
            toAmino(message: _117.ValidatorSet): _117.ValidatorSetAmino;
            fromAminoMsg(object: _117.ValidatorSetAminoMsg): _117.ValidatorSet;
            fromProtoMsg(message: _117.ValidatorSetProtoMsg): _117.ValidatorSet;
            toProto(message: _117.ValidatorSet): Uint8Array;
            toProtoMsg(message: _117.ValidatorSet): _117.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _117.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.Validator;
            fromPartial(object: Partial<_117.Validator>): _117.Validator;
            fromAmino(object: _117.ValidatorAmino): _117.Validator;
            toAmino(message: _117.Validator): _117.ValidatorAmino;
            fromAminoMsg(object: _117.ValidatorAminoMsg): _117.Validator;
            fromProtoMsg(message: _117.ValidatorProtoMsg): _117.Validator;
            toProto(message: _117.Validator): Uint8Array;
            toProtoMsg(message: _117.Validator): _117.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _117.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.SimpleValidator;
            fromPartial(object: Partial<_117.SimpleValidator>): _117.SimpleValidator;
            fromAmino(object: _117.SimpleValidatorAmino): _117.SimpleValidator;
            toAmino(message: _117.SimpleValidator): _117.SimpleValidatorAmino;
            fromAminoMsg(object: _117.SimpleValidatorAminoMsg): _117.SimpleValidator;
            fromProtoMsg(message: _117.SimpleValidatorProtoMsg): _117.SimpleValidator;
            toProto(message: _117.SimpleValidator): Uint8Array;
            toProtoMsg(message: _117.SimpleValidator): _117.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _116.BlockIDFlag;
        blockIDFlagToJSON(object: _116.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _116.SignedMsgType;
        signedMsgTypeToJSON(object: _116.SignedMsgType): string;
        BlockIDFlag: typeof _116.BlockIDFlag;
        BlockIDFlagSDKType: typeof _116.BlockIDFlag;
        BlockIDFlagAmino: typeof _116.BlockIDFlag;
        SignedMsgType: typeof _116.SignedMsgType;
        SignedMsgTypeSDKType: typeof _116.SignedMsgType;
        SignedMsgTypeAmino: typeof _116.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _116.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.PartSetHeader;
            fromPartial(object: Partial<_116.PartSetHeader>): _116.PartSetHeader;
            fromAmino(object: _116.PartSetHeaderAmino): _116.PartSetHeader;
            toAmino(message: _116.PartSetHeader): _116.PartSetHeaderAmino;
            fromAminoMsg(object: _116.PartSetHeaderAminoMsg): _116.PartSetHeader;
            fromProtoMsg(message: _116.PartSetHeaderProtoMsg): _116.PartSetHeader;
            toProto(message: _116.PartSetHeader): Uint8Array;
            toProtoMsg(message: _116.PartSetHeader): _116.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _116.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.Part;
            fromPartial(object: Partial<_116.Part>): _116.Part;
            fromAmino(object: _116.PartAmino): _116.Part;
            toAmino(message: _116.Part): _116.PartAmino;
            fromAminoMsg(object: _116.PartAminoMsg): _116.Part;
            fromProtoMsg(message: _116.PartProtoMsg): _116.Part;
            toProto(message: _116.Part): Uint8Array;
            toProtoMsg(message: _116.Part): _116.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _116.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.BlockID;
            fromPartial(object: Partial<_116.BlockID>): _116.BlockID;
            fromAmino(object: _116.BlockIDAmino): _116.BlockID;
            toAmino(message: _116.BlockID): _116.BlockIDAmino;
            fromAminoMsg(object: _116.BlockIDAminoMsg): _116.BlockID;
            fromProtoMsg(message: _116.BlockIDProtoMsg): _116.BlockID;
            toProto(message: _116.BlockID): Uint8Array;
            toProtoMsg(message: _116.BlockID): _116.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _116.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.Header;
            fromPartial(object: Partial<_116.Header>): _116.Header;
            fromAmino(object: _116.HeaderAmino): _116.Header;
            toAmino(message: _116.Header): _116.HeaderAmino;
            fromAminoMsg(object: _116.HeaderAminoMsg): _116.Header;
            fromProtoMsg(message: _116.HeaderProtoMsg): _116.Header;
            toProto(message: _116.Header): Uint8Array;
            toProtoMsg(message: _116.Header): _116.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _116.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.Data;
            fromPartial(object: Partial<_116.Data>): _116.Data;
            fromAmino(object: _116.DataAmino): _116.Data;
            toAmino(message: _116.Data): _116.DataAmino;
            fromAminoMsg(object: _116.DataAminoMsg): _116.Data;
            fromProtoMsg(message: _116.DataProtoMsg): _116.Data;
            toProto(message: _116.Data): Uint8Array;
            toProtoMsg(message: _116.Data): _116.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _116.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.Vote;
            fromPartial(object: Partial<_116.Vote>): _116.Vote;
            fromAmino(object: _116.VoteAmino): _116.Vote;
            toAmino(message: _116.Vote): _116.VoteAmino;
            fromAminoMsg(object: _116.VoteAminoMsg): _116.Vote;
            fromProtoMsg(message: _116.VoteProtoMsg): _116.Vote;
            toProto(message: _116.Vote): Uint8Array;
            toProtoMsg(message: _116.Vote): _116.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _116.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.Commit;
            fromPartial(object: Partial<_116.Commit>): _116.Commit;
            fromAmino(object: _116.CommitAmino): _116.Commit;
            toAmino(message: _116.Commit): _116.CommitAmino;
            fromAminoMsg(object: _116.CommitAminoMsg): _116.Commit;
            fromProtoMsg(message: _116.CommitProtoMsg): _116.Commit;
            toProto(message: _116.Commit): Uint8Array;
            toProtoMsg(message: _116.Commit): _116.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _116.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.CommitSig;
            fromPartial(object: Partial<_116.CommitSig>): _116.CommitSig;
            fromAmino(object: _116.CommitSigAmino): _116.CommitSig;
            toAmino(message: _116.CommitSig): _116.CommitSigAmino;
            fromAminoMsg(object: _116.CommitSigAminoMsg): _116.CommitSig;
            fromProtoMsg(message: _116.CommitSigProtoMsg): _116.CommitSig;
            toProto(message: _116.CommitSig): Uint8Array;
            toProtoMsg(message: _116.CommitSig): _116.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _116.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.Proposal;
            fromPartial(object: Partial<_116.Proposal>): _116.Proposal;
            fromAmino(object: _116.ProposalAmino): _116.Proposal;
            toAmino(message: _116.Proposal): _116.ProposalAmino;
            fromAminoMsg(object: _116.ProposalAminoMsg): _116.Proposal;
            fromProtoMsg(message: _116.ProposalProtoMsg): _116.Proposal;
            toProto(message: _116.Proposal): Uint8Array;
            toProtoMsg(message: _116.Proposal): _116.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _116.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.SignedHeader;
            fromPartial(object: Partial<_116.SignedHeader>): _116.SignedHeader;
            fromAmino(object: _116.SignedHeaderAmino): _116.SignedHeader;
            toAmino(message: _116.SignedHeader): _116.SignedHeaderAmino;
            fromAminoMsg(object: _116.SignedHeaderAminoMsg): _116.SignedHeader;
            fromProtoMsg(message: _116.SignedHeaderProtoMsg): _116.SignedHeader;
            toProto(message: _116.SignedHeader): Uint8Array;
            toProtoMsg(message: _116.SignedHeader): _116.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _116.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.LightBlock;
            fromPartial(object: Partial<_116.LightBlock>): _116.LightBlock;
            fromAmino(object: _116.LightBlockAmino): _116.LightBlock;
            toAmino(message: _116.LightBlock): _116.LightBlockAmino;
            fromAminoMsg(object: _116.LightBlockAminoMsg): _116.LightBlock;
            fromProtoMsg(message: _116.LightBlockProtoMsg): _116.LightBlock;
            toProto(message: _116.LightBlock): Uint8Array;
            toProtoMsg(message: _116.LightBlock): _116.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _116.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.BlockMeta;
            fromPartial(object: Partial<_116.BlockMeta>): _116.BlockMeta;
            fromAmino(object: _116.BlockMetaAmino): _116.BlockMeta;
            toAmino(message: _116.BlockMeta): _116.BlockMetaAmino;
            fromAminoMsg(object: _116.BlockMetaAminoMsg): _116.BlockMeta;
            fromProtoMsg(message: _116.BlockMetaProtoMsg): _116.BlockMeta;
            toProto(message: _116.BlockMeta): Uint8Array;
            toProtoMsg(message: _116.BlockMeta): _116.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _116.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.TxProof;
            fromPartial(object: Partial<_116.TxProof>): _116.TxProof;
            fromAmino(object: _116.TxProofAmino): _116.TxProof;
            toAmino(message: _116.TxProof): _116.TxProofAmino;
            fromAminoMsg(object: _116.TxProofAminoMsg): _116.TxProof;
            fromProtoMsg(message: _116.TxProofProtoMsg): _116.TxProof;
            toProto(message: _116.TxProof): Uint8Array;
            toProtoMsg(message: _116.TxProof): _116.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _115.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.ConsensusParams;
            fromPartial(object: Partial<_115.ConsensusParams>): _115.ConsensusParams;
            fromAmino(object: _115.ConsensusParamsAmino): _115.ConsensusParams;
            toAmino(message: _115.ConsensusParams): _115.ConsensusParamsAmino;
            fromAminoMsg(object: _115.ConsensusParamsAminoMsg): _115.ConsensusParams;
            fromProtoMsg(message: _115.ConsensusParamsProtoMsg): _115.ConsensusParams;
            toProto(message: _115.ConsensusParams): Uint8Array;
            toProtoMsg(message: _115.ConsensusParams): _115.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _115.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.BlockParams;
            fromPartial(object: Partial<_115.BlockParams>): _115.BlockParams;
            fromAmino(object: _115.BlockParamsAmino): _115.BlockParams;
            toAmino(message: _115.BlockParams): _115.BlockParamsAmino;
            fromAminoMsg(object: _115.BlockParamsAminoMsg): _115.BlockParams;
            fromProtoMsg(message: _115.BlockParamsProtoMsg): _115.BlockParams;
            toProto(message: _115.BlockParams): Uint8Array;
            toProtoMsg(message: _115.BlockParams): _115.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _115.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.EvidenceParams;
            fromPartial(object: Partial<_115.EvidenceParams>): _115.EvidenceParams;
            fromAmino(object: _115.EvidenceParamsAmino): _115.EvidenceParams;
            toAmino(message: _115.EvidenceParams): _115.EvidenceParamsAmino;
            fromAminoMsg(object: _115.EvidenceParamsAminoMsg): _115.EvidenceParams;
            fromProtoMsg(message: _115.EvidenceParamsProtoMsg): _115.EvidenceParams;
            toProto(message: _115.EvidenceParams): Uint8Array;
            toProtoMsg(message: _115.EvidenceParams): _115.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _115.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.ValidatorParams;
            fromPartial(object: Partial<_115.ValidatorParams>): _115.ValidatorParams;
            fromAmino(object: _115.ValidatorParamsAmino): _115.ValidatorParams;
            toAmino(message: _115.ValidatorParams): _115.ValidatorParamsAmino;
            fromAminoMsg(object: _115.ValidatorParamsAminoMsg): _115.ValidatorParams;
            fromProtoMsg(message: _115.ValidatorParamsProtoMsg): _115.ValidatorParams;
            toProto(message: _115.ValidatorParams): Uint8Array;
            toProtoMsg(message: _115.ValidatorParams): _115.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _115.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.VersionParams;
            fromPartial(object: Partial<_115.VersionParams>): _115.VersionParams;
            fromAmino(object: _115.VersionParamsAmino): _115.VersionParams;
            toAmino(message: _115.VersionParams): _115.VersionParamsAmino;
            fromAminoMsg(object: _115.VersionParamsAminoMsg): _115.VersionParams;
            fromProtoMsg(message: _115.VersionParamsProtoMsg): _115.VersionParams;
            toProto(message: _115.VersionParams): Uint8Array;
            toProtoMsg(message: _115.VersionParams): _115.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _115.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.HashedParams;
            fromPartial(object: Partial<_115.HashedParams>): _115.HashedParams;
            fromAmino(object: _115.HashedParamsAmino): _115.HashedParams;
            toAmino(message: _115.HashedParams): _115.HashedParamsAmino;
            fromAminoMsg(object: _115.HashedParamsAminoMsg): _115.HashedParams;
            fromProtoMsg(message: _115.HashedParamsProtoMsg): _115.HashedParams;
            toProto(message: _115.HashedParams): Uint8Array;
            toProtoMsg(message: _115.HashedParams): _115.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _114.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.Evidence;
            fromPartial(object: Partial<_114.Evidence>): _114.Evidence;
            fromAmino(object: _114.EvidenceAmino): _114.Evidence;
            toAmino(message: _114.Evidence): _114.EvidenceAmino;
            fromAminoMsg(object: _114.EvidenceAminoMsg): _114.Evidence;
            fromProtoMsg(message: _114.EvidenceProtoMsg): _114.Evidence;
            toProto(message: _114.Evidence): Uint8Array;
            toProtoMsg(message: _114.Evidence): _114.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _114.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.DuplicateVoteEvidence;
            fromPartial(object: Partial<_114.DuplicateVoteEvidence>): _114.DuplicateVoteEvidence;
            fromAmino(object: _114.DuplicateVoteEvidenceAmino): _114.DuplicateVoteEvidence;
            toAmino(message: _114.DuplicateVoteEvidence): _114.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _114.DuplicateVoteEvidenceAminoMsg): _114.DuplicateVoteEvidence;
            fromProtoMsg(message: _114.DuplicateVoteEvidenceProtoMsg): _114.DuplicateVoteEvidence;
            toProto(message: _114.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _114.DuplicateVoteEvidence): _114.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _114.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.LightClientAttackEvidence;
            fromPartial(object: Partial<_114.LightClientAttackEvidence>): _114.LightClientAttackEvidence;
            fromAmino(object: _114.LightClientAttackEvidenceAmino): _114.LightClientAttackEvidence;
            toAmino(message: _114.LightClientAttackEvidence): _114.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _114.LightClientAttackEvidenceAminoMsg): _114.LightClientAttackEvidence;
            fromProtoMsg(message: _114.LightClientAttackEvidenceProtoMsg): _114.LightClientAttackEvidence;
            toProto(message: _114.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _114.LightClientAttackEvidence): _114.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _114.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.EvidenceList;
            fromPartial(object: Partial<_114.EvidenceList>): _114.EvidenceList;
            fromAmino(object: _114.EvidenceListAmino): _114.EvidenceList;
            toAmino(message: _114.EvidenceList): _114.EvidenceListAmino;
            fromAminoMsg(object: _114.EvidenceListAminoMsg): _114.EvidenceList;
            fromProtoMsg(message: _114.EvidenceListProtoMsg): _114.EvidenceList;
            toProto(message: _114.EvidenceList): Uint8Array;
            toProtoMsg(message: _114.EvidenceList): _114.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _113.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Block;
            fromPartial(object: Partial<_113.Block>): _113.Block;
            fromAmino(object: _113.BlockAmino): _113.Block;
            toAmino(message: _113.Block): _113.BlockAmino;
            fromAminoMsg(object: _113.BlockAminoMsg): _113.Block;
            fromProtoMsg(message: _113.BlockProtoMsg): _113.Block;
            toProto(message: _113.Block): Uint8Array;
            toProtoMsg(message: _113.Block): _113.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _118.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.App;
            fromPartial(object: Partial<_118.App>): _118.App;
            fromAmino(object: _118.AppAmino): _118.App;
            toAmino(message: _118.App): _118.AppAmino;
            fromAminoMsg(object: _118.AppAminoMsg): _118.App;
            fromProtoMsg(message: _118.AppProtoMsg): _118.App;
            toProto(message: _118.App): Uint8Array;
            toProtoMsg(message: _118.App): _118.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _118.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.Consensus;
            fromPartial(object: Partial<_118.Consensus>): _118.Consensus;
            fromAmino(object: _118.ConsensusAmino): _118.Consensus;
            toAmino(message: _118.Consensus): _118.ConsensusAmino;
            fromAminoMsg(object: _118.ConsensusAminoMsg): _118.Consensus;
            fromProtoMsg(message: _118.ConsensusProtoMsg): _118.Consensus;
            toProto(message: _118.Consensus): Uint8Array;
            toProtoMsg(message: _118.Consensus): _118.ConsensusProtoMsg;
        };
    };
}
