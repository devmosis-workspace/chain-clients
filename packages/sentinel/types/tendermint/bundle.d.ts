import * as _138 from "./abci/types";
import * as _139 from "./crypto/keys";
import * as _140 from "./crypto/proof";
import * as _141 from "./libs/bits/types";
import * as _142 from "./p2p/types";
import * as _143 from "./types/block";
import * as _144 from "./types/evidence";
import * as _145 from "./types/params";
import * as _146 from "./types/types";
import * as _147 from "./types/validator";
import * as _148 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _138.CheckTxType;
        checkTxTypeToJSON(object: _138.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _138.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _138.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _138.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _138.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _138.EvidenceType;
        evidenceTypeToJSON(object: _138.EvidenceType): string;
        CheckTxType: typeof _138.CheckTxType;
        CheckTxTypeSDKType: typeof _138.CheckTxType;
        CheckTxTypeAmino: typeof _138.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _138.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _138.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _138.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _138.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _138.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _138.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _138.EvidenceType;
        EvidenceTypeSDKType: typeof _138.EvidenceType;
        EvidenceTypeAmino: typeof _138.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _138.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Request;
            fromPartial(object: Partial<_138.Request>): _138.Request;
            fromAmino(object: _138.RequestAmino): _138.Request;
            toAmino(message: _138.Request): _138.RequestAmino;
            fromAminoMsg(object: _138.RequestAminoMsg): _138.Request;
            fromProtoMsg(message: _138.RequestProtoMsg): _138.Request;
            toProto(message: _138.Request): Uint8Array;
            toProtoMsg(message: _138.Request): _138.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _138.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestEcho;
            fromPartial(object: Partial<_138.RequestEcho>): _138.RequestEcho;
            fromAmino(object: _138.RequestEchoAmino): _138.RequestEcho;
            toAmino(message: _138.RequestEcho): _138.RequestEchoAmino;
            fromAminoMsg(object: _138.RequestEchoAminoMsg): _138.RequestEcho;
            fromProtoMsg(message: _138.RequestEchoProtoMsg): _138.RequestEcho;
            toProto(message: _138.RequestEcho): Uint8Array;
            toProtoMsg(message: _138.RequestEcho): _138.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _138.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _138.RequestFlush;
            fromPartial(_: Partial<_138.RequestFlush>): _138.RequestFlush;
            fromAmino(_: _138.RequestFlushAmino): _138.RequestFlush;
            toAmino(_: _138.RequestFlush): _138.RequestFlushAmino;
            fromAminoMsg(object: _138.RequestFlushAminoMsg): _138.RequestFlush;
            fromProtoMsg(message: _138.RequestFlushProtoMsg): _138.RequestFlush;
            toProto(message: _138.RequestFlush): Uint8Array;
            toProtoMsg(message: _138.RequestFlush): _138.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _138.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestInfo;
            fromPartial(object: Partial<_138.RequestInfo>): _138.RequestInfo;
            fromAmino(object: _138.RequestInfoAmino): _138.RequestInfo;
            toAmino(message: _138.RequestInfo): _138.RequestInfoAmino;
            fromAminoMsg(object: _138.RequestInfoAminoMsg): _138.RequestInfo;
            fromProtoMsg(message: _138.RequestInfoProtoMsg): _138.RequestInfo;
            toProto(message: _138.RequestInfo): Uint8Array;
            toProtoMsg(message: _138.RequestInfo): _138.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _138.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestSetOption;
            fromPartial(object: Partial<_138.RequestSetOption>): _138.RequestSetOption;
            fromAmino(object: _138.RequestSetOptionAmino): _138.RequestSetOption;
            toAmino(message: _138.RequestSetOption): _138.RequestSetOptionAmino;
            fromAminoMsg(object: _138.RequestSetOptionAminoMsg): _138.RequestSetOption;
            fromProtoMsg(message: _138.RequestSetOptionProtoMsg): _138.RequestSetOption;
            toProto(message: _138.RequestSetOption): Uint8Array;
            toProtoMsg(message: _138.RequestSetOption): _138.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _138.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestInitChain;
            fromPartial(object: Partial<_138.RequestInitChain>): _138.RequestInitChain;
            fromAmino(object: _138.RequestInitChainAmino): _138.RequestInitChain;
            toAmino(message: _138.RequestInitChain): _138.RequestInitChainAmino;
            fromAminoMsg(object: _138.RequestInitChainAminoMsg): _138.RequestInitChain;
            fromProtoMsg(message: _138.RequestInitChainProtoMsg): _138.RequestInitChain;
            toProto(message: _138.RequestInitChain): Uint8Array;
            toProtoMsg(message: _138.RequestInitChain): _138.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _138.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestQuery;
            fromPartial(object: Partial<_138.RequestQuery>): _138.RequestQuery;
            fromAmino(object: _138.RequestQueryAmino): _138.RequestQuery;
            toAmino(message: _138.RequestQuery): _138.RequestQueryAmino;
            fromAminoMsg(object: _138.RequestQueryAminoMsg): _138.RequestQuery;
            fromProtoMsg(message: _138.RequestQueryProtoMsg): _138.RequestQuery;
            toProto(message: _138.RequestQuery): Uint8Array;
            toProtoMsg(message: _138.RequestQuery): _138.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _138.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestBeginBlock;
            fromPartial(object: Partial<_138.RequestBeginBlock>): _138.RequestBeginBlock;
            fromAmino(object: _138.RequestBeginBlockAmino): _138.RequestBeginBlock;
            toAmino(message: _138.RequestBeginBlock): _138.RequestBeginBlockAmino;
            fromAminoMsg(object: _138.RequestBeginBlockAminoMsg): _138.RequestBeginBlock;
            fromProtoMsg(message: _138.RequestBeginBlockProtoMsg): _138.RequestBeginBlock;
            toProto(message: _138.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _138.RequestBeginBlock): _138.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _138.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestCheckTx;
            fromPartial(object: Partial<_138.RequestCheckTx>): _138.RequestCheckTx;
            fromAmino(object: _138.RequestCheckTxAmino): _138.RequestCheckTx;
            toAmino(message: _138.RequestCheckTx): _138.RequestCheckTxAmino;
            fromAminoMsg(object: _138.RequestCheckTxAminoMsg): _138.RequestCheckTx;
            fromProtoMsg(message: _138.RequestCheckTxProtoMsg): _138.RequestCheckTx;
            toProto(message: _138.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _138.RequestCheckTx): _138.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _138.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestDeliverTx;
            fromPartial(object: Partial<_138.RequestDeliverTx>): _138.RequestDeliverTx;
            fromAmino(object: _138.RequestDeliverTxAmino): _138.RequestDeliverTx;
            toAmino(message: _138.RequestDeliverTx): _138.RequestDeliverTxAmino;
            fromAminoMsg(object: _138.RequestDeliverTxAminoMsg): _138.RequestDeliverTx;
            fromProtoMsg(message: _138.RequestDeliverTxProtoMsg): _138.RequestDeliverTx;
            toProto(message: _138.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _138.RequestDeliverTx): _138.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _138.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestEndBlock;
            fromPartial(object: Partial<_138.RequestEndBlock>): _138.RequestEndBlock;
            fromAmino(object: _138.RequestEndBlockAmino): _138.RequestEndBlock;
            toAmino(message: _138.RequestEndBlock): _138.RequestEndBlockAmino;
            fromAminoMsg(object: _138.RequestEndBlockAminoMsg): _138.RequestEndBlock;
            fromProtoMsg(message: _138.RequestEndBlockProtoMsg): _138.RequestEndBlock;
            toProto(message: _138.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _138.RequestEndBlock): _138.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _138.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _138.RequestCommit;
            fromPartial(_: Partial<_138.RequestCommit>): _138.RequestCommit;
            fromAmino(_: _138.RequestCommitAmino): _138.RequestCommit;
            toAmino(_: _138.RequestCommit): _138.RequestCommitAmino;
            fromAminoMsg(object: _138.RequestCommitAminoMsg): _138.RequestCommit;
            fromProtoMsg(message: _138.RequestCommitProtoMsg): _138.RequestCommit;
            toProto(message: _138.RequestCommit): Uint8Array;
            toProtoMsg(message: _138.RequestCommit): _138.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _138.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _138.RequestListSnapshots;
            fromPartial(_: Partial<_138.RequestListSnapshots>): _138.RequestListSnapshots;
            fromAmino(_: _138.RequestListSnapshotsAmino): _138.RequestListSnapshots;
            toAmino(_: _138.RequestListSnapshots): _138.RequestListSnapshotsAmino;
            fromAminoMsg(object: _138.RequestListSnapshotsAminoMsg): _138.RequestListSnapshots;
            fromProtoMsg(message: _138.RequestListSnapshotsProtoMsg): _138.RequestListSnapshots;
            toProto(message: _138.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _138.RequestListSnapshots): _138.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _138.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestOfferSnapshot;
            fromPartial(object: Partial<_138.RequestOfferSnapshot>): _138.RequestOfferSnapshot;
            fromAmino(object: _138.RequestOfferSnapshotAmino): _138.RequestOfferSnapshot;
            toAmino(message: _138.RequestOfferSnapshot): _138.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _138.RequestOfferSnapshotAminoMsg): _138.RequestOfferSnapshot;
            fromProtoMsg(message: _138.RequestOfferSnapshotProtoMsg): _138.RequestOfferSnapshot;
            toProto(message: _138.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _138.RequestOfferSnapshot): _138.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _138.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_138.RequestLoadSnapshotChunk>): _138.RequestLoadSnapshotChunk;
            fromAmino(object: _138.RequestLoadSnapshotChunkAmino): _138.RequestLoadSnapshotChunk;
            toAmino(message: _138.RequestLoadSnapshotChunk): _138.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _138.RequestLoadSnapshotChunkAminoMsg): _138.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _138.RequestLoadSnapshotChunkProtoMsg): _138.RequestLoadSnapshotChunk;
            toProto(message: _138.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _138.RequestLoadSnapshotChunk): _138.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _138.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_138.RequestApplySnapshotChunk>): _138.RequestApplySnapshotChunk;
            fromAmino(object: _138.RequestApplySnapshotChunkAmino): _138.RequestApplySnapshotChunk;
            toAmino(message: _138.RequestApplySnapshotChunk): _138.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _138.RequestApplySnapshotChunkAminoMsg): _138.RequestApplySnapshotChunk;
            fromProtoMsg(message: _138.RequestApplySnapshotChunkProtoMsg): _138.RequestApplySnapshotChunk;
            toProto(message: _138.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _138.RequestApplySnapshotChunk): _138.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _138.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Response;
            fromPartial(object: Partial<_138.Response>): _138.Response;
            fromAmino(object: _138.ResponseAmino): _138.Response;
            toAmino(message: _138.Response): _138.ResponseAmino;
            fromAminoMsg(object: _138.ResponseAminoMsg): _138.Response;
            fromProtoMsg(message: _138.ResponseProtoMsg): _138.Response;
            toProto(message: _138.Response): Uint8Array;
            toProtoMsg(message: _138.Response): _138.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _138.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseException;
            fromPartial(object: Partial<_138.ResponseException>): _138.ResponseException;
            fromAmino(object: _138.ResponseExceptionAmino): _138.ResponseException;
            toAmino(message: _138.ResponseException): _138.ResponseExceptionAmino;
            fromAminoMsg(object: _138.ResponseExceptionAminoMsg): _138.ResponseException;
            fromProtoMsg(message: _138.ResponseExceptionProtoMsg): _138.ResponseException;
            toProto(message: _138.ResponseException): Uint8Array;
            toProtoMsg(message: _138.ResponseException): _138.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _138.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseEcho;
            fromPartial(object: Partial<_138.ResponseEcho>): _138.ResponseEcho;
            fromAmino(object: _138.ResponseEchoAmino): _138.ResponseEcho;
            toAmino(message: _138.ResponseEcho): _138.ResponseEchoAmino;
            fromAminoMsg(object: _138.ResponseEchoAminoMsg): _138.ResponseEcho;
            fromProtoMsg(message: _138.ResponseEchoProtoMsg): _138.ResponseEcho;
            toProto(message: _138.ResponseEcho): Uint8Array;
            toProtoMsg(message: _138.ResponseEcho): _138.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _138.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _138.ResponseFlush;
            fromPartial(_: Partial<_138.ResponseFlush>): _138.ResponseFlush;
            fromAmino(_: _138.ResponseFlushAmino): _138.ResponseFlush;
            toAmino(_: _138.ResponseFlush): _138.ResponseFlushAmino;
            fromAminoMsg(object: _138.ResponseFlushAminoMsg): _138.ResponseFlush;
            fromProtoMsg(message: _138.ResponseFlushProtoMsg): _138.ResponseFlush;
            toProto(message: _138.ResponseFlush): Uint8Array;
            toProtoMsg(message: _138.ResponseFlush): _138.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _138.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseInfo;
            fromPartial(object: Partial<_138.ResponseInfo>): _138.ResponseInfo;
            fromAmino(object: _138.ResponseInfoAmino): _138.ResponseInfo;
            toAmino(message: _138.ResponseInfo): _138.ResponseInfoAmino;
            fromAminoMsg(object: _138.ResponseInfoAminoMsg): _138.ResponseInfo;
            fromProtoMsg(message: _138.ResponseInfoProtoMsg): _138.ResponseInfo;
            toProto(message: _138.ResponseInfo): Uint8Array;
            toProtoMsg(message: _138.ResponseInfo): _138.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _138.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseSetOption;
            fromPartial(object: Partial<_138.ResponseSetOption>): _138.ResponseSetOption;
            fromAmino(object: _138.ResponseSetOptionAmino): _138.ResponseSetOption;
            toAmino(message: _138.ResponseSetOption): _138.ResponseSetOptionAmino;
            fromAminoMsg(object: _138.ResponseSetOptionAminoMsg): _138.ResponseSetOption;
            fromProtoMsg(message: _138.ResponseSetOptionProtoMsg): _138.ResponseSetOption;
            toProto(message: _138.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _138.ResponseSetOption): _138.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _138.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseInitChain;
            fromPartial(object: Partial<_138.ResponseInitChain>): _138.ResponseInitChain;
            fromAmino(object: _138.ResponseInitChainAmino): _138.ResponseInitChain;
            toAmino(message: _138.ResponseInitChain): _138.ResponseInitChainAmino;
            fromAminoMsg(object: _138.ResponseInitChainAminoMsg): _138.ResponseInitChain;
            fromProtoMsg(message: _138.ResponseInitChainProtoMsg): _138.ResponseInitChain;
            toProto(message: _138.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _138.ResponseInitChain): _138.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _138.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseQuery;
            fromPartial(object: Partial<_138.ResponseQuery>): _138.ResponseQuery;
            fromAmino(object: _138.ResponseQueryAmino): _138.ResponseQuery;
            toAmino(message: _138.ResponseQuery): _138.ResponseQueryAmino;
            fromAminoMsg(object: _138.ResponseQueryAminoMsg): _138.ResponseQuery;
            fromProtoMsg(message: _138.ResponseQueryProtoMsg): _138.ResponseQuery;
            toProto(message: _138.ResponseQuery): Uint8Array;
            toProtoMsg(message: _138.ResponseQuery): _138.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _138.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseBeginBlock;
            fromPartial(object: Partial<_138.ResponseBeginBlock>): _138.ResponseBeginBlock;
            fromAmino(object: _138.ResponseBeginBlockAmino): _138.ResponseBeginBlock;
            toAmino(message: _138.ResponseBeginBlock): _138.ResponseBeginBlockAmino;
            fromAminoMsg(object: _138.ResponseBeginBlockAminoMsg): _138.ResponseBeginBlock;
            fromProtoMsg(message: _138.ResponseBeginBlockProtoMsg): _138.ResponseBeginBlock;
            toProto(message: _138.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _138.ResponseBeginBlock): _138.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _138.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseCheckTx;
            fromPartial(object: Partial<_138.ResponseCheckTx>): _138.ResponseCheckTx;
            fromAmino(object: _138.ResponseCheckTxAmino): _138.ResponseCheckTx;
            toAmino(message: _138.ResponseCheckTx): _138.ResponseCheckTxAmino;
            fromAminoMsg(object: _138.ResponseCheckTxAminoMsg): _138.ResponseCheckTx;
            fromProtoMsg(message: _138.ResponseCheckTxProtoMsg): _138.ResponseCheckTx;
            toProto(message: _138.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _138.ResponseCheckTx): _138.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _138.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseDeliverTx;
            fromPartial(object: Partial<_138.ResponseDeliverTx>): _138.ResponseDeliverTx;
            fromAmino(object: _138.ResponseDeliverTxAmino): _138.ResponseDeliverTx;
            toAmino(message: _138.ResponseDeliverTx): _138.ResponseDeliverTxAmino;
            fromAminoMsg(object: _138.ResponseDeliverTxAminoMsg): _138.ResponseDeliverTx;
            fromProtoMsg(message: _138.ResponseDeliverTxProtoMsg): _138.ResponseDeliverTx;
            toProto(message: _138.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _138.ResponseDeliverTx): _138.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _138.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseEndBlock;
            fromPartial(object: Partial<_138.ResponseEndBlock>): _138.ResponseEndBlock;
            fromAmino(object: _138.ResponseEndBlockAmino): _138.ResponseEndBlock;
            toAmino(message: _138.ResponseEndBlock): _138.ResponseEndBlockAmino;
            fromAminoMsg(object: _138.ResponseEndBlockAminoMsg): _138.ResponseEndBlock;
            fromProtoMsg(message: _138.ResponseEndBlockProtoMsg): _138.ResponseEndBlock;
            toProto(message: _138.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _138.ResponseEndBlock): _138.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _138.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseCommit;
            fromPartial(object: Partial<_138.ResponseCommit>): _138.ResponseCommit;
            fromAmino(object: _138.ResponseCommitAmino): _138.ResponseCommit;
            toAmino(message: _138.ResponseCommit): _138.ResponseCommitAmino;
            fromAminoMsg(object: _138.ResponseCommitAminoMsg): _138.ResponseCommit;
            fromProtoMsg(message: _138.ResponseCommitProtoMsg): _138.ResponseCommit;
            toProto(message: _138.ResponseCommit): Uint8Array;
            toProtoMsg(message: _138.ResponseCommit): _138.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _138.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseListSnapshots;
            fromPartial(object: Partial<_138.ResponseListSnapshots>): _138.ResponseListSnapshots;
            fromAmino(object: _138.ResponseListSnapshotsAmino): _138.ResponseListSnapshots;
            toAmino(message: _138.ResponseListSnapshots): _138.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _138.ResponseListSnapshotsAminoMsg): _138.ResponseListSnapshots;
            fromProtoMsg(message: _138.ResponseListSnapshotsProtoMsg): _138.ResponseListSnapshots;
            toProto(message: _138.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _138.ResponseListSnapshots): _138.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _138.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseOfferSnapshot;
            fromPartial(object: Partial<_138.ResponseOfferSnapshot>): _138.ResponseOfferSnapshot;
            fromAmino(object: _138.ResponseOfferSnapshotAmino): _138.ResponseOfferSnapshot;
            toAmino(message: _138.ResponseOfferSnapshot): _138.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _138.ResponseOfferSnapshotAminoMsg): _138.ResponseOfferSnapshot;
            fromProtoMsg(message: _138.ResponseOfferSnapshotProtoMsg): _138.ResponseOfferSnapshot;
            toProto(message: _138.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _138.ResponseOfferSnapshot): _138.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _138.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_138.ResponseLoadSnapshotChunk>): _138.ResponseLoadSnapshotChunk;
            fromAmino(object: _138.ResponseLoadSnapshotChunkAmino): _138.ResponseLoadSnapshotChunk;
            toAmino(message: _138.ResponseLoadSnapshotChunk): _138.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _138.ResponseLoadSnapshotChunkAminoMsg): _138.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _138.ResponseLoadSnapshotChunkProtoMsg): _138.ResponseLoadSnapshotChunk;
            toProto(message: _138.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _138.ResponseLoadSnapshotChunk): _138.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _138.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_138.ResponseApplySnapshotChunk>): _138.ResponseApplySnapshotChunk;
            fromAmino(object: _138.ResponseApplySnapshotChunkAmino): _138.ResponseApplySnapshotChunk;
            toAmino(message: _138.ResponseApplySnapshotChunk): _138.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _138.ResponseApplySnapshotChunkAminoMsg): _138.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _138.ResponseApplySnapshotChunkProtoMsg): _138.ResponseApplySnapshotChunk;
            toProto(message: _138.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _138.ResponseApplySnapshotChunk): _138.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _138.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ConsensusParams;
            fromPartial(object: Partial<_138.ConsensusParams>): _138.ConsensusParams;
            fromAmino(object: _138.ConsensusParamsAmino): _138.ConsensusParams;
            toAmino(message: _138.ConsensusParams): _138.ConsensusParamsAmino;
            fromAminoMsg(object: _138.ConsensusParamsAminoMsg): _138.ConsensusParams;
            fromProtoMsg(message: _138.ConsensusParamsProtoMsg): _138.ConsensusParams;
            toProto(message: _138.ConsensusParams): Uint8Array;
            toProtoMsg(message: _138.ConsensusParams): _138.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _138.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.BlockParams;
            fromPartial(object: Partial<_138.BlockParams>): _138.BlockParams;
            fromAmino(object: _138.BlockParamsAmino): _138.BlockParams;
            toAmino(message: _138.BlockParams): _138.BlockParamsAmino;
            fromAminoMsg(object: _138.BlockParamsAminoMsg): _138.BlockParams;
            fromProtoMsg(message: _138.BlockParamsProtoMsg): _138.BlockParams;
            toProto(message: _138.BlockParams): Uint8Array;
            toProtoMsg(message: _138.BlockParams): _138.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _138.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.LastCommitInfo;
            fromPartial(object: Partial<_138.LastCommitInfo>): _138.LastCommitInfo;
            fromAmino(object: _138.LastCommitInfoAmino): _138.LastCommitInfo;
            toAmino(message: _138.LastCommitInfo): _138.LastCommitInfoAmino;
            fromAminoMsg(object: _138.LastCommitInfoAminoMsg): _138.LastCommitInfo;
            fromProtoMsg(message: _138.LastCommitInfoProtoMsg): _138.LastCommitInfo;
            toProto(message: _138.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _138.LastCommitInfo): _138.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _138.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Event;
            fromPartial(object: Partial<_138.Event>): _138.Event;
            fromAmino(object: _138.EventAmino): _138.Event;
            toAmino(message: _138.Event): _138.EventAmino;
            fromAminoMsg(object: _138.EventAminoMsg): _138.Event;
            fromProtoMsg(message: _138.EventProtoMsg): _138.Event;
            toProto(message: _138.Event): Uint8Array;
            toProtoMsg(message: _138.Event): _138.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _138.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.EventAttribute;
            fromPartial(object: Partial<_138.EventAttribute>): _138.EventAttribute;
            fromAmino(object: _138.EventAttributeAmino): _138.EventAttribute;
            toAmino(message: _138.EventAttribute): _138.EventAttributeAmino;
            fromAminoMsg(object: _138.EventAttributeAminoMsg): _138.EventAttribute;
            fromProtoMsg(message: _138.EventAttributeProtoMsg): _138.EventAttribute;
            toProto(message: _138.EventAttribute): Uint8Array;
            toProtoMsg(message: _138.EventAttribute): _138.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _138.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.TxResult;
            fromPartial(object: Partial<_138.TxResult>): _138.TxResult;
            fromAmino(object: _138.TxResultAmino): _138.TxResult;
            toAmino(message: _138.TxResult): _138.TxResultAmino;
            fromAminoMsg(object: _138.TxResultAminoMsg): _138.TxResult;
            fromProtoMsg(message: _138.TxResultProtoMsg): _138.TxResult;
            toProto(message: _138.TxResult): Uint8Array;
            toProtoMsg(message: _138.TxResult): _138.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _138.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Validator;
            fromPartial(object: Partial<_138.Validator>): _138.Validator;
            fromAmino(object: _138.ValidatorAmino): _138.Validator;
            toAmino(message: _138.Validator): _138.ValidatorAmino;
            fromAminoMsg(object: _138.ValidatorAminoMsg): _138.Validator;
            fromProtoMsg(message: _138.ValidatorProtoMsg): _138.Validator;
            toProto(message: _138.Validator): Uint8Array;
            toProtoMsg(message: _138.Validator): _138.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _138.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.ValidatorUpdate;
            fromPartial(object: Partial<_138.ValidatorUpdate>): _138.ValidatorUpdate;
            fromAmino(object: _138.ValidatorUpdateAmino): _138.ValidatorUpdate;
            toAmino(message: _138.ValidatorUpdate): _138.ValidatorUpdateAmino;
            fromAminoMsg(object: _138.ValidatorUpdateAminoMsg): _138.ValidatorUpdate;
            fromProtoMsg(message: _138.ValidatorUpdateProtoMsg): _138.ValidatorUpdate;
            toProto(message: _138.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _138.ValidatorUpdate): _138.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _138.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.VoteInfo;
            fromPartial(object: Partial<_138.VoteInfo>): _138.VoteInfo;
            fromAmino(object: _138.VoteInfoAmino): _138.VoteInfo;
            toAmino(message: _138.VoteInfo): _138.VoteInfoAmino;
            fromAminoMsg(object: _138.VoteInfoAminoMsg): _138.VoteInfo;
            fromProtoMsg(message: _138.VoteInfoProtoMsg): _138.VoteInfo;
            toProto(message: _138.VoteInfo): Uint8Array;
            toProtoMsg(message: _138.VoteInfo): _138.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _138.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Evidence;
            fromPartial(object: Partial<_138.Evidence>): _138.Evidence;
            fromAmino(object: _138.EvidenceAmino): _138.Evidence;
            toAmino(message: _138.Evidence): _138.EvidenceAmino;
            fromAminoMsg(object: _138.EvidenceAminoMsg): _138.Evidence;
            fromProtoMsg(message: _138.EvidenceProtoMsg): _138.Evidence;
            toProto(message: _138.Evidence): Uint8Array;
            toProtoMsg(message: _138.Evidence): _138.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _138.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Snapshot;
            fromPartial(object: Partial<_138.Snapshot>): _138.Snapshot;
            fromAmino(object: _138.SnapshotAmino): _138.Snapshot;
            toAmino(message: _138.Snapshot): _138.SnapshotAmino;
            fromAminoMsg(object: _138.SnapshotAminoMsg): _138.Snapshot;
            fromProtoMsg(message: _138.SnapshotProtoMsg): _138.Snapshot;
            toProto(message: _138.Snapshot): Uint8Array;
            toProtoMsg(message: _138.Snapshot): _138.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _140.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.Proof;
            fromPartial(object: Partial<_140.Proof>): _140.Proof;
            fromAmino(object: _140.ProofAmino): _140.Proof;
            toAmino(message: _140.Proof): _140.ProofAmino;
            fromAminoMsg(object: _140.ProofAminoMsg): _140.Proof;
            fromProtoMsg(message: _140.ProofProtoMsg): _140.Proof;
            toProto(message: _140.Proof): Uint8Array;
            toProtoMsg(message: _140.Proof): _140.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _140.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ValueOp;
            fromPartial(object: Partial<_140.ValueOp>): _140.ValueOp;
            fromAmino(object: _140.ValueOpAmino): _140.ValueOp;
            toAmino(message: _140.ValueOp): _140.ValueOpAmino;
            fromAminoMsg(object: _140.ValueOpAminoMsg): _140.ValueOp;
            fromProtoMsg(message: _140.ValueOpProtoMsg): _140.ValueOp;
            toProto(message: _140.ValueOp): Uint8Array;
            toProtoMsg(message: _140.ValueOp): _140.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _140.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.DominoOp;
            fromPartial(object: Partial<_140.DominoOp>): _140.DominoOp;
            fromAmino(object: _140.DominoOpAmino): _140.DominoOp;
            toAmino(message: _140.DominoOp): _140.DominoOpAmino;
            fromAminoMsg(object: _140.DominoOpAminoMsg): _140.DominoOp;
            fromProtoMsg(message: _140.DominoOpProtoMsg): _140.DominoOp;
            toProto(message: _140.DominoOp): Uint8Array;
            toProtoMsg(message: _140.DominoOp): _140.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _140.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ProofOp;
            fromPartial(object: Partial<_140.ProofOp>): _140.ProofOp;
            fromAmino(object: _140.ProofOpAmino): _140.ProofOp;
            toAmino(message: _140.ProofOp): _140.ProofOpAmino;
            fromAminoMsg(object: _140.ProofOpAminoMsg): _140.ProofOp;
            fromProtoMsg(message: _140.ProofOpProtoMsg): _140.ProofOp;
            toProto(message: _140.ProofOp): Uint8Array;
            toProtoMsg(message: _140.ProofOp): _140.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _140.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ProofOps;
            fromPartial(object: Partial<_140.ProofOps>): _140.ProofOps;
            fromAmino(object: _140.ProofOpsAmino): _140.ProofOps;
            toAmino(message: _140.ProofOps): _140.ProofOpsAmino;
            fromAminoMsg(object: _140.ProofOpsAminoMsg): _140.ProofOps;
            fromProtoMsg(message: _140.ProofOpsProtoMsg): _140.ProofOps;
            toProto(message: _140.ProofOps): Uint8Array;
            toProtoMsg(message: _140.ProofOps): _140.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _139.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _139.PublicKey;
            fromPartial(object: Partial<_139.PublicKey>): _139.PublicKey;
            fromAmino(object: _139.PublicKeyAmino): _139.PublicKey;
            toAmino(message: _139.PublicKey): _139.PublicKeyAmino;
            fromAminoMsg(object: _139.PublicKeyAminoMsg): _139.PublicKey;
            fromProtoMsg(message: _139.PublicKeyProtoMsg): _139.PublicKey;
            toProto(message: _139.PublicKey): Uint8Array;
            toProtoMsg(message: _139.PublicKey): _139.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _141.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _141.BitArray;
                fromPartial(object: Partial<_141.BitArray>): _141.BitArray;
                fromAmino(object: _141.BitArrayAmino): _141.BitArray;
                toAmino(message: _141.BitArray): _141.BitArrayAmino;
                fromAminoMsg(object: _141.BitArrayAminoMsg): _141.BitArray;
                fromProtoMsg(message: _141.BitArrayProtoMsg): _141.BitArray;
                toProto(message: _141.BitArray): Uint8Array;
                toProtoMsg(message: _141.BitArray): _141.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _142.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.NetAddress;
            fromPartial(object: Partial<_142.NetAddress>): _142.NetAddress;
            fromAmino(object: _142.NetAddressAmino): _142.NetAddress;
            toAmino(message: _142.NetAddress): _142.NetAddressAmino;
            fromAminoMsg(object: _142.NetAddressAminoMsg): _142.NetAddress;
            fromProtoMsg(message: _142.NetAddressProtoMsg): _142.NetAddress;
            toProto(message: _142.NetAddress): Uint8Array;
            toProtoMsg(message: _142.NetAddress): _142.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _142.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.ProtocolVersion;
            fromPartial(object: Partial<_142.ProtocolVersion>): _142.ProtocolVersion;
            fromAmino(object: _142.ProtocolVersionAmino): _142.ProtocolVersion;
            toAmino(message: _142.ProtocolVersion): _142.ProtocolVersionAmino;
            fromAminoMsg(object: _142.ProtocolVersionAminoMsg): _142.ProtocolVersion;
            fromProtoMsg(message: _142.ProtocolVersionProtoMsg): _142.ProtocolVersion;
            toProto(message: _142.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _142.ProtocolVersion): _142.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _142.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.DefaultNodeInfo;
            fromPartial(object: Partial<_142.DefaultNodeInfo>): _142.DefaultNodeInfo;
            fromAmino(object: _142.DefaultNodeInfoAmino): _142.DefaultNodeInfo;
            toAmino(message: _142.DefaultNodeInfo): _142.DefaultNodeInfoAmino;
            fromAminoMsg(object: _142.DefaultNodeInfoAminoMsg): _142.DefaultNodeInfo;
            fromProtoMsg(message: _142.DefaultNodeInfoProtoMsg): _142.DefaultNodeInfo;
            toProto(message: _142.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _142.DefaultNodeInfo): _142.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _142.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.DefaultNodeInfoOther;
            fromPartial(object: Partial<_142.DefaultNodeInfoOther>): _142.DefaultNodeInfoOther;
            fromAmino(object: _142.DefaultNodeInfoOtherAmino): _142.DefaultNodeInfoOther;
            toAmino(message: _142.DefaultNodeInfoOther): _142.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _142.DefaultNodeInfoOtherAminoMsg): _142.DefaultNodeInfoOther;
            fromProtoMsg(message: _142.DefaultNodeInfoOtherProtoMsg): _142.DefaultNodeInfoOther;
            toProto(message: _142.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _142.DefaultNodeInfoOther): _142.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _147.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _147.ValidatorSet;
            fromPartial(object: Partial<_147.ValidatorSet>): _147.ValidatorSet;
            fromAmino(object: _147.ValidatorSetAmino): _147.ValidatorSet;
            toAmino(message: _147.ValidatorSet): _147.ValidatorSetAmino;
            fromAminoMsg(object: _147.ValidatorSetAminoMsg): _147.ValidatorSet;
            fromProtoMsg(message: _147.ValidatorSetProtoMsg): _147.ValidatorSet;
            toProto(message: _147.ValidatorSet): Uint8Array;
            toProtoMsg(message: _147.ValidatorSet): _147.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _147.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _147.Validator;
            fromPartial(object: Partial<_147.Validator>): _147.Validator;
            fromAmino(object: _147.ValidatorAmino): _147.Validator;
            toAmino(message: _147.Validator): _147.ValidatorAmino;
            fromAminoMsg(object: _147.ValidatorAminoMsg): _147.Validator;
            fromProtoMsg(message: _147.ValidatorProtoMsg): _147.Validator;
            toProto(message: _147.Validator): Uint8Array;
            toProtoMsg(message: _147.Validator): _147.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _147.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _147.SimpleValidator;
            fromPartial(object: Partial<_147.SimpleValidator>): _147.SimpleValidator;
            fromAmino(object: _147.SimpleValidatorAmino): _147.SimpleValidator;
            toAmino(message: _147.SimpleValidator): _147.SimpleValidatorAmino;
            fromAminoMsg(object: _147.SimpleValidatorAminoMsg): _147.SimpleValidator;
            fromProtoMsg(message: _147.SimpleValidatorProtoMsg): _147.SimpleValidator;
            toProto(message: _147.SimpleValidator): Uint8Array;
            toProtoMsg(message: _147.SimpleValidator): _147.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _146.BlockIDFlag;
        blockIDFlagToJSON(object: _146.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _146.SignedMsgType;
        signedMsgTypeToJSON(object: _146.SignedMsgType): string;
        BlockIDFlag: typeof _146.BlockIDFlag;
        BlockIDFlagSDKType: typeof _146.BlockIDFlag;
        BlockIDFlagAmino: typeof _146.BlockIDFlag;
        SignedMsgType: typeof _146.SignedMsgType;
        SignedMsgTypeSDKType: typeof _146.SignedMsgType;
        SignedMsgTypeAmino: typeof _146.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _146.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.PartSetHeader;
            fromPartial(object: Partial<_146.PartSetHeader>): _146.PartSetHeader;
            fromAmino(object: _146.PartSetHeaderAmino): _146.PartSetHeader;
            toAmino(message: _146.PartSetHeader): _146.PartSetHeaderAmino;
            fromAminoMsg(object: _146.PartSetHeaderAminoMsg): _146.PartSetHeader;
            fromProtoMsg(message: _146.PartSetHeaderProtoMsg): _146.PartSetHeader;
            toProto(message: _146.PartSetHeader): Uint8Array;
            toProtoMsg(message: _146.PartSetHeader): _146.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _146.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.Part;
            fromPartial(object: Partial<_146.Part>): _146.Part;
            fromAmino(object: _146.PartAmino): _146.Part;
            toAmino(message: _146.Part): _146.PartAmino;
            fromAminoMsg(object: _146.PartAminoMsg): _146.Part;
            fromProtoMsg(message: _146.PartProtoMsg): _146.Part;
            toProto(message: _146.Part): Uint8Array;
            toProtoMsg(message: _146.Part): _146.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _146.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.BlockID;
            fromPartial(object: Partial<_146.BlockID>): _146.BlockID;
            fromAmino(object: _146.BlockIDAmino): _146.BlockID;
            toAmino(message: _146.BlockID): _146.BlockIDAmino;
            fromAminoMsg(object: _146.BlockIDAminoMsg): _146.BlockID;
            fromProtoMsg(message: _146.BlockIDProtoMsg): _146.BlockID;
            toProto(message: _146.BlockID): Uint8Array;
            toProtoMsg(message: _146.BlockID): _146.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _146.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.Header;
            fromPartial(object: Partial<_146.Header>): _146.Header;
            fromAmino(object: _146.HeaderAmino): _146.Header;
            toAmino(message: _146.Header): _146.HeaderAmino;
            fromAminoMsg(object: _146.HeaderAminoMsg): _146.Header;
            fromProtoMsg(message: _146.HeaderProtoMsg): _146.Header;
            toProto(message: _146.Header): Uint8Array;
            toProtoMsg(message: _146.Header): _146.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _146.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.Data;
            fromPartial(object: Partial<_146.Data>): _146.Data;
            fromAmino(object: _146.DataAmino): _146.Data;
            toAmino(message: _146.Data): _146.DataAmino;
            fromAminoMsg(object: _146.DataAminoMsg): _146.Data;
            fromProtoMsg(message: _146.DataProtoMsg): _146.Data;
            toProto(message: _146.Data): Uint8Array;
            toProtoMsg(message: _146.Data): _146.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _146.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.Vote;
            fromPartial(object: Partial<_146.Vote>): _146.Vote;
            fromAmino(object: _146.VoteAmino): _146.Vote;
            toAmino(message: _146.Vote): _146.VoteAmino;
            fromAminoMsg(object: _146.VoteAminoMsg): _146.Vote;
            fromProtoMsg(message: _146.VoteProtoMsg): _146.Vote;
            toProto(message: _146.Vote): Uint8Array;
            toProtoMsg(message: _146.Vote): _146.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _146.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.Commit;
            fromPartial(object: Partial<_146.Commit>): _146.Commit;
            fromAmino(object: _146.CommitAmino): _146.Commit;
            toAmino(message: _146.Commit): _146.CommitAmino;
            fromAminoMsg(object: _146.CommitAminoMsg): _146.Commit;
            fromProtoMsg(message: _146.CommitProtoMsg): _146.Commit;
            toProto(message: _146.Commit): Uint8Array;
            toProtoMsg(message: _146.Commit): _146.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _146.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.CommitSig;
            fromPartial(object: Partial<_146.CommitSig>): _146.CommitSig;
            fromAmino(object: _146.CommitSigAmino): _146.CommitSig;
            toAmino(message: _146.CommitSig): _146.CommitSigAmino;
            fromAminoMsg(object: _146.CommitSigAminoMsg): _146.CommitSig;
            fromProtoMsg(message: _146.CommitSigProtoMsg): _146.CommitSig;
            toProto(message: _146.CommitSig): Uint8Array;
            toProtoMsg(message: _146.CommitSig): _146.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _146.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.Proposal;
            fromPartial(object: Partial<_146.Proposal>): _146.Proposal;
            fromAmino(object: _146.ProposalAmino): _146.Proposal;
            toAmino(message: _146.Proposal): _146.ProposalAmino;
            fromAminoMsg(object: _146.ProposalAminoMsg): _146.Proposal;
            fromProtoMsg(message: _146.ProposalProtoMsg): _146.Proposal;
            toProto(message: _146.Proposal): Uint8Array;
            toProtoMsg(message: _146.Proposal): _146.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _146.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.SignedHeader;
            fromPartial(object: Partial<_146.SignedHeader>): _146.SignedHeader;
            fromAmino(object: _146.SignedHeaderAmino): _146.SignedHeader;
            toAmino(message: _146.SignedHeader): _146.SignedHeaderAmino;
            fromAminoMsg(object: _146.SignedHeaderAminoMsg): _146.SignedHeader;
            fromProtoMsg(message: _146.SignedHeaderProtoMsg): _146.SignedHeader;
            toProto(message: _146.SignedHeader): Uint8Array;
            toProtoMsg(message: _146.SignedHeader): _146.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _146.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.LightBlock;
            fromPartial(object: Partial<_146.LightBlock>): _146.LightBlock;
            fromAmino(object: _146.LightBlockAmino): _146.LightBlock;
            toAmino(message: _146.LightBlock): _146.LightBlockAmino;
            fromAminoMsg(object: _146.LightBlockAminoMsg): _146.LightBlock;
            fromProtoMsg(message: _146.LightBlockProtoMsg): _146.LightBlock;
            toProto(message: _146.LightBlock): Uint8Array;
            toProtoMsg(message: _146.LightBlock): _146.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _146.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.BlockMeta;
            fromPartial(object: Partial<_146.BlockMeta>): _146.BlockMeta;
            fromAmino(object: _146.BlockMetaAmino): _146.BlockMeta;
            toAmino(message: _146.BlockMeta): _146.BlockMetaAmino;
            fromAminoMsg(object: _146.BlockMetaAminoMsg): _146.BlockMeta;
            fromProtoMsg(message: _146.BlockMetaProtoMsg): _146.BlockMeta;
            toProto(message: _146.BlockMeta): Uint8Array;
            toProtoMsg(message: _146.BlockMeta): _146.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _146.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.TxProof;
            fromPartial(object: Partial<_146.TxProof>): _146.TxProof;
            fromAmino(object: _146.TxProofAmino): _146.TxProof;
            toAmino(message: _146.TxProof): _146.TxProofAmino;
            fromAminoMsg(object: _146.TxProofAminoMsg): _146.TxProof;
            fromProtoMsg(message: _146.TxProofProtoMsg): _146.TxProof;
            toProto(message: _146.TxProof): Uint8Array;
            toProtoMsg(message: _146.TxProof): _146.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _145.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _145.ConsensusParams;
            fromPartial(object: Partial<_145.ConsensusParams>): _145.ConsensusParams;
            fromAmino(object: _145.ConsensusParamsAmino): _145.ConsensusParams;
            toAmino(message: _145.ConsensusParams): _145.ConsensusParamsAmino;
            fromAminoMsg(object: _145.ConsensusParamsAminoMsg): _145.ConsensusParams;
            fromProtoMsg(message: _145.ConsensusParamsProtoMsg): _145.ConsensusParams;
            toProto(message: _145.ConsensusParams): Uint8Array;
            toProtoMsg(message: _145.ConsensusParams): _145.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _145.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _145.BlockParams;
            fromPartial(object: Partial<_145.BlockParams>): _145.BlockParams;
            fromAmino(object: _145.BlockParamsAmino): _145.BlockParams;
            toAmino(message: _145.BlockParams): _145.BlockParamsAmino;
            fromAminoMsg(object: _145.BlockParamsAminoMsg): _145.BlockParams;
            fromProtoMsg(message: _145.BlockParamsProtoMsg): _145.BlockParams;
            toProto(message: _145.BlockParams): Uint8Array;
            toProtoMsg(message: _145.BlockParams): _145.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _145.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _145.EvidenceParams;
            fromPartial(object: Partial<_145.EvidenceParams>): _145.EvidenceParams;
            fromAmino(object: _145.EvidenceParamsAmino): _145.EvidenceParams;
            toAmino(message: _145.EvidenceParams): _145.EvidenceParamsAmino;
            fromAminoMsg(object: _145.EvidenceParamsAminoMsg): _145.EvidenceParams;
            fromProtoMsg(message: _145.EvidenceParamsProtoMsg): _145.EvidenceParams;
            toProto(message: _145.EvidenceParams): Uint8Array;
            toProtoMsg(message: _145.EvidenceParams): _145.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _145.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _145.ValidatorParams;
            fromPartial(object: Partial<_145.ValidatorParams>): _145.ValidatorParams;
            fromAmino(object: _145.ValidatorParamsAmino): _145.ValidatorParams;
            toAmino(message: _145.ValidatorParams): _145.ValidatorParamsAmino;
            fromAminoMsg(object: _145.ValidatorParamsAminoMsg): _145.ValidatorParams;
            fromProtoMsg(message: _145.ValidatorParamsProtoMsg): _145.ValidatorParams;
            toProto(message: _145.ValidatorParams): Uint8Array;
            toProtoMsg(message: _145.ValidatorParams): _145.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _145.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _145.VersionParams;
            fromPartial(object: Partial<_145.VersionParams>): _145.VersionParams;
            fromAmino(object: _145.VersionParamsAmino): _145.VersionParams;
            toAmino(message: _145.VersionParams): _145.VersionParamsAmino;
            fromAminoMsg(object: _145.VersionParamsAminoMsg): _145.VersionParams;
            fromProtoMsg(message: _145.VersionParamsProtoMsg): _145.VersionParams;
            toProto(message: _145.VersionParams): Uint8Array;
            toProtoMsg(message: _145.VersionParams): _145.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _145.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _145.HashedParams;
            fromPartial(object: Partial<_145.HashedParams>): _145.HashedParams;
            fromAmino(object: _145.HashedParamsAmino): _145.HashedParams;
            toAmino(message: _145.HashedParams): _145.HashedParamsAmino;
            fromAminoMsg(object: _145.HashedParamsAminoMsg): _145.HashedParams;
            fromProtoMsg(message: _145.HashedParamsProtoMsg): _145.HashedParams;
            toProto(message: _145.HashedParams): Uint8Array;
            toProtoMsg(message: _145.HashedParams): _145.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _144.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.Evidence;
            fromPartial(object: Partial<_144.Evidence>): _144.Evidence;
            fromAmino(object: _144.EvidenceAmino): _144.Evidence;
            toAmino(message: _144.Evidence): _144.EvidenceAmino;
            fromAminoMsg(object: _144.EvidenceAminoMsg): _144.Evidence;
            fromProtoMsg(message: _144.EvidenceProtoMsg): _144.Evidence;
            toProto(message: _144.Evidence): Uint8Array;
            toProtoMsg(message: _144.Evidence): _144.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _144.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.DuplicateVoteEvidence;
            fromPartial(object: Partial<_144.DuplicateVoteEvidence>): _144.DuplicateVoteEvidence;
            fromAmino(object: _144.DuplicateVoteEvidenceAmino): _144.DuplicateVoteEvidence;
            toAmino(message: _144.DuplicateVoteEvidence): _144.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _144.DuplicateVoteEvidenceAminoMsg): _144.DuplicateVoteEvidence;
            fromProtoMsg(message: _144.DuplicateVoteEvidenceProtoMsg): _144.DuplicateVoteEvidence;
            toProto(message: _144.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _144.DuplicateVoteEvidence): _144.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _144.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.LightClientAttackEvidence;
            fromPartial(object: Partial<_144.LightClientAttackEvidence>): _144.LightClientAttackEvidence;
            fromAmino(object: _144.LightClientAttackEvidenceAmino): _144.LightClientAttackEvidence;
            toAmino(message: _144.LightClientAttackEvidence): _144.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _144.LightClientAttackEvidenceAminoMsg): _144.LightClientAttackEvidence;
            fromProtoMsg(message: _144.LightClientAttackEvidenceProtoMsg): _144.LightClientAttackEvidence;
            toProto(message: _144.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _144.LightClientAttackEvidence): _144.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _144.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.EvidenceList;
            fromPartial(object: Partial<_144.EvidenceList>): _144.EvidenceList;
            fromAmino(object: _144.EvidenceListAmino): _144.EvidenceList;
            toAmino(message: _144.EvidenceList): _144.EvidenceListAmino;
            fromAminoMsg(object: _144.EvidenceListAminoMsg): _144.EvidenceList;
            fromProtoMsg(message: _144.EvidenceListProtoMsg): _144.EvidenceList;
            toProto(message: _144.EvidenceList): Uint8Array;
            toProtoMsg(message: _144.EvidenceList): _144.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _143.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.Block;
            fromPartial(object: Partial<_143.Block>): _143.Block;
            fromAmino(object: _143.BlockAmino): _143.Block;
            toAmino(message: _143.Block): _143.BlockAmino;
            fromAminoMsg(object: _143.BlockAminoMsg): _143.Block;
            fromProtoMsg(message: _143.BlockProtoMsg): _143.Block;
            toProto(message: _143.Block): Uint8Array;
            toProtoMsg(message: _143.Block): _143.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _148.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.App;
            fromPartial(object: Partial<_148.App>): _148.App;
            fromAmino(object: _148.AppAmino): _148.App;
            toAmino(message: _148.App): _148.AppAmino;
            fromAminoMsg(object: _148.AppAminoMsg): _148.App;
            fromProtoMsg(message: _148.AppProtoMsg): _148.App;
            toProto(message: _148.App): Uint8Array;
            toProtoMsg(message: _148.App): _148.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _148.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.Consensus;
            fromPartial(object: Partial<_148.Consensus>): _148.Consensus;
            fromAmino(object: _148.ConsensusAmino): _148.Consensus;
            toAmino(message: _148.Consensus): _148.ConsensusAmino;
            fromAminoMsg(object: _148.ConsensusAminoMsg): _148.Consensus;
            fromProtoMsg(message: _148.ConsensusProtoMsg): _148.Consensus;
            toProto(message: _148.Consensus): Uint8Array;
            toProtoMsg(message: _148.Consensus): _148.ConsensusProtoMsg;
        };
    };
}
