import * as _110 from "./abci/types";
import * as _111 from "./crypto/keys";
import * as _112 from "./crypto/proof";
import * as _113 from "./libs/bits/types";
import * as _114 from "./p2p/types";
import * as _115 from "./types/block";
import * as _116 from "./types/evidence";
import * as _117 from "./types/params";
import * as _118 from "./types/types";
import * as _119 from "./types/validator";
import * as _120 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _110.CheckTxType;
        checkTxTypeToJSON(object: _110.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _110.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _110.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _110.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _110.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _110.EvidenceType;
        evidenceTypeToJSON(object: _110.EvidenceType): string;
        CheckTxType: typeof _110.CheckTxType;
        CheckTxTypeSDKType: typeof _110.CheckTxType;
        CheckTxTypeAmino: typeof _110.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _110.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _110.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _110.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _110.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _110.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _110.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _110.EvidenceType;
        EvidenceTypeSDKType: typeof _110.EvidenceType;
        EvidenceTypeAmino: typeof _110.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _110.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.Request;
            fromPartial(object: Partial<_110.Request>): _110.Request;
            fromAmino(object: _110.RequestAmino): _110.Request;
            toAmino(message: _110.Request): _110.RequestAmino;
            fromAminoMsg(object: _110.RequestAminoMsg): _110.Request;
            fromProtoMsg(message: _110.RequestProtoMsg): _110.Request;
            toProto(message: _110.Request): Uint8Array;
            toProtoMsg(message: _110.Request): _110.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _110.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestEcho;
            fromPartial(object: Partial<_110.RequestEcho>): _110.RequestEcho;
            fromAmino(object: _110.RequestEchoAmino): _110.RequestEcho;
            toAmino(message: _110.RequestEcho): _110.RequestEchoAmino;
            fromAminoMsg(object: _110.RequestEchoAminoMsg): _110.RequestEcho;
            fromProtoMsg(message: _110.RequestEchoProtoMsg): _110.RequestEcho;
            toProto(message: _110.RequestEcho): Uint8Array;
            toProtoMsg(message: _110.RequestEcho): _110.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _110.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _110.RequestFlush;
            fromPartial(_: Partial<_110.RequestFlush>): _110.RequestFlush;
            fromAmino(_: _110.RequestFlushAmino): _110.RequestFlush;
            toAmino(_: _110.RequestFlush): _110.RequestFlushAmino;
            fromAminoMsg(object: _110.RequestFlushAminoMsg): _110.RequestFlush;
            fromProtoMsg(message: _110.RequestFlushProtoMsg): _110.RequestFlush;
            toProto(message: _110.RequestFlush): Uint8Array;
            toProtoMsg(message: _110.RequestFlush): _110.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _110.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestInfo;
            fromPartial(object: Partial<_110.RequestInfo>): _110.RequestInfo;
            fromAmino(object: _110.RequestInfoAmino): _110.RequestInfo;
            toAmino(message: _110.RequestInfo): _110.RequestInfoAmino;
            fromAminoMsg(object: _110.RequestInfoAminoMsg): _110.RequestInfo;
            fromProtoMsg(message: _110.RequestInfoProtoMsg): _110.RequestInfo;
            toProto(message: _110.RequestInfo): Uint8Array;
            toProtoMsg(message: _110.RequestInfo): _110.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _110.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestSetOption;
            fromPartial(object: Partial<_110.RequestSetOption>): _110.RequestSetOption;
            fromAmino(object: _110.RequestSetOptionAmino): _110.RequestSetOption;
            toAmino(message: _110.RequestSetOption): _110.RequestSetOptionAmino;
            fromAminoMsg(object: _110.RequestSetOptionAminoMsg): _110.RequestSetOption;
            fromProtoMsg(message: _110.RequestSetOptionProtoMsg): _110.RequestSetOption;
            toProto(message: _110.RequestSetOption): Uint8Array;
            toProtoMsg(message: _110.RequestSetOption): _110.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _110.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestInitChain;
            fromPartial(object: Partial<_110.RequestInitChain>): _110.RequestInitChain;
            fromAmino(object: _110.RequestInitChainAmino): _110.RequestInitChain;
            toAmino(message: _110.RequestInitChain): _110.RequestInitChainAmino;
            fromAminoMsg(object: _110.RequestInitChainAminoMsg): _110.RequestInitChain;
            fromProtoMsg(message: _110.RequestInitChainProtoMsg): _110.RequestInitChain;
            toProto(message: _110.RequestInitChain): Uint8Array;
            toProtoMsg(message: _110.RequestInitChain): _110.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _110.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestQuery;
            fromPartial(object: Partial<_110.RequestQuery>): _110.RequestQuery;
            fromAmino(object: _110.RequestQueryAmino): _110.RequestQuery;
            toAmino(message: _110.RequestQuery): _110.RequestQueryAmino;
            fromAminoMsg(object: _110.RequestQueryAminoMsg): _110.RequestQuery;
            fromProtoMsg(message: _110.RequestQueryProtoMsg): _110.RequestQuery;
            toProto(message: _110.RequestQuery): Uint8Array;
            toProtoMsg(message: _110.RequestQuery): _110.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _110.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestBeginBlock;
            fromPartial(object: Partial<_110.RequestBeginBlock>): _110.RequestBeginBlock;
            fromAmino(object: _110.RequestBeginBlockAmino): _110.RequestBeginBlock;
            toAmino(message: _110.RequestBeginBlock): _110.RequestBeginBlockAmino;
            fromAminoMsg(object: _110.RequestBeginBlockAminoMsg): _110.RequestBeginBlock;
            fromProtoMsg(message: _110.RequestBeginBlockProtoMsg): _110.RequestBeginBlock;
            toProto(message: _110.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _110.RequestBeginBlock): _110.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _110.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestCheckTx;
            fromPartial(object: Partial<_110.RequestCheckTx>): _110.RequestCheckTx;
            fromAmino(object: _110.RequestCheckTxAmino): _110.RequestCheckTx;
            toAmino(message: _110.RequestCheckTx): _110.RequestCheckTxAmino;
            fromAminoMsg(object: _110.RequestCheckTxAminoMsg): _110.RequestCheckTx;
            fromProtoMsg(message: _110.RequestCheckTxProtoMsg): _110.RequestCheckTx;
            toProto(message: _110.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _110.RequestCheckTx): _110.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _110.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestDeliverTx;
            fromPartial(object: Partial<_110.RequestDeliverTx>): _110.RequestDeliverTx;
            fromAmino(object: _110.RequestDeliverTxAmino): _110.RequestDeliverTx;
            toAmino(message: _110.RequestDeliverTx): _110.RequestDeliverTxAmino;
            fromAminoMsg(object: _110.RequestDeliverTxAminoMsg): _110.RequestDeliverTx;
            fromProtoMsg(message: _110.RequestDeliverTxProtoMsg): _110.RequestDeliverTx;
            toProto(message: _110.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _110.RequestDeliverTx): _110.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _110.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestEndBlock;
            fromPartial(object: Partial<_110.RequestEndBlock>): _110.RequestEndBlock;
            fromAmino(object: _110.RequestEndBlockAmino): _110.RequestEndBlock;
            toAmino(message: _110.RequestEndBlock): _110.RequestEndBlockAmino;
            fromAminoMsg(object: _110.RequestEndBlockAminoMsg): _110.RequestEndBlock;
            fromProtoMsg(message: _110.RequestEndBlockProtoMsg): _110.RequestEndBlock;
            toProto(message: _110.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _110.RequestEndBlock): _110.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _110.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _110.RequestCommit;
            fromPartial(_: Partial<_110.RequestCommit>): _110.RequestCommit;
            fromAmino(_: _110.RequestCommitAmino): _110.RequestCommit;
            toAmino(_: _110.RequestCommit): _110.RequestCommitAmino;
            fromAminoMsg(object: _110.RequestCommitAminoMsg): _110.RequestCommit;
            fromProtoMsg(message: _110.RequestCommitProtoMsg): _110.RequestCommit;
            toProto(message: _110.RequestCommit): Uint8Array;
            toProtoMsg(message: _110.RequestCommit): _110.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _110.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _110.RequestListSnapshots;
            fromPartial(_: Partial<_110.RequestListSnapshots>): _110.RequestListSnapshots;
            fromAmino(_: _110.RequestListSnapshotsAmino): _110.RequestListSnapshots;
            toAmino(_: _110.RequestListSnapshots): _110.RequestListSnapshotsAmino;
            fromAminoMsg(object: _110.RequestListSnapshotsAminoMsg): _110.RequestListSnapshots;
            fromProtoMsg(message: _110.RequestListSnapshotsProtoMsg): _110.RequestListSnapshots;
            toProto(message: _110.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _110.RequestListSnapshots): _110.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _110.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestOfferSnapshot;
            fromPartial(object: Partial<_110.RequestOfferSnapshot>): _110.RequestOfferSnapshot;
            fromAmino(object: _110.RequestOfferSnapshotAmino): _110.RequestOfferSnapshot;
            toAmino(message: _110.RequestOfferSnapshot): _110.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _110.RequestOfferSnapshotAminoMsg): _110.RequestOfferSnapshot;
            fromProtoMsg(message: _110.RequestOfferSnapshotProtoMsg): _110.RequestOfferSnapshot;
            toProto(message: _110.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _110.RequestOfferSnapshot): _110.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _110.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_110.RequestLoadSnapshotChunk>): _110.RequestLoadSnapshotChunk;
            fromAmino(object: _110.RequestLoadSnapshotChunkAmino): _110.RequestLoadSnapshotChunk;
            toAmino(message: _110.RequestLoadSnapshotChunk): _110.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _110.RequestLoadSnapshotChunkAminoMsg): _110.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _110.RequestLoadSnapshotChunkProtoMsg): _110.RequestLoadSnapshotChunk;
            toProto(message: _110.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _110.RequestLoadSnapshotChunk): _110.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _110.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_110.RequestApplySnapshotChunk>): _110.RequestApplySnapshotChunk;
            fromAmino(object: _110.RequestApplySnapshotChunkAmino): _110.RequestApplySnapshotChunk;
            toAmino(message: _110.RequestApplySnapshotChunk): _110.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _110.RequestApplySnapshotChunkAminoMsg): _110.RequestApplySnapshotChunk;
            fromProtoMsg(message: _110.RequestApplySnapshotChunkProtoMsg): _110.RequestApplySnapshotChunk;
            toProto(message: _110.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _110.RequestApplySnapshotChunk): _110.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _110.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.Response;
            fromPartial(object: Partial<_110.Response>): _110.Response;
            fromAmino(object: _110.ResponseAmino): _110.Response;
            toAmino(message: _110.Response): _110.ResponseAmino;
            fromAminoMsg(object: _110.ResponseAminoMsg): _110.Response;
            fromProtoMsg(message: _110.ResponseProtoMsg): _110.Response;
            toProto(message: _110.Response): Uint8Array;
            toProtoMsg(message: _110.Response): _110.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _110.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseException;
            fromPartial(object: Partial<_110.ResponseException>): _110.ResponseException;
            fromAmino(object: _110.ResponseExceptionAmino): _110.ResponseException;
            toAmino(message: _110.ResponseException): _110.ResponseExceptionAmino;
            fromAminoMsg(object: _110.ResponseExceptionAminoMsg): _110.ResponseException;
            fromProtoMsg(message: _110.ResponseExceptionProtoMsg): _110.ResponseException;
            toProto(message: _110.ResponseException): Uint8Array;
            toProtoMsg(message: _110.ResponseException): _110.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _110.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseEcho;
            fromPartial(object: Partial<_110.ResponseEcho>): _110.ResponseEcho;
            fromAmino(object: _110.ResponseEchoAmino): _110.ResponseEcho;
            toAmino(message: _110.ResponseEcho): _110.ResponseEchoAmino;
            fromAminoMsg(object: _110.ResponseEchoAminoMsg): _110.ResponseEcho;
            fromProtoMsg(message: _110.ResponseEchoProtoMsg): _110.ResponseEcho;
            toProto(message: _110.ResponseEcho): Uint8Array;
            toProtoMsg(message: _110.ResponseEcho): _110.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _110.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _110.ResponseFlush;
            fromPartial(_: Partial<_110.ResponseFlush>): _110.ResponseFlush;
            fromAmino(_: _110.ResponseFlushAmino): _110.ResponseFlush;
            toAmino(_: _110.ResponseFlush): _110.ResponseFlushAmino;
            fromAminoMsg(object: _110.ResponseFlushAminoMsg): _110.ResponseFlush;
            fromProtoMsg(message: _110.ResponseFlushProtoMsg): _110.ResponseFlush;
            toProto(message: _110.ResponseFlush): Uint8Array;
            toProtoMsg(message: _110.ResponseFlush): _110.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _110.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseInfo;
            fromPartial(object: Partial<_110.ResponseInfo>): _110.ResponseInfo;
            fromAmino(object: _110.ResponseInfoAmino): _110.ResponseInfo;
            toAmino(message: _110.ResponseInfo): _110.ResponseInfoAmino;
            fromAminoMsg(object: _110.ResponseInfoAminoMsg): _110.ResponseInfo;
            fromProtoMsg(message: _110.ResponseInfoProtoMsg): _110.ResponseInfo;
            toProto(message: _110.ResponseInfo): Uint8Array;
            toProtoMsg(message: _110.ResponseInfo): _110.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _110.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseSetOption;
            fromPartial(object: Partial<_110.ResponseSetOption>): _110.ResponseSetOption;
            fromAmino(object: _110.ResponseSetOptionAmino): _110.ResponseSetOption;
            toAmino(message: _110.ResponseSetOption): _110.ResponseSetOptionAmino;
            fromAminoMsg(object: _110.ResponseSetOptionAminoMsg): _110.ResponseSetOption;
            fromProtoMsg(message: _110.ResponseSetOptionProtoMsg): _110.ResponseSetOption;
            toProto(message: _110.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _110.ResponseSetOption): _110.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _110.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseInitChain;
            fromPartial(object: Partial<_110.ResponseInitChain>): _110.ResponseInitChain;
            fromAmino(object: _110.ResponseInitChainAmino): _110.ResponseInitChain;
            toAmino(message: _110.ResponseInitChain): _110.ResponseInitChainAmino;
            fromAminoMsg(object: _110.ResponseInitChainAminoMsg): _110.ResponseInitChain;
            fromProtoMsg(message: _110.ResponseInitChainProtoMsg): _110.ResponseInitChain;
            toProto(message: _110.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _110.ResponseInitChain): _110.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _110.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseQuery;
            fromPartial(object: Partial<_110.ResponseQuery>): _110.ResponseQuery;
            fromAmino(object: _110.ResponseQueryAmino): _110.ResponseQuery;
            toAmino(message: _110.ResponseQuery): _110.ResponseQueryAmino;
            fromAminoMsg(object: _110.ResponseQueryAminoMsg): _110.ResponseQuery;
            fromProtoMsg(message: _110.ResponseQueryProtoMsg): _110.ResponseQuery;
            toProto(message: _110.ResponseQuery): Uint8Array;
            toProtoMsg(message: _110.ResponseQuery): _110.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _110.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseBeginBlock;
            fromPartial(object: Partial<_110.ResponseBeginBlock>): _110.ResponseBeginBlock;
            fromAmino(object: _110.ResponseBeginBlockAmino): _110.ResponseBeginBlock;
            toAmino(message: _110.ResponseBeginBlock): _110.ResponseBeginBlockAmino;
            fromAminoMsg(object: _110.ResponseBeginBlockAminoMsg): _110.ResponseBeginBlock;
            fromProtoMsg(message: _110.ResponseBeginBlockProtoMsg): _110.ResponseBeginBlock;
            toProto(message: _110.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _110.ResponseBeginBlock): _110.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _110.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseCheckTx;
            fromPartial(object: Partial<_110.ResponseCheckTx>): _110.ResponseCheckTx;
            fromAmino(object: _110.ResponseCheckTxAmino): _110.ResponseCheckTx;
            toAmino(message: _110.ResponseCheckTx): _110.ResponseCheckTxAmino;
            fromAminoMsg(object: _110.ResponseCheckTxAminoMsg): _110.ResponseCheckTx;
            fromProtoMsg(message: _110.ResponseCheckTxProtoMsg): _110.ResponseCheckTx;
            toProto(message: _110.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _110.ResponseCheckTx): _110.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _110.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseDeliverTx;
            fromPartial(object: Partial<_110.ResponseDeliverTx>): _110.ResponseDeliverTx;
            fromAmino(object: _110.ResponseDeliverTxAmino): _110.ResponseDeliverTx;
            toAmino(message: _110.ResponseDeliverTx): _110.ResponseDeliverTxAmino;
            fromAminoMsg(object: _110.ResponseDeliverTxAminoMsg): _110.ResponseDeliverTx;
            fromProtoMsg(message: _110.ResponseDeliverTxProtoMsg): _110.ResponseDeliverTx;
            toProto(message: _110.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _110.ResponseDeliverTx): _110.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _110.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseEndBlock;
            fromPartial(object: Partial<_110.ResponseEndBlock>): _110.ResponseEndBlock;
            fromAmino(object: _110.ResponseEndBlockAmino): _110.ResponseEndBlock;
            toAmino(message: _110.ResponseEndBlock): _110.ResponseEndBlockAmino;
            fromAminoMsg(object: _110.ResponseEndBlockAminoMsg): _110.ResponseEndBlock;
            fromProtoMsg(message: _110.ResponseEndBlockProtoMsg): _110.ResponseEndBlock;
            toProto(message: _110.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _110.ResponseEndBlock): _110.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _110.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseCommit;
            fromPartial(object: Partial<_110.ResponseCommit>): _110.ResponseCommit;
            fromAmino(object: _110.ResponseCommitAmino): _110.ResponseCommit;
            toAmino(message: _110.ResponseCommit): _110.ResponseCommitAmino;
            fromAminoMsg(object: _110.ResponseCommitAminoMsg): _110.ResponseCommit;
            fromProtoMsg(message: _110.ResponseCommitProtoMsg): _110.ResponseCommit;
            toProto(message: _110.ResponseCommit): Uint8Array;
            toProtoMsg(message: _110.ResponseCommit): _110.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _110.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseListSnapshots;
            fromPartial(object: Partial<_110.ResponseListSnapshots>): _110.ResponseListSnapshots;
            fromAmino(object: _110.ResponseListSnapshotsAmino): _110.ResponseListSnapshots;
            toAmino(message: _110.ResponseListSnapshots): _110.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _110.ResponseListSnapshotsAminoMsg): _110.ResponseListSnapshots;
            fromProtoMsg(message: _110.ResponseListSnapshotsProtoMsg): _110.ResponseListSnapshots;
            toProto(message: _110.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _110.ResponseListSnapshots): _110.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _110.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseOfferSnapshot;
            fromPartial(object: Partial<_110.ResponseOfferSnapshot>): _110.ResponseOfferSnapshot;
            fromAmino(object: _110.ResponseOfferSnapshotAmino): _110.ResponseOfferSnapshot;
            toAmino(message: _110.ResponseOfferSnapshot): _110.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _110.ResponseOfferSnapshotAminoMsg): _110.ResponseOfferSnapshot;
            fromProtoMsg(message: _110.ResponseOfferSnapshotProtoMsg): _110.ResponseOfferSnapshot;
            toProto(message: _110.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _110.ResponseOfferSnapshot): _110.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _110.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_110.ResponseLoadSnapshotChunk>): _110.ResponseLoadSnapshotChunk;
            fromAmino(object: _110.ResponseLoadSnapshotChunkAmino): _110.ResponseLoadSnapshotChunk;
            toAmino(message: _110.ResponseLoadSnapshotChunk): _110.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _110.ResponseLoadSnapshotChunkAminoMsg): _110.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _110.ResponseLoadSnapshotChunkProtoMsg): _110.ResponseLoadSnapshotChunk;
            toProto(message: _110.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _110.ResponseLoadSnapshotChunk): _110.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _110.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_110.ResponseApplySnapshotChunk>): _110.ResponseApplySnapshotChunk;
            fromAmino(object: _110.ResponseApplySnapshotChunkAmino): _110.ResponseApplySnapshotChunk;
            toAmino(message: _110.ResponseApplySnapshotChunk): _110.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _110.ResponseApplySnapshotChunkAminoMsg): _110.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _110.ResponseApplySnapshotChunkProtoMsg): _110.ResponseApplySnapshotChunk;
            toProto(message: _110.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _110.ResponseApplySnapshotChunk): _110.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _110.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ConsensusParams;
            fromPartial(object: Partial<_110.ConsensusParams>): _110.ConsensusParams;
            fromAmino(object: _110.ConsensusParamsAmino): _110.ConsensusParams;
            toAmino(message: _110.ConsensusParams): _110.ConsensusParamsAmino;
            fromAminoMsg(object: _110.ConsensusParamsAminoMsg): _110.ConsensusParams;
            fromProtoMsg(message: _110.ConsensusParamsProtoMsg): _110.ConsensusParams;
            toProto(message: _110.ConsensusParams): Uint8Array;
            toProtoMsg(message: _110.ConsensusParams): _110.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _110.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.BlockParams;
            fromPartial(object: Partial<_110.BlockParams>): _110.BlockParams;
            fromAmino(object: _110.BlockParamsAmino): _110.BlockParams;
            toAmino(message: _110.BlockParams): _110.BlockParamsAmino;
            fromAminoMsg(object: _110.BlockParamsAminoMsg): _110.BlockParams;
            fromProtoMsg(message: _110.BlockParamsProtoMsg): _110.BlockParams;
            toProto(message: _110.BlockParams): Uint8Array;
            toProtoMsg(message: _110.BlockParams): _110.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _110.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.LastCommitInfo;
            fromPartial(object: Partial<_110.LastCommitInfo>): _110.LastCommitInfo;
            fromAmino(object: _110.LastCommitInfoAmino): _110.LastCommitInfo;
            toAmino(message: _110.LastCommitInfo): _110.LastCommitInfoAmino;
            fromAminoMsg(object: _110.LastCommitInfoAminoMsg): _110.LastCommitInfo;
            fromProtoMsg(message: _110.LastCommitInfoProtoMsg): _110.LastCommitInfo;
            toProto(message: _110.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _110.LastCommitInfo): _110.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _110.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.Event;
            fromPartial(object: Partial<_110.Event>): _110.Event;
            fromAmino(object: _110.EventAmino): _110.Event;
            toAmino(message: _110.Event): _110.EventAmino;
            fromAminoMsg(object: _110.EventAminoMsg): _110.Event;
            fromProtoMsg(message: _110.EventProtoMsg): _110.Event;
            toProto(message: _110.Event): Uint8Array;
            toProtoMsg(message: _110.Event): _110.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _110.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.EventAttribute;
            fromPartial(object: Partial<_110.EventAttribute>): _110.EventAttribute;
            fromAmino(object: _110.EventAttributeAmino): _110.EventAttribute;
            toAmino(message: _110.EventAttribute): _110.EventAttributeAmino;
            fromAminoMsg(object: _110.EventAttributeAminoMsg): _110.EventAttribute;
            fromProtoMsg(message: _110.EventAttributeProtoMsg): _110.EventAttribute;
            toProto(message: _110.EventAttribute): Uint8Array;
            toProtoMsg(message: _110.EventAttribute): _110.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _110.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.TxResult;
            fromPartial(object: Partial<_110.TxResult>): _110.TxResult;
            fromAmino(object: _110.TxResultAmino): _110.TxResult;
            toAmino(message: _110.TxResult): _110.TxResultAmino;
            fromAminoMsg(object: _110.TxResultAminoMsg): _110.TxResult;
            fromProtoMsg(message: _110.TxResultProtoMsg): _110.TxResult;
            toProto(message: _110.TxResult): Uint8Array;
            toProtoMsg(message: _110.TxResult): _110.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _110.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.Validator;
            fromPartial(object: Partial<_110.Validator>): _110.Validator;
            fromAmino(object: _110.ValidatorAmino): _110.Validator;
            toAmino(message: _110.Validator): _110.ValidatorAmino;
            fromAminoMsg(object: _110.ValidatorAminoMsg): _110.Validator;
            fromProtoMsg(message: _110.ValidatorProtoMsg): _110.Validator;
            toProto(message: _110.Validator): Uint8Array;
            toProtoMsg(message: _110.Validator): _110.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _110.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ValidatorUpdate;
            fromPartial(object: Partial<_110.ValidatorUpdate>): _110.ValidatorUpdate;
            fromAmino(object: _110.ValidatorUpdateAmino): _110.ValidatorUpdate;
            toAmino(message: _110.ValidatorUpdate): _110.ValidatorUpdateAmino;
            fromAminoMsg(object: _110.ValidatorUpdateAminoMsg): _110.ValidatorUpdate;
            fromProtoMsg(message: _110.ValidatorUpdateProtoMsg): _110.ValidatorUpdate;
            toProto(message: _110.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _110.ValidatorUpdate): _110.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _110.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.VoteInfo;
            fromPartial(object: Partial<_110.VoteInfo>): _110.VoteInfo;
            fromAmino(object: _110.VoteInfoAmino): _110.VoteInfo;
            toAmino(message: _110.VoteInfo): _110.VoteInfoAmino;
            fromAminoMsg(object: _110.VoteInfoAminoMsg): _110.VoteInfo;
            fromProtoMsg(message: _110.VoteInfoProtoMsg): _110.VoteInfo;
            toProto(message: _110.VoteInfo): Uint8Array;
            toProtoMsg(message: _110.VoteInfo): _110.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _110.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.Evidence;
            fromPartial(object: Partial<_110.Evidence>): _110.Evidence;
            fromAmino(object: _110.EvidenceAmino): _110.Evidence;
            toAmino(message: _110.Evidence): _110.EvidenceAmino;
            fromAminoMsg(object: _110.EvidenceAminoMsg): _110.Evidence;
            fromProtoMsg(message: _110.EvidenceProtoMsg): _110.Evidence;
            toProto(message: _110.Evidence): Uint8Array;
            toProtoMsg(message: _110.Evidence): _110.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _110.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.Snapshot;
            fromPartial(object: Partial<_110.Snapshot>): _110.Snapshot;
            fromAmino(object: _110.SnapshotAmino): _110.Snapshot;
            toAmino(message: _110.Snapshot): _110.SnapshotAmino;
            fromAminoMsg(object: _110.SnapshotAminoMsg): _110.Snapshot;
            fromProtoMsg(message: _110.SnapshotProtoMsg): _110.Snapshot;
            toProto(message: _110.Snapshot): Uint8Array;
            toProtoMsg(message: _110.Snapshot): _110.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _112.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.Proof;
            fromPartial(object: Partial<_112.Proof>): _112.Proof;
            fromAmino(object: _112.ProofAmino): _112.Proof;
            toAmino(message: _112.Proof): _112.ProofAmino;
            fromAminoMsg(object: _112.ProofAminoMsg): _112.Proof;
            fromProtoMsg(message: _112.ProofProtoMsg): _112.Proof;
            toProto(message: _112.Proof): Uint8Array;
            toProtoMsg(message: _112.Proof): _112.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _112.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ValueOp;
            fromPartial(object: Partial<_112.ValueOp>): _112.ValueOp;
            fromAmino(object: _112.ValueOpAmino): _112.ValueOp;
            toAmino(message: _112.ValueOp): _112.ValueOpAmino;
            fromAminoMsg(object: _112.ValueOpAminoMsg): _112.ValueOp;
            fromProtoMsg(message: _112.ValueOpProtoMsg): _112.ValueOp;
            toProto(message: _112.ValueOp): Uint8Array;
            toProtoMsg(message: _112.ValueOp): _112.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _112.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.DominoOp;
            fromPartial(object: Partial<_112.DominoOp>): _112.DominoOp;
            fromAmino(object: _112.DominoOpAmino): _112.DominoOp;
            toAmino(message: _112.DominoOp): _112.DominoOpAmino;
            fromAminoMsg(object: _112.DominoOpAminoMsg): _112.DominoOp;
            fromProtoMsg(message: _112.DominoOpProtoMsg): _112.DominoOp;
            toProto(message: _112.DominoOp): Uint8Array;
            toProtoMsg(message: _112.DominoOp): _112.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _112.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ProofOp;
            fromPartial(object: Partial<_112.ProofOp>): _112.ProofOp;
            fromAmino(object: _112.ProofOpAmino): _112.ProofOp;
            toAmino(message: _112.ProofOp): _112.ProofOpAmino;
            fromAminoMsg(object: _112.ProofOpAminoMsg): _112.ProofOp;
            fromProtoMsg(message: _112.ProofOpProtoMsg): _112.ProofOp;
            toProto(message: _112.ProofOp): Uint8Array;
            toProtoMsg(message: _112.ProofOp): _112.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _112.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ProofOps;
            fromPartial(object: Partial<_112.ProofOps>): _112.ProofOps;
            fromAmino(object: _112.ProofOpsAmino): _112.ProofOps;
            toAmino(message: _112.ProofOps): _112.ProofOpsAmino;
            fromAminoMsg(object: _112.ProofOpsAminoMsg): _112.ProofOps;
            fromProtoMsg(message: _112.ProofOpsProtoMsg): _112.ProofOps;
            toProto(message: _112.ProofOps): Uint8Array;
            toProtoMsg(message: _112.ProofOps): _112.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _111.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.PublicKey;
            fromPartial(object: Partial<_111.PublicKey>): _111.PublicKey;
            fromAmino(object: _111.PublicKeyAmino): _111.PublicKey;
            toAmino(message: _111.PublicKey): _111.PublicKeyAmino;
            fromAminoMsg(object: _111.PublicKeyAminoMsg): _111.PublicKey;
            fromProtoMsg(message: _111.PublicKeyProtoMsg): _111.PublicKey;
            toProto(message: _111.PublicKey): Uint8Array;
            toProtoMsg(message: _111.PublicKey): _111.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _113.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _113.BitArray;
                fromPartial(object: Partial<_113.BitArray>): _113.BitArray;
                fromAmino(object: _113.BitArrayAmino): _113.BitArray;
                toAmino(message: _113.BitArray): _113.BitArrayAmino;
                fromAminoMsg(object: _113.BitArrayAminoMsg): _113.BitArray;
                fromProtoMsg(message: _113.BitArrayProtoMsg): _113.BitArray;
                toProto(message: _113.BitArray): Uint8Array;
                toProtoMsg(message: _113.BitArray): _113.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _114.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.NetAddress;
            fromPartial(object: Partial<_114.NetAddress>): _114.NetAddress;
            fromAmino(object: _114.NetAddressAmino): _114.NetAddress;
            toAmino(message: _114.NetAddress): _114.NetAddressAmino;
            fromAminoMsg(object: _114.NetAddressAminoMsg): _114.NetAddress;
            fromProtoMsg(message: _114.NetAddressProtoMsg): _114.NetAddress;
            toProto(message: _114.NetAddress): Uint8Array;
            toProtoMsg(message: _114.NetAddress): _114.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _114.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.ProtocolVersion;
            fromPartial(object: Partial<_114.ProtocolVersion>): _114.ProtocolVersion;
            fromAmino(object: _114.ProtocolVersionAmino): _114.ProtocolVersion;
            toAmino(message: _114.ProtocolVersion): _114.ProtocolVersionAmino;
            fromAminoMsg(object: _114.ProtocolVersionAminoMsg): _114.ProtocolVersion;
            fromProtoMsg(message: _114.ProtocolVersionProtoMsg): _114.ProtocolVersion;
            toProto(message: _114.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _114.ProtocolVersion): _114.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _114.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.DefaultNodeInfo;
            fromPartial(object: Partial<_114.DefaultNodeInfo>): _114.DefaultNodeInfo;
            fromAmino(object: _114.DefaultNodeInfoAmino): _114.DefaultNodeInfo;
            toAmino(message: _114.DefaultNodeInfo): _114.DefaultNodeInfoAmino;
            fromAminoMsg(object: _114.DefaultNodeInfoAminoMsg): _114.DefaultNodeInfo;
            fromProtoMsg(message: _114.DefaultNodeInfoProtoMsg): _114.DefaultNodeInfo;
            toProto(message: _114.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _114.DefaultNodeInfo): _114.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _114.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.DefaultNodeInfoOther;
            fromPartial(object: Partial<_114.DefaultNodeInfoOther>): _114.DefaultNodeInfoOther;
            fromAmino(object: _114.DefaultNodeInfoOtherAmino): _114.DefaultNodeInfoOther;
            toAmino(message: _114.DefaultNodeInfoOther): _114.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _114.DefaultNodeInfoOtherAminoMsg): _114.DefaultNodeInfoOther;
            fromProtoMsg(message: _114.DefaultNodeInfoOtherProtoMsg): _114.DefaultNodeInfoOther;
            toProto(message: _114.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _114.DefaultNodeInfoOther): _114.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _119.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.ValidatorSet;
            fromPartial(object: Partial<_119.ValidatorSet>): _119.ValidatorSet;
            fromAmino(object: _119.ValidatorSetAmino): _119.ValidatorSet;
            toAmino(message: _119.ValidatorSet): _119.ValidatorSetAmino;
            fromAminoMsg(object: _119.ValidatorSetAminoMsg): _119.ValidatorSet;
            fromProtoMsg(message: _119.ValidatorSetProtoMsg): _119.ValidatorSet;
            toProto(message: _119.ValidatorSet): Uint8Array;
            toProtoMsg(message: _119.ValidatorSet): _119.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _119.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.Validator;
            fromPartial(object: Partial<_119.Validator>): _119.Validator;
            fromAmino(object: _119.ValidatorAmino): _119.Validator;
            toAmino(message: _119.Validator): _119.ValidatorAmino;
            fromAminoMsg(object: _119.ValidatorAminoMsg): _119.Validator;
            fromProtoMsg(message: _119.ValidatorProtoMsg): _119.Validator;
            toProto(message: _119.Validator): Uint8Array;
            toProtoMsg(message: _119.Validator): _119.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _119.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.SimpleValidator;
            fromPartial(object: Partial<_119.SimpleValidator>): _119.SimpleValidator;
            fromAmino(object: _119.SimpleValidatorAmino): _119.SimpleValidator;
            toAmino(message: _119.SimpleValidator): _119.SimpleValidatorAmino;
            fromAminoMsg(object: _119.SimpleValidatorAminoMsg): _119.SimpleValidator;
            fromProtoMsg(message: _119.SimpleValidatorProtoMsg): _119.SimpleValidator;
            toProto(message: _119.SimpleValidator): Uint8Array;
            toProtoMsg(message: _119.SimpleValidator): _119.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _118.BlockIDFlag;
        blockIDFlagToJSON(object: _118.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _118.SignedMsgType;
        signedMsgTypeToJSON(object: _118.SignedMsgType): string;
        BlockIDFlag: typeof _118.BlockIDFlag;
        BlockIDFlagSDKType: typeof _118.BlockIDFlag;
        BlockIDFlagAmino: typeof _118.BlockIDFlag;
        SignedMsgType: typeof _118.SignedMsgType;
        SignedMsgTypeSDKType: typeof _118.SignedMsgType;
        SignedMsgTypeAmino: typeof _118.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _118.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.PartSetHeader;
            fromPartial(object: Partial<_118.PartSetHeader>): _118.PartSetHeader;
            fromAmino(object: _118.PartSetHeaderAmino): _118.PartSetHeader;
            toAmino(message: _118.PartSetHeader): _118.PartSetHeaderAmino;
            fromAminoMsg(object: _118.PartSetHeaderAminoMsg): _118.PartSetHeader;
            fromProtoMsg(message: _118.PartSetHeaderProtoMsg): _118.PartSetHeader;
            toProto(message: _118.PartSetHeader): Uint8Array;
            toProtoMsg(message: _118.PartSetHeader): _118.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _118.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.Part;
            fromPartial(object: Partial<_118.Part>): _118.Part;
            fromAmino(object: _118.PartAmino): _118.Part;
            toAmino(message: _118.Part): _118.PartAmino;
            fromAminoMsg(object: _118.PartAminoMsg): _118.Part;
            fromProtoMsg(message: _118.PartProtoMsg): _118.Part;
            toProto(message: _118.Part): Uint8Array;
            toProtoMsg(message: _118.Part): _118.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _118.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.BlockID;
            fromPartial(object: Partial<_118.BlockID>): _118.BlockID;
            fromAmino(object: _118.BlockIDAmino): _118.BlockID;
            toAmino(message: _118.BlockID): _118.BlockIDAmino;
            fromAminoMsg(object: _118.BlockIDAminoMsg): _118.BlockID;
            fromProtoMsg(message: _118.BlockIDProtoMsg): _118.BlockID;
            toProto(message: _118.BlockID): Uint8Array;
            toProtoMsg(message: _118.BlockID): _118.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _118.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.Header;
            fromPartial(object: Partial<_118.Header>): _118.Header;
            fromAmino(object: _118.HeaderAmino): _118.Header;
            toAmino(message: _118.Header): _118.HeaderAmino;
            fromAminoMsg(object: _118.HeaderAminoMsg): _118.Header;
            fromProtoMsg(message: _118.HeaderProtoMsg): _118.Header;
            toProto(message: _118.Header): Uint8Array;
            toProtoMsg(message: _118.Header): _118.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _118.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.Data;
            fromPartial(object: Partial<_118.Data>): _118.Data;
            fromAmino(object: _118.DataAmino): _118.Data;
            toAmino(message: _118.Data): _118.DataAmino;
            fromAminoMsg(object: _118.DataAminoMsg): _118.Data;
            fromProtoMsg(message: _118.DataProtoMsg): _118.Data;
            toProto(message: _118.Data): Uint8Array;
            toProtoMsg(message: _118.Data): _118.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _118.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.Vote;
            fromPartial(object: Partial<_118.Vote>): _118.Vote;
            fromAmino(object: _118.VoteAmino): _118.Vote;
            toAmino(message: _118.Vote): _118.VoteAmino;
            fromAminoMsg(object: _118.VoteAminoMsg): _118.Vote;
            fromProtoMsg(message: _118.VoteProtoMsg): _118.Vote;
            toProto(message: _118.Vote): Uint8Array;
            toProtoMsg(message: _118.Vote): _118.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _118.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.Commit;
            fromPartial(object: Partial<_118.Commit>): _118.Commit;
            fromAmino(object: _118.CommitAmino): _118.Commit;
            toAmino(message: _118.Commit): _118.CommitAmino;
            fromAminoMsg(object: _118.CommitAminoMsg): _118.Commit;
            fromProtoMsg(message: _118.CommitProtoMsg): _118.Commit;
            toProto(message: _118.Commit): Uint8Array;
            toProtoMsg(message: _118.Commit): _118.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _118.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.CommitSig;
            fromPartial(object: Partial<_118.CommitSig>): _118.CommitSig;
            fromAmino(object: _118.CommitSigAmino): _118.CommitSig;
            toAmino(message: _118.CommitSig): _118.CommitSigAmino;
            fromAminoMsg(object: _118.CommitSigAminoMsg): _118.CommitSig;
            fromProtoMsg(message: _118.CommitSigProtoMsg): _118.CommitSig;
            toProto(message: _118.CommitSig): Uint8Array;
            toProtoMsg(message: _118.CommitSig): _118.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _118.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.Proposal;
            fromPartial(object: Partial<_118.Proposal>): _118.Proposal;
            fromAmino(object: _118.ProposalAmino): _118.Proposal;
            toAmino(message: _118.Proposal): _118.ProposalAmino;
            fromAminoMsg(object: _118.ProposalAminoMsg): _118.Proposal;
            fromProtoMsg(message: _118.ProposalProtoMsg): _118.Proposal;
            toProto(message: _118.Proposal): Uint8Array;
            toProtoMsg(message: _118.Proposal): _118.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _118.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.SignedHeader;
            fromPartial(object: Partial<_118.SignedHeader>): _118.SignedHeader;
            fromAmino(object: _118.SignedHeaderAmino): _118.SignedHeader;
            toAmino(message: _118.SignedHeader): _118.SignedHeaderAmino;
            fromAminoMsg(object: _118.SignedHeaderAminoMsg): _118.SignedHeader;
            fromProtoMsg(message: _118.SignedHeaderProtoMsg): _118.SignedHeader;
            toProto(message: _118.SignedHeader): Uint8Array;
            toProtoMsg(message: _118.SignedHeader): _118.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _118.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.LightBlock;
            fromPartial(object: Partial<_118.LightBlock>): _118.LightBlock;
            fromAmino(object: _118.LightBlockAmino): _118.LightBlock;
            toAmino(message: _118.LightBlock): _118.LightBlockAmino;
            fromAminoMsg(object: _118.LightBlockAminoMsg): _118.LightBlock;
            fromProtoMsg(message: _118.LightBlockProtoMsg): _118.LightBlock;
            toProto(message: _118.LightBlock): Uint8Array;
            toProtoMsg(message: _118.LightBlock): _118.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _118.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.BlockMeta;
            fromPartial(object: Partial<_118.BlockMeta>): _118.BlockMeta;
            fromAmino(object: _118.BlockMetaAmino): _118.BlockMeta;
            toAmino(message: _118.BlockMeta): _118.BlockMetaAmino;
            fromAminoMsg(object: _118.BlockMetaAminoMsg): _118.BlockMeta;
            fromProtoMsg(message: _118.BlockMetaProtoMsg): _118.BlockMeta;
            toProto(message: _118.BlockMeta): Uint8Array;
            toProtoMsg(message: _118.BlockMeta): _118.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _118.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.TxProof;
            fromPartial(object: Partial<_118.TxProof>): _118.TxProof;
            fromAmino(object: _118.TxProofAmino): _118.TxProof;
            toAmino(message: _118.TxProof): _118.TxProofAmino;
            fromAminoMsg(object: _118.TxProofAminoMsg): _118.TxProof;
            fromProtoMsg(message: _118.TxProofProtoMsg): _118.TxProof;
            toProto(message: _118.TxProof): Uint8Array;
            toProtoMsg(message: _118.TxProof): _118.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _117.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.ConsensusParams;
            fromPartial(object: Partial<_117.ConsensusParams>): _117.ConsensusParams;
            fromAmino(object: _117.ConsensusParamsAmino): _117.ConsensusParams;
            toAmino(message: _117.ConsensusParams): _117.ConsensusParamsAmino;
            fromAminoMsg(object: _117.ConsensusParamsAminoMsg): _117.ConsensusParams;
            fromProtoMsg(message: _117.ConsensusParamsProtoMsg): _117.ConsensusParams;
            toProto(message: _117.ConsensusParams): Uint8Array;
            toProtoMsg(message: _117.ConsensusParams): _117.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _117.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.BlockParams;
            fromPartial(object: Partial<_117.BlockParams>): _117.BlockParams;
            fromAmino(object: _117.BlockParamsAmino): _117.BlockParams;
            toAmino(message: _117.BlockParams): _117.BlockParamsAmino;
            fromAminoMsg(object: _117.BlockParamsAminoMsg): _117.BlockParams;
            fromProtoMsg(message: _117.BlockParamsProtoMsg): _117.BlockParams;
            toProto(message: _117.BlockParams): Uint8Array;
            toProtoMsg(message: _117.BlockParams): _117.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _117.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.EvidenceParams;
            fromPartial(object: Partial<_117.EvidenceParams>): _117.EvidenceParams;
            fromAmino(object: _117.EvidenceParamsAmino): _117.EvidenceParams;
            toAmino(message: _117.EvidenceParams): _117.EvidenceParamsAmino;
            fromAminoMsg(object: _117.EvidenceParamsAminoMsg): _117.EvidenceParams;
            fromProtoMsg(message: _117.EvidenceParamsProtoMsg): _117.EvidenceParams;
            toProto(message: _117.EvidenceParams): Uint8Array;
            toProtoMsg(message: _117.EvidenceParams): _117.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _117.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.ValidatorParams;
            fromPartial(object: Partial<_117.ValidatorParams>): _117.ValidatorParams;
            fromAmino(object: _117.ValidatorParamsAmino): _117.ValidatorParams;
            toAmino(message: _117.ValidatorParams): _117.ValidatorParamsAmino;
            fromAminoMsg(object: _117.ValidatorParamsAminoMsg): _117.ValidatorParams;
            fromProtoMsg(message: _117.ValidatorParamsProtoMsg): _117.ValidatorParams;
            toProto(message: _117.ValidatorParams): Uint8Array;
            toProtoMsg(message: _117.ValidatorParams): _117.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _117.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.VersionParams;
            fromPartial(object: Partial<_117.VersionParams>): _117.VersionParams;
            fromAmino(object: _117.VersionParamsAmino): _117.VersionParams;
            toAmino(message: _117.VersionParams): _117.VersionParamsAmino;
            fromAminoMsg(object: _117.VersionParamsAminoMsg): _117.VersionParams;
            fromProtoMsg(message: _117.VersionParamsProtoMsg): _117.VersionParams;
            toProto(message: _117.VersionParams): Uint8Array;
            toProtoMsg(message: _117.VersionParams): _117.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _117.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.HashedParams;
            fromPartial(object: Partial<_117.HashedParams>): _117.HashedParams;
            fromAmino(object: _117.HashedParamsAmino): _117.HashedParams;
            toAmino(message: _117.HashedParams): _117.HashedParamsAmino;
            fromAminoMsg(object: _117.HashedParamsAminoMsg): _117.HashedParams;
            fromProtoMsg(message: _117.HashedParamsProtoMsg): _117.HashedParams;
            toProto(message: _117.HashedParams): Uint8Array;
            toProtoMsg(message: _117.HashedParams): _117.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _116.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.Evidence;
            fromPartial(object: Partial<_116.Evidence>): _116.Evidence;
            fromAmino(object: _116.EvidenceAmino): _116.Evidence;
            toAmino(message: _116.Evidence): _116.EvidenceAmino;
            fromAminoMsg(object: _116.EvidenceAminoMsg): _116.Evidence;
            fromProtoMsg(message: _116.EvidenceProtoMsg): _116.Evidence;
            toProto(message: _116.Evidence): Uint8Array;
            toProtoMsg(message: _116.Evidence): _116.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _116.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.DuplicateVoteEvidence;
            fromPartial(object: Partial<_116.DuplicateVoteEvidence>): _116.DuplicateVoteEvidence;
            fromAmino(object: _116.DuplicateVoteEvidenceAmino): _116.DuplicateVoteEvidence;
            toAmino(message: _116.DuplicateVoteEvidence): _116.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _116.DuplicateVoteEvidenceAminoMsg): _116.DuplicateVoteEvidence;
            fromProtoMsg(message: _116.DuplicateVoteEvidenceProtoMsg): _116.DuplicateVoteEvidence;
            toProto(message: _116.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _116.DuplicateVoteEvidence): _116.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _116.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.LightClientAttackEvidence;
            fromPartial(object: Partial<_116.LightClientAttackEvidence>): _116.LightClientAttackEvidence;
            fromAmino(object: _116.LightClientAttackEvidenceAmino): _116.LightClientAttackEvidence;
            toAmino(message: _116.LightClientAttackEvidence): _116.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _116.LightClientAttackEvidenceAminoMsg): _116.LightClientAttackEvidence;
            fromProtoMsg(message: _116.LightClientAttackEvidenceProtoMsg): _116.LightClientAttackEvidence;
            toProto(message: _116.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _116.LightClientAttackEvidence): _116.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _116.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.EvidenceList;
            fromPartial(object: Partial<_116.EvidenceList>): _116.EvidenceList;
            fromAmino(object: _116.EvidenceListAmino): _116.EvidenceList;
            toAmino(message: _116.EvidenceList): _116.EvidenceListAmino;
            fromAminoMsg(object: _116.EvidenceListAminoMsg): _116.EvidenceList;
            fromProtoMsg(message: _116.EvidenceListProtoMsg): _116.EvidenceList;
            toProto(message: _116.EvidenceList): Uint8Array;
            toProtoMsg(message: _116.EvidenceList): _116.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _115.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.Block;
            fromPartial(object: Partial<_115.Block>): _115.Block;
            fromAmino(object: _115.BlockAmino): _115.Block;
            toAmino(message: _115.Block): _115.BlockAmino;
            fromAminoMsg(object: _115.BlockAminoMsg): _115.Block;
            fromProtoMsg(message: _115.BlockProtoMsg): _115.Block;
            toProto(message: _115.Block): Uint8Array;
            toProtoMsg(message: _115.Block): _115.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _120.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.App;
            fromPartial(object: Partial<_120.App>): _120.App;
            fromAmino(object: _120.AppAmino): _120.App;
            toAmino(message: _120.App): _120.AppAmino;
            fromAminoMsg(object: _120.AppAminoMsg): _120.App;
            fromProtoMsg(message: _120.AppProtoMsg): _120.App;
            toProto(message: _120.App): Uint8Array;
            toProtoMsg(message: _120.App): _120.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _120.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.Consensus;
            fromPartial(object: Partial<_120.Consensus>): _120.Consensus;
            fromAmino(object: _120.ConsensusAmino): _120.Consensus;
            toAmino(message: _120.Consensus): _120.ConsensusAmino;
            fromAminoMsg(object: _120.ConsensusAminoMsg): _120.Consensus;
            fromProtoMsg(message: _120.ConsensusProtoMsg): _120.Consensus;
            toProto(message: _120.Consensus): Uint8Array;
            toProtoMsg(message: _120.Consensus): _120.ConsensusProtoMsg;
        };
    };
}
