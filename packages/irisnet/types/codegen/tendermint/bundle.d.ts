import * as _103 from "./abci/types";
import * as _104 from "./crypto/keys";
import * as _105 from "./crypto/proof";
import * as _106 from "./libs/bits/types";
import * as _107 from "./p2p/types";
import * as _108 from "./p2p/conn";
import * as _109 from "./p2p/pex";
import * as _110 from "./types/block";
import * as _111 from "./types/evidence";
import * as _112 from "./types/params";
import * as _113 from "./types/types";
import * as _114 from "./types/validator";
import * as _115 from "./types/canonical";
import * as _116 from "./types/events";
import * as _117 from "./version/types";
import * as _118 from "./blockchain/types";
import * as _119 from "./consensus/types";
import * as _120 from "./consensus/wal";
import * as _121 from "./mempool/types";
import * as _122 from "./privval/types";
import * as _123 from "./rpc/grpc/types";
import * as _124 from "./state/types";
import * as _125 from "./statesync/types";
import * as _126 from "./store/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _103.CheckTxType;
        checkTxTypeToJSON(object: _103.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _103.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _103.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _103.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _103.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _103.EvidenceType;
        evidenceTypeToJSON(object: _103.EvidenceType): string;
        CheckTxType: typeof _103.CheckTxType;
        CheckTxTypeSDKType: typeof _103.CheckTxType;
        CheckTxTypeAmino: typeof _103.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _103.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _103.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _103.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _103.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _103.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _103.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _103.EvidenceType;
        EvidenceTypeSDKType: typeof _103.EvidenceType;
        EvidenceTypeAmino: typeof _103.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _103.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Request;
            fromPartial(object: Partial<_103.Request>): _103.Request;
            fromAmino(object: _103.RequestAmino): _103.Request;
            toAmino(message: _103.Request): _103.RequestAmino;
            fromAminoMsg(object: _103.RequestAminoMsg): _103.Request;
            fromProtoMsg(message: _103.RequestProtoMsg): _103.Request;
            toProto(message: _103.Request): Uint8Array;
            toProtoMsg(message: _103.Request): _103.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _103.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestEcho;
            fromPartial(object: Partial<_103.RequestEcho>): _103.RequestEcho;
            fromAmino(object: _103.RequestEchoAmino): _103.RequestEcho;
            toAmino(message: _103.RequestEcho): _103.RequestEchoAmino;
            fromAminoMsg(object: _103.RequestEchoAminoMsg): _103.RequestEcho;
            fromProtoMsg(message: _103.RequestEchoProtoMsg): _103.RequestEcho;
            toProto(message: _103.RequestEcho): Uint8Array;
            toProtoMsg(message: _103.RequestEcho): _103.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _103.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _103.RequestFlush;
            fromPartial(_: Partial<_103.RequestFlush>): _103.RequestFlush;
            fromAmino(_: _103.RequestFlushAmino): _103.RequestFlush;
            toAmino(_: _103.RequestFlush): _103.RequestFlushAmino;
            fromAminoMsg(object: _103.RequestFlushAminoMsg): _103.RequestFlush;
            fromProtoMsg(message: _103.RequestFlushProtoMsg): _103.RequestFlush;
            toProto(message: _103.RequestFlush): Uint8Array;
            toProtoMsg(message: _103.RequestFlush): _103.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _103.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestInfo;
            fromPartial(object: Partial<_103.RequestInfo>): _103.RequestInfo;
            fromAmino(object: _103.RequestInfoAmino): _103.RequestInfo;
            toAmino(message: _103.RequestInfo): _103.RequestInfoAmino;
            fromAminoMsg(object: _103.RequestInfoAminoMsg): _103.RequestInfo;
            fromProtoMsg(message: _103.RequestInfoProtoMsg): _103.RequestInfo;
            toProto(message: _103.RequestInfo): Uint8Array;
            toProtoMsg(message: _103.RequestInfo): _103.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _103.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestSetOption;
            fromPartial(object: Partial<_103.RequestSetOption>): _103.RequestSetOption;
            fromAmino(object: _103.RequestSetOptionAmino): _103.RequestSetOption;
            toAmino(message: _103.RequestSetOption): _103.RequestSetOptionAmino;
            fromAminoMsg(object: _103.RequestSetOptionAminoMsg): _103.RequestSetOption;
            fromProtoMsg(message: _103.RequestSetOptionProtoMsg): _103.RequestSetOption;
            toProto(message: _103.RequestSetOption): Uint8Array;
            toProtoMsg(message: _103.RequestSetOption): _103.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _103.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestInitChain;
            fromPartial(object: Partial<_103.RequestInitChain>): _103.RequestInitChain;
            fromAmino(object: _103.RequestInitChainAmino): _103.RequestInitChain;
            toAmino(message: _103.RequestInitChain): _103.RequestInitChainAmino;
            fromAminoMsg(object: _103.RequestInitChainAminoMsg): _103.RequestInitChain;
            fromProtoMsg(message: _103.RequestInitChainProtoMsg): _103.RequestInitChain;
            toProto(message: _103.RequestInitChain): Uint8Array;
            toProtoMsg(message: _103.RequestInitChain): _103.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _103.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestQuery;
            fromPartial(object: Partial<_103.RequestQuery>): _103.RequestQuery;
            fromAmino(object: _103.RequestQueryAmino): _103.RequestQuery;
            toAmino(message: _103.RequestQuery): _103.RequestQueryAmino;
            fromAminoMsg(object: _103.RequestQueryAminoMsg): _103.RequestQuery;
            fromProtoMsg(message: _103.RequestQueryProtoMsg): _103.RequestQuery;
            toProto(message: _103.RequestQuery): Uint8Array;
            toProtoMsg(message: _103.RequestQuery): _103.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _103.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestBeginBlock;
            fromPartial(object: Partial<_103.RequestBeginBlock>): _103.RequestBeginBlock;
            fromAmino(object: _103.RequestBeginBlockAmino): _103.RequestBeginBlock;
            toAmino(message: _103.RequestBeginBlock): _103.RequestBeginBlockAmino;
            fromAminoMsg(object: _103.RequestBeginBlockAminoMsg): _103.RequestBeginBlock;
            fromProtoMsg(message: _103.RequestBeginBlockProtoMsg): _103.RequestBeginBlock;
            toProto(message: _103.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _103.RequestBeginBlock): _103.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _103.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestCheckTx;
            fromPartial(object: Partial<_103.RequestCheckTx>): _103.RequestCheckTx;
            fromAmino(object: _103.RequestCheckTxAmino): _103.RequestCheckTx;
            toAmino(message: _103.RequestCheckTx): _103.RequestCheckTxAmino;
            fromAminoMsg(object: _103.RequestCheckTxAminoMsg): _103.RequestCheckTx;
            fromProtoMsg(message: _103.RequestCheckTxProtoMsg): _103.RequestCheckTx;
            toProto(message: _103.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _103.RequestCheckTx): _103.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _103.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestDeliverTx;
            fromPartial(object: Partial<_103.RequestDeliverTx>): _103.RequestDeliverTx;
            fromAmino(object: _103.RequestDeliverTxAmino): _103.RequestDeliverTx;
            toAmino(message: _103.RequestDeliverTx): _103.RequestDeliverTxAmino;
            fromAminoMsg(object: _103.RequestDeliverTxAminoMsg): _103.RequestDeliverTx;
            fromProtoMsg(message: _103.RequestDeliverTxProtoMsg): _103.RequestDeliverTx;
            toProto(message: _103.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _103.RequestDeliverTx): _103.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _103.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestEndBlock;
            fromPartial(object: Partial<_103.RequestEndBlock>): _103.RequestEndBlock;
            fromAmino(object: _103.RequestEndBlockAmino): _103.RequestEndBlock;
            toAmino(message: _103.RequestEndBlock): _103.RequestEndBlockAmino;
            fromAminoMsg(object: _103.RequestEndBlockAminoMsg): _103.RequestEndBlock;
            fromProtoMsg(message: _103.RequestEndBlockProtoMsg): _103.RequestEndBlock;
            toProto(message: _103.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _103.RequestEndBlock): _103.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _103.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _103.RequestCommit;
            fromPartial(_: Partial<_103.RequestCommit>): _103.RequestCommit;
            fromAmino(_: _103.RequestCommitAmino): _103.RequestCommit;
            toAmino(_: _103.RequestCommit): _103.RequestCommitAmino;
            fromAminoMsg(object: _103.RequestCommitAminoMsg): _103.RequestCommit;
            fromProtoMsg(message: _103.RequestCommitProtoMsg): _103.RequestCommit;
            toProto(message: _103.RequestCommit): Uint8Array;
            toProtoMsg(message: _103.RequestCommit): _103.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _103.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _103.RequestListSnapshots;
            fromPartial(_: Partial<_103.RequestListSnapshots>): _103.RequestListSnapshots;
            fromAmino(_: _103.RequestListSnapshotsAmino): _103.RequestListSnapshots;
            toAmino(_: _103.RequestListSnapshots): _103.RequestListSnapshotsAmino;
            fromAminoMsg(object: _103.RequestListSnapshotsAminoMsg): _103.RequestListSnapshots;
            fromProtoMsg(message: _103.RequestListSnapshotsProtoMsg): _103.RequestListSnapshots;
            toProto(message: _103.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _103.RequestListSnapshots): _103.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _103.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestOfferSnapshot;
            fromPartial(object: Partial<_103.RequestOfferSnapshot>): _103.RequestOfferSnapshot;
            fromAmino(object: _103.RequestOfferSnapshotAmino): _103.RequestOfferSnapshot;
            toAmino(message: _103.RequestOfferSnapshot): _103.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _103.RequestOfferSnapshotAminoMsg): _103.RequestOfferSnapshot;
            fromProtoMsg(message: _103.RequestOfferSnapshotProtoMsg): _103.RequestOfferSnapshot;
            toProto(message: _103.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _103.RequestOfferSnapshot): _103.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _103.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_103.RequestLoadSnapshotChunk>): _103.RequestLoadSnapshotChunk;
            fromAmino(object: _103.RequestLoadSnapshotChunkAmino): _103.RequestLoadSnapshotChunk;
            toAmino(message: _103.RequestLoadSnapshotChunk): _103.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _103.RequestLoadSnapshotChunkAminoMsg): _103.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _103.RequestLoadSnapshotChunkProtoMsg): _103.RequestLoadSnapshotChunk;
            toProto(message: _103.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _103.RequestLoadSnapshotChunk): _103.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _103.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_103.RequestApplySnapshotChunk>): _103.RequestApplySnapshotChunk;
            fromAmino(object: _103.RequestApplySnapshotChunkAmino): _103.RequestApplySnapshotChunk;
            toAmino(message: _103.RequestApplySnapshotChunk): _103.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _103.RequestApplySnapshotChunkAminoMsg): _103.RequestApplySnapshotChunk;
            fromProtoMsg(message: _103.RequestApplySnapshotChunkProtoMsg): _103.RequestApplySnapshotChunk;
            toProto(message: _103.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _103.RequestApplySnapshotChunk): _103.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _103.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Response;
            fromPartial(object: Partial<_103.Response>): _103.Response;
            fromAmino(object: _103.ResponseAmino): _103.Response;
            toAmino(message: _103.Response): _103.ResponseAmino;
            fromAminoMsg(object: _103.ResponseAminoMsg): _103.Response;
            fromProtoMsg(message: _103.ResponseProtoMsg): _103.Response;
            toProto(message: _103.Response): Uint8Array;
            toProtoMsg(message: _103.Response): _103.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _103.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseException;
            fromPartial(object: Partial<_103.ResponseException>): _103.ResponseException;
            fromAmino(object: _103.ResponseExceptionAmino): _103.ResponseException;
            toAmino(message: _103.ResponseException): _103.ResponseExceptionAmino;
            fromAminoMsg(object: _103.ResponseExceptionAminoMsg): _103.ResponseException;
            fromProtoMsg(message: _103.ResponseExceptionProtoMsg): _103.ResponseException;
            toProto(message: _103.ResponseException): Uint8Array;
            toProtoMsg(message: _103.ResponseException): _103.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _103.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseEcho;
            fromPartial(object: Partial<_103.ResponseEcho>): _103.ResponseEcho;
            fromAmino(object: _103.ResponseEchoAmino): _103.ResponseEcho;
            toAmino(message: _103.ResponseEcho): _103.ResponseEchoAmino;
            fromAminoMsg(object: _103.ResponseEchoAminoMsg): _103.ResponseEcho;
            fromProtoMsg(message: _103.ResponseEchoProtoMsg): _103.ResponseEcho;
            toProto(message: _103.ResponseEcho): Uint8Array;
            toProtoMsg(message: _103.ResponseEcho): _103.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _103.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _103.ResponseFlush;
            fromPartial(_: Partial<_103.ResponseFlush>): _103.ResponseFlush;
            fromAmino(_: _103.ResponseFlushAmino): _103.ResponseFlush;
            toAmino(_: _103.ResponseFlush): _103.ResponseFlushAmino;
            fromAminoMsg(object: _103.ResponseFlushAminoMsg): _103.ResponseFlush;
            fromProtoMsg(message: _103.ResponseFlushProtoMsg): _103.ResponseFlush;
            toProto(message: _103.ResponseFlush): Uint8Array;
            toProtoMsg(message: _103.ResponseFlush): _103.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _103.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseInfo;
            fromPartial(object: Partial<_103.ResponseInfo>): _103.ResponseInfo;
            fromAmino(object: _103.ResponseInfoAmino): _103.ResponseInfo;
            toAmino(message: _103.ResponseInfo): _103.ResponseInfoAmino;
            fromAminoMsg(object: _103.ResponseInfoAminoMsg): _103.ResponseInfo;
            fromProtoMsg(message: _103.ResponseInfoProtoMsg): _103.ResponseInfo;
            toProto(message: _103.ResponseInfo): Uint8Array;
            toProtoMsg(message: _103.ResponseInfo): _103.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _103.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseSetOption;
            fromPartial(object: Partial<_103.ResponseSetOption>): _103.ResponseSetOption;
            fromAmino(object: _103.ResponseSetOptionAmino): _103.ResponseSetOption;
            toAmino(message: _103.ResponseSetOption): _103.ResponseSetOptionAmino;
            fromAminoMsg(object: _103.ResponseSetOptionAminoMsg): _103.ResponseSetOption;
            fromProtoMsg(message: _103.ResponseSetOptionProtoMsg): _103.ResponseSetOption;
            toProto(message: _103.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _103.ResponseSetOption): _103.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _103.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseInitChain;
            fromPartial(object: Partial<_103.ResponseInitChain>): _103.ResponseInitChain;
            fromAmino(object: _103.ResponseInitChainAmino): _103.ResponseInitChain;
            toAmino(message: _103.ResponseInitChain): _103.ResponseInitChainAmino;
            fromAminoMsg(object: _103.ResponseInitChainAminoMsg): _103.ResponseInitChain;
            fromProtoMsg(message: _103.ResponseInitChainProtoMsg): _103.ResponseInitChain;
            toProto(message: _103.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _103.ResponseInitChain): _103.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _103.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseQuery;
            fromPartial(object: Partial<_103.ResponseQuery>): _103.ResponseQuery;
            fromAmino(object: _103.ResponseQueryAmino): _103.ResponseQuery;
            toAmino(message: _103.ResponseQuery): _103.ResponseQueryAmino;
            fromAminoMsg(object: _103.ResponseQueryAminoMsg): _103.ResponseQuery;
            fromProtoMsg(message: _103.ResponseQueryProtoMsg): _103.ResponseQuery;
            toProto(message: _103.ResponseQuery): Uint8Array;
            toProtoMsg(message: _103.ResponseQuery): _103.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _103.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseBeginBlock;
            fromPartial(object: Partial<_103.ResponseBeginBlock>): _103.ResponseBeginBlock;
            fromAmino(object: _103.ResponseBeginBlockAmino): _103.ResponseBeginBlock;
            toAmino(message: _103.ResponseBeginBlock): _103.ResponseBeginBlockAmino;
            fromAminoMsg(object: _103.ResponseBeginBlockAminoMsg): _103.ResponseBeginBlock;
            fromProtoMsg(message: _103.ResponseBeginBlockProtoMsg): _103.ResponseBeginBlock;
            toProto(message: _103.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _103.ResponseBeginBlock): _103.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _103.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseCheckTx;
            fromPartial(object: Partial<_103.ResponseCheckTx>): _103.ResponseCheckTx;
            fromAmino(object: _103.ResponseCheckTxAmino): _103.ResponseCheckTx;
            toAmino(message: _103.ResponseCheckTx): _103.ResponseCheckTxAmino;
            fromAminoMsg(object: _103.ResponseCheckTxAminoMsg): _103.ResponseCheckTx;
            fromProtoMsg(message: _103.ResponseCheckTxProtoMsg): _103.ResponseCheckTx;
            toProto(message: _103.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _103.ResponseCheckTx): _103.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _103.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseDeliverTx;
            fromPartial(object: Partial<_103.ResponseDeliverTx>): _103.ResponseDeliverTx;
            fromAmino(object: _103.ResponseDeliverTxAmino): _103.ResponseDeliverTx;
            toAmino(message: _103.ResponseDeliverTx): _103.ResponseDeliverTxAmino;
            fromAminoMsg(object: _103.ResponseDeliverTxAminoMsg): _103.ResponseDeliverTx;
            fromProtoMsg(message: _103.ResponseDeliverTxProtoMsg): _103.ResponseDeliverTx;
            toProto(message: _103.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _103.ResponseDeliverTx): _103.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _103.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseEndBlock;
            fromPartial(object: Partial<_103.ResponseEndBlock>): _103.ResponseEndBlock;
            fromAmino(object: _103.ResponseEndBlockAmino): _103.ResponseEndBlock;
            toAmino(message: _103.ResponseEndBlock): _103.ResponseEndBlockAmino;
            fromAminoMsg(object: _103.ResponseEndBlockAminoMsg): _103.ResponseEndBlock;
            fromProtoMsg(message: _103.ResponseEndBlockProtoMsg): _103.ResponseEndBlock;
            toProto(message: _103.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _103.ResponseEndBlock): _103.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _103.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseCommit;
            fromPartial(object: Partial<_103.ResponseCommit>): _103.ResponseCommit;
            fromAmino(object: _103.ResponseCommitAmino): _103.ResponseCommit;
            toAmino(message: _103.ResponseCommit): _103.ResponseCommitAmino;
            fromAminoMsg(object: _103.ResponseCommitAminoMsg): _103.ResponseCommit;
            fromProtoMsg(message: _103.ResponseCommitProtoMsg): _103.ResponseCommit;
            toProto(message: _103.ResponseCommit): Uint8Array;
            toProtoMsg(message: _103.ResponseCommit): _103.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _103.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseListSnapshots;
            fromPartial(object: Partial<_103.ResponseListSnapshots>): _103.ResponseListSnapshots;
            fromAmino(object: _103.ResponseListSnapshotsAmino): _103.ResponseListSnapshots;
            toAmino(message: _103.ResponseListSnapshots): _103.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _103.ResponseListSnapshotsAminoMsg): _103.ResponseListSnapshots;
            fromProtoMsg(message: _103.ResponseListSnapshotsProtoMsg): _103.ResponseListSnapshots;
            toProto(message: _103.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _103.ResponseListSnapshots): _103.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _103.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseOfferSnapshot;
            fromPartial(object: Partial<_103.ResponseOfferSnapshot>): _103.ResponseOfferSnapshot;
            fromAmino(object: _103.ResponseOfferSnapshotAmino): _103.ResponseOfferSnapshot;
            toAmino(message: _103.ResponseOfferSnapshot): _103.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _103.ResponseOfferSnapshotAminoMsg): _103.ResponseOfferSnapshot;
            fromProtoMsg(message: _103.ResponseOfferSnapshotProtoMsg): _103.ResponseOfferSnapshot;
            toProto(message: _103.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _103.ResponseOfferSnapshot): _103.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _103.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_103.ResponseLoadSnapshotChunk>): _103.ResponseLoadSnapshotChunk;
            fromAmino(object: _103.ResponseLoadSnapshotChunkAmino): _103.ResponseLoadSnapshotChunk;
            toAmino(message: _103.ResponseLoadSnapshotChunk): _103.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _103.ResponseLoadSnapshotChunkAminoMsg): _103.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _103.ResponseLoadSnapshotChunkProtoMsg): _103.ResponseLoadSnapshotChunk;
            toProto(message: _103.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _103.ResponseLoadSnapshotChunk): _103.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _103.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_103.ResponseApplySnapshotChunk>): _103.ResponseApplySnapshotChunk;
            fromAmino(object: _103.ResponseApplySnapshotChunkAmino): _103.ResponseApplySnapshotChunk;
            toAmino(message: _103.ResponseApplySnapshotChunk): _103.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _103.ResponseApplySnapshotChunkAminoMsg): _103.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _103.ResponseApplySnapshotChunkProtoMsg): _103.ResponseApplySnapshotChunk;
            toProto(message: _103.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _103.ResponseApplySnapshotChunk): _103.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _103.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ConsensusParams;
            fromPartial(object: Partial<_103.ConsensusParams>): _103.ConsensusParams;
            fromAmino(object: _103.ConsensusParamsAmino): _103.ConsensusParams;
            toAmino(message: _103.ConsensusParams): _103.ConsensusParamsAmino;
            fromAminoMsg(object: _103.ConsensusParamsAminoMsg): _103.ConsensusParams;
            fromProtoMsg(message: _103.ConsensusParamsProtoMsg): _103.ConsensusParams;
            toProto(message: _103.ConsensusParams): Uint8Array;
            toProtoMsg(message: _103.ConsensusParams): _103.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _103.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.BlockParams;
            fromPartial(object: Partial<_103.BlockParams>): _103.BlockParams;
            fromAmino(object: _103.BlockParamsAmino): _103.BlockParams;
            toAmino(message: _103.BlockParams): _103.BlockParamsAmino;
            fromAminoMsg(object: _103.BlockParamsAminoMsg): _103.BlockParams;
            fromProtoMsg(message: _103.BlockParamsProtoMsg): _103.BlockParams;
            toProto(message: _103.BlockParams): Uint8Array;
            toProtoMsg(message: _103.BlockParams): _103.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _103.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.LastCommitInfo;
            fromPartial(object: Partial<_103.LastCommitInfo>): _103.LastCommitInfo;
            fromAmino(object: _103.LastCommitInfoAmino): _103.LastCommitInfo;
            toAmino(message: _103.LastCommitInfo): _103.LastCommitInfoAmino;
            fromAminoMsg(object: _103.LastCommitInfoAminoMsg): _103.LastCommitInfo;
            fromProtoMsg(message: _103.LastCommitInfoProtoMsg): _103.LastCommitInfo;
            toProto(message: _103.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _103.LastCommitInfo): _103.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _103.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Event;
            fromPartial(object: Partial<_103.Event>): _103.Event;
            fromAmino(object: _103.EventAmino): _103.Event;
            toAmino(message: _103.Event): _103.EventAmino;
            fromAminoMsg(object: _103.EventAminoMsg): _103.Event;
            fromProtoMsg(message: _103.EventProtoMsg): _103.Event;
            toProto(message: _103.Event): Uint8Array;
            toProtoMsg(message: _103.Event): _103.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _103.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.EventAttribute;
            fromPartial(object: Partial<_103.EventAttribute>): _103.EventAttribute;
            fromAmino(object: _103.EventAttributeAmino): _103.EventAttribute;
            toAmino(message: _103.EventAttribute): _103.EventAttributeAmino;
            fromAminoMsg(object: _103.EventAttributeAminoMsg): _103.EventAttribute;
            fromProtoMsg(message: _103.EventAttributeProtoMsg): _103.EventAttribute;
            toProto(message: _103.EventAttribute): Uint8Array;
            toProtoMsg(message: _103.EventAttribute): _103.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _103.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.TxResult;
            fromPartial(object: Partial<_103.TxResult>): _103.TxResult;
            fromAmino(object: _103.TxResultAmino): _103.TxResult;
            toAmino(message: _103.TxResult): _103.TxResultAmino;
            fromAminoMsg(object: _103.TxResultAminoMsg): _103.TxResult;
            fromProtoMsg(message: _103.TxResultProtoMsg): _103.TxResult;
            toProto(message: _103.TxResult): Uint8Array;
            toProtoMsg(message: _103.TxResult): _103.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _103.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Validator;
            fromPartial(object: Partial<_103.Validator>): _103.Validator;
            fromAmino(object: _103.ValidatorAmino): _103.Validator;
            toAmino(message: _103.Validator): _103.ValidatorAmino;
            fromAminoMsg(object: _103.ValidatorAminoMsg): _103.Validator;
            fromProtoMsg(message: _103.ValidatorProtoMsg): _103.Validator;
            toProto(message: _103.Validator): Uint8Array;
            toProtoMsg(message: _103.Validator): _103.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _103.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ValidatorUpdate;
            fromPartial(object: Partial<_103.ValidatorUpdate>): _103.ValidatorUpdate;
            fromAmino(object: _103.ValidatorUpdateAmino): _103.ValidatorUpdate;
            toAmino(message: _103.ValidatorUpdate): _103.ValidatorUpdateAmino;
            fromAminoMsg(object: _103.ValidatorUpdateAminoMsg): _103.ValidatorUpdate;
            fromProtoMsg(message: _103.ValidatorUpdateProtoMsg): _103.ValidatorUpdate;
            toProto(message: _103.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _103.ValidatorUpdate): _103.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _103.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.VoteInfo;
            fromPartial(object: Partial<_103.VoteInfo>): _103.VoteInfo;
            fromAmino(object: _103.VoteInfoAmino): _103.VoteInfo;
            toAmino(message: _103.VoteInfo): _103.VoteInfoAmino;
            fromAminoMsg(object: _103.VoteInfoAminoMsg): _103.VoteInfo;
            fromProtoMsg(message: _103.VoteInfoProtoMsg): _103.VoteInfo;
            toProto(message: _103.VoteInfo): Uint8Array;
            toProtoMsg(message: _103.VoteInfo): _103.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _103.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Evidence;
            fromPartial(object: Partial<_103.Evidence>): _103.Evidence;
            fromAmino(object: _103.EvidenceAmino): _103.Evidence;
            toAmino(message: _103.Evidence): _103.EvidenceAmino;
            fromAminoMsg(object: _103.EvidenceAminoMsg): _103.Evidence;
            fromProtoMsg(message: _103.EvidenceProtoMsg): _103.Evidence;
            toProto(message: _103.Evidence): Uint8Array;
            toProtoMsg(message: _103.Evidence): _103.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _103.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Snapshot;
            fromPartial(object: Partial<_103.Snapshot>): _103.Snapshot;
            fromAmino(object: _103.SnapshotAmino): _103.Snapshot;
            toAmino(message: _103.Snapshot): _103.SnapshotAmino;
            fromAminoMsg(object: _103.SnapshotAminoMsg): _103.Snapshot;
            fromProtoMsg(message: _103.SnapshotProtoMsg): _103.Snapshot;
            toProto(message: _103.Snapshot): Uint8Array;
            toProtoMsg(message: _103.Snapshot): _103.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _105.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _105.Proof;
            fromPartial(object: Partial<_105.Proof>): _105.Proof;
            fromAmino(object: _105.ProofAmino): _105.Proof;
            toAmino(message: _105.Proof): _105.ProofAmino;
            fromAminoMsg(object: _105.ProofAminoMsg): _105.Proof;
            fromProtoMsg(message: _105.ProofProtoMsg): _105.Proof;
            toProto(message: _105.Proof): Uint8Array;
            toProtoMsg(message: _105.Proof): _105.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _105.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _105.ValueOp;
            fromPartial(object: Partial<_105.ValueOp>): _105.ValueOp;
            fromAmino(object: _105.ValueOpAmino): _105.ValueOp;
            toAmino(message: _105.ValueOp): _105.ValueOpAmino;
            fromAminoMsg(object: _105.ValueOpAminoMsg): _105.ValueOp;
            fromProtoMsg(message: _105.ValueOpProtoMsg): _105.ValueOp;
            toProto(message: _105.ValueOp): Uint8Array;
            toProtoMsg(message: _105.ValueOp): _105.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _105.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _105.DominoOp;
            fromPartial(object: Partial<_105.DominoOp>): _105.DominoOp;
            fromAmino(object: _105.DominoOpAmino): _105.DominoOp;
            toAmino(message: _105.DominoOp): _105.DominoOpAmino;
            fromAminoMsg(object: _105.DominoOpAminoMsg): _105.DominoOp;
            fromProtoMsg(message: _105.DominoOpProtoMsg): _105.DominoOp;
            toProto(message: _105.DominoOp): Uint8Array;
            toProtoMsg(message: _105.DominoOp): _105.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _105.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _105.ProofOp;
            fromPartial(object: Partial<_105.ProofOp>): _105.ProofOp;
            fromAmino(object: _105.ProofOpAmino): _105.ProofOp;
            toAmino(message: _105.ProofOp): _105.ProofOpAmino;
            fromAminoMsg(object: _105.ProofOpAminoMsg): _105.ProofOp;
            fromProtoMsg(message: _105.ProofOpProtoMsg): _105.ProofOp;
            toProto(message: _105.ProofOp): Uint8Array;
            toProtoMsg(message: _105.ProofOp): _105.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _105.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _105.ProofOps;
            fromPartial(object: Partial<_105.ProofOps>): _105.ProofOps;
            fromAmino(object: _105.ProofOpsAmino): _105.ProofOps;
            toAmino(message: _105.ProofOps): _105.ProofOpsAmino;
            fromAminoMsg(object: _105.ProofOpsAminoMsg): _105.ProofOps;
            fromProtoMsg(message: _105.ProofOpsProtoMsg): _105.ProofOps;
            toProto(message: _105.ProofOps): Uint8Array;
            toProtoMsg(message: _105.ProofOps): _105.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _104.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _104.PublicKey;
            fromPartial(object: Partial<_104.PublicKey>): _104.PublicKey;
            fromAmino(object: _104.PublicKeyAmino): _104.PublicKey;
            toAmino(message: _104.PublicKey): _104.PublicKeyAmino;
            fromAminoMsg(object: _104.PublicKeyAminoMsg): _104.PublicKey;
            fromProtoMsg(message: _104.PublicKeyProtoMsg): _104.PublicKey;
            toProto(message: _104.PublicKey): Uint8Array;
            toProtoMsg(message: _104.PublicKey): _104.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _106.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _106.BitArray;
                fromPartial(object: Partial<_106.BitArray>): _106.BitArray;
                fromAmino(object: _106.BitArrayAmino): _106.BitArray;
                toAmino(message: _106.BitArray): _106.BitArrayAmino;
                fromAminoMsg(object: _106.BitArrayAminoMsg): _106.BitArray;
                fromProtoMsg(message: _106.BitArrayProtoMsg): _106.BitArray;
                toProto(message: _106.BitArray): Uint8Array;
                toProtoMsg(message: _106.BitArray): _106.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        PexRequest: {
            typeUrl: string;
            encode(_: _109.PexRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _109.PexRequest;
            fromPartial(_: Partial<_109.PexRequest>): _109.PexRequest;
            fromAmino(_: _109.PexRequestAmino): _109.PexRequest;
            toAmino(_: _109.PexRequest): _109.PexRequestAmino;
            fromAminoMsg(object: _109.PexRequestAminoMsg): _109.PexRequest;
            fromProtoMsg(message: _109.PexRequestProtoMsg): _109.PexRequest;
            toProto(message: _109.PexRequest): Uint8Array;
            toProtoMsg(message: _109.PexRequest): _109.PexRequestProtoMsg;
        };
        PexAddrs: {
            typeUrl: string;
            encode(message: _109.PexAddrs, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _109.PexAddrs;
            fromPartial(object: Partial<_109.PexAddrs>): _109.PexAddrs;
            fromAmino(object: _109.PexAddrsAmino): _109.PexAddrs;
            toAmino(message: _109.PexAddrs): _109.PexAddrsAmino;
            fromAminoMsg(object: _109.PexAddrsAminoMsg): _109.PexAddrs;
            fromProtoMsg(message: _109.PexAddrsProtoMsg): _109.PexAddrs;
            toProto(message: _109.PexAddrs): Uint8Array;
            toProtoMsg(message: _109.PexAddrs): _109.PexAddrsProtoMsg;
        };
        Message: {
            typeUrl: string;
            encode(message: _109.Message, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _109.Message;
            fromPartial(object: Partial<_109.Message>): _109.Message;
            fromAmino(object: _109.MessageAmino): _109.Message;
            toAmino(message: _109.Message): _109.MessageAmino;
            fromAminoMsg(object: _109.MessageAminoMsg): _109.Message;
            fromProtoMsg(message: _109.MessageProtoMsg): _109.Message;
            toProto(message: _109.Message): Uint8Array;
            toProtoMsg(message: _109.Message): _109.MessageProtoMsg;
        };
        PacketPing: {
            typeUrl: string;
            encode(_: _108.PacketPing, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _108.PacketPing;
            fromPartial(_: Partial<_108.PacketPing>): _108.PacketPing;
            fromAmino(_: _108.PacketPingAmino): _108.PacketPing;
            toAmino(_: _108.PacketPing): _108.PacketPingAmino;
            fromAminoMsg(object: _108.PacketPingAminoMsg): _108.PacketPing;
            fromProtoMsg(message: _108.PacketPingProtoMsg): _108.PacketPing;
            toProto(message: _108.PacketPing): Uint8Array;
            toProtoMsg(message: _108.PacketPing): _108.PacketPingProtoMsg;
        };
        PacketPong: {
            typeUrl: string;
            encode(_: _108.PacketPong, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _108.PacketPong;
            fromPartial(_: Partial<_108.PacketPong>): _108.PacketPong;
            fromAmino(_: _108.PacketPongAmino): _108.PacketPong;
            toAmino(_: _108.PacketPong): _108.PacketPongAmino;
            fromAminoMsg(object: _108.PacketPongAminoMsg): _108.PacketPong;
            fromProtoMsg(message: _108.PacketPongProtoMsg): _108.PacketPong;
            toProto(message: _108.PacketPong): Uint8Array;
            toProtoMsg(message: _108.PacketPong): _108.PacketPongProtoMsg;
        };
        PacketMsg: {
            typeUrl: string;
            encode(message: _108.PacketMsg, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.PacketMsg;
            fromPartial(object: Partial<_108.PacketMsg>): _108.PacketMsg;
            fromAmino(object: _108.PacketMsgAmino): _108.PacketMsg;
            toAmino(message: _108.PacketMsg): _108.PacketMsgAmino;
            fromAminoMsg(object: _108.PacketMsgAminoMsg): _108.PacketMsg;
            fromProtoMsg(message: _108.PacketMsgProtoMsg): _108.PacketMsg;
            toProto(message: _108.PacketMsg): Uint8Array;
            toProtoMsg(message: _108.PacketMsg): _108.PacketMsgProtoMsg;
        };
        Packet: {
            typeUrl: string;
            encode(message: _108.Packet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.Packet;
            fromPartial(object: Partial<_108.Packet>): _108.Packet;
            fromAmino(object: _108.PacketAmino): _108.Packet;
            toAmino(message: _108.Packet): _108.PacketAmino;
            fromAminoMsg(object: _108.PacketAminoMsg): _108.Packet;
            fromProtoMsg(message: _108.PacketProtoMsg): _108.Packet;
            toProto(message: _108.Packet): Uint8Array;
            toProtoMsg(message: _108.Packet): _108.PacketProtoMsg;
        };
        AuthSigMessage: {
            typeUrl: string;
            encode(message: _108.AuthSigMessage, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.AuthSigMessage;
            fromPartial(object: Partial<_108.AuthSigMessage>): _108.AuthSigMessage;
            fromAmino(object: _108.AuthSigMessageAmino): _108.AuthSigMessage;
            toAmino(message: _108.AuthSigMessage): _108.AuthSigMessageAmino;
            fromAminoMsg(object: _108.AuthSigMessageAminoMsg): _108.AuthSigMessage;
            fromProtoMsg(message: _108.AuthSigMessageProtoMsg): _108.AuthSigMessage;
            toProto(message: _108.AuthSigMessage): Uint8Array;
            toProtoMsg(message: _108.AuthSigMessage): _108.AuthSigMessageProtoMsg;
        };
        NetAddress: {
            typeUrl: string;
            encode(message: _107.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _107.NetAddress;
            fromPartial(object: Partial<_107.NetAddress>): _107.NetAddress;
            fromAmino(object: _107.NetAddressAmino): _107.NetAddress;
            toAmino(message: _107.NetAddress): _107.NetAddressAmino;
            fromAminoMsg(object: _107.NetAddressAminoMsg): _107.NetAddress;
            fromProtoMsg(message: _107.NetAddressProtoMsg): _107.NetAddress;
            toProto(message: _107.NetAddress): Uint8Array;
            toProtoMsg(message: _107.NetAddress): _107.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _107.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _107.ProtocolVersion;
            fromPartial(object: Partial<_107.ProtocolVersion>): _107.ProtocolVersion;
            fromAmino(object: _107.ProtocolVersionAmino): _107.ProtocolVersion;
            toAmino(message: _107.ProtocolVersion): _107.ProtocolVersionAmino;
            fromAminoMsg(object: _107.ProtocolVersionAminoMsg): _107.ProtocolVersion;
            fromProtoMsg(message: _107.ProtocolVersionProtoMsg): _107.ProtocolVersion;
            toProto(message: _107.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _107.ProtocolVersion): _107.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _107.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _107.DefaultNodeInfo;
            fromPartial(object: Partial<_107.DefaultNodeInfo>): _107.DefaultNodeInfo;
            fromAmino(object: _107.DefaultNodeInfoAmino): _107.DefaultNodeInfo;
            toAmino(message: _107.DefaultNodeInfo): _107.DefaultNodeInfoAmino;
            fromAminoMsg(object: _107.DefaultNodeInfoAminoMsg): _107.DefaultNodeInfo;
            fromProtoMsg(message: _107.DefaultNodeInfoProtoMsg): _107.DefaultNodeInfo;
            toProto(message: _107.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _107.DefaultNodeInfo): _107.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _107.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _107.DefaultNodeInfoOther;
            fromPartial(object: Partial<_107.DefaultNodeInfoOther>): _107.DefaultNodeInfoOther;
            fromAmino(object: _107.DefaultNodeInfoOtherAmino): _107.DefaultNodeInfoOther;
            toAmino(message: _107.DefaultNodeInfoOther): _107.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _107.DefaultNodeInfoOtherAminoMsg): _107.DefaultNodeInfoOther;
            fromProtoMsg(message: _107.DefaultNodeInfoOtherProtoMsg): _107.DefaultNodeInfoOther;
            toProto(message: _107.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _107.DefaultNodeInfoOther): _107.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        EventDataRoundState: {
            typeUrl: string;
            encode(message: _116.EventDataRoundState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.EventDataRoundState;
            fromPartial(object: Partial<_116.EventDataRoundState>): _116.EventDataRoundState;
            fromAmino(object: _116.EventDataRoundStateAmino): _116.EventDataRoundState;
            toAmino(message: _116.EventDataRoundState): _116.EventDataRoundStateAmino;
            fromAminoMsg(object: _116.EventDataRoundStateAminoMsg): _116.EventDataRoundState;
            fromProtoMsg(message: _116.EventDataRoundStateProtoMsg): _116.EventDataRoundState;
            toProto(message: _116.EventDataRoundState): Uint8Array;
            toProtoMsg(message: _116.EventDataRoundState): _116.EventDataRoundStateProtoMsg;
        };
        CanonicalBlockID: {
            typeUrl: string;
            encode(message: _115.CanonicalBlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.CanonicalBlockID;
            fromPartial(object: Partial<_115.CanonicalBlockID>): _115.CanonicalBlockID;
            fromAmino(object: _115.CanonicalBlockIDAmino): _115.CanonicalBlockID;
            toAmino(message: _115.CanonicalBlockID): _115.CanonicalBlockIDAmino;
            fromAminoMsg(object: _115.CanonicalBlockIDAminoMsg): _115.CanonicalBlockID;
            fromProtoMsg(message: _115.CanonicalBlockIDProtoMsg): _115.CanonicalBlockID;
            toProto(message: _115.CanonicalBlockID): Uint8Array;
            toProtoMsg(message: _115.CanonicalBlockID): _115.CanonicalBlockIDProtoMsg;
        };
        CanonicalPartSetHeader: {
            typeUrl: string;
            encode(message: _115.CanonicalPartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.CanonicalPartSetHeader;
            fromPartial(object: Partial<_115.CanonicalPartSetHeader>): _115.CanonicalPartSetHeader;
            fromAmino(object: _115.CanonicalPartSetHeaderAmino): _115.CanonicalPartSetHeader;
            toAmino(message: _115.CanonicalPartSetHeader): _115.CanonicalPartSetHeaderAmino;
            fromAminoMsg(object: _115.CanonicalPartSetHeaderAminoMsg): _115.CanonicalPartSetHeader;
            fromProtoMsg(message: _115.CanonicalPartSetHeaderProtoMsg): _115.CanonicalPartSetHeader;
            toProto(message: _115.CanonicalPartSetHeader): Uint8Array;
            toProtoMsg(message: _115.CanonicalPartSetHeader): _115.CanonicalPartSetHeaderProtoMsg;
        };
        CanonicalProposal: {
            typeUrl: string;
            encode(message: _115.CanonicalProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.CanonicalProposal;
            fromPartial(object: Partial<_115.CanonicalProposal>): _115.CanonicalProposal;
            fromAmino(object: _115.CanonicalProposalAmino): _115.CanonicalProposal;
            toAmino(message: _115.CanonicalProposal): _115.CanonicalProposalAmino;
            fromAminoMsg(object: _115.CanonicalProposalAminoMsg): _115.CanonicalProposal;
            fromProtoMsg(message: _115.CanonicalProposalProtoMsg): _115.CanonicalProposal;
            toProto(message: _115.CanonicalProposal): Uint8Array;
            toProtoMsg(message: _115.CanonicalProposal): _115.CanonicalProposalProtoMsg;
        };
        CanonicalVote: {
            typeUrl: string;
            encode(message: _115.CanonicalVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.CanonicalVote;
            fromPartial(object: Partial<_115.CanonicalVote>): _115.CanonicalVote;
            fromAmino(object: _115.CanonicalVoteAmino): _115.CanonicalVote;
            toAmino(message: _115.CanonicalVote): _115.CanonicalVoteAmino;
            fromAminoMsg(object: _115.CanonicalVoteAminoMsg): _115.CanonicalVote;
            fromProtoMsg(message: _115.CanonicalVoteProtoMsg): _115.CanonicalVote;
            toProto(message: _115.CanonicalVote): Uint8Array;
            toProtoMsg(message: _115.CanonicalVote): _115.CanonicalVoteProtoMsg;
        };
        ValidatorSet: {
            typeUrl: string;
            encode(message: _114.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.ValidatorSet;
            fromPartial(object: Partial<_114.ValidatorSet>): _114.ValidatorSet;
            fromAmino(object: _114.ValidatorSetAmino): _114.ValidatorSet;
            toAmino(message: _114.ValidatorSet): _114.ValidatorSetAmino;
            fromAminoMsg(object: _114.ValidatorSetAminoMsg): _114.ValidatorSet;
            fromProtoMsg(message: _114.ValidatorSetProtoMsg): _114.ValidatorSet;
            toProto(message: _114.ValidatorSet): Uint8Array;
            toProtoMsg(message: _114.ValidatorSet): _114.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _114.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.Validator;
            fromPartial(object: Partial<_114.Validator>): _114.Validator;
            fromAmino(object: _114.ValidatorAmino): _114.Validator;
            toAmino(message: _114.Validator): _114.ValidatorAmino;
            fromAminoMsg(object: _114.ValidatorAminoMsg): _114.Validator;
            fromProtoMsg(message: _114.ValidatorProtoMsg): _114.Validator;
            toProto(message: _114.Validator): Uint8Array;
            toProtoMsg(message: _114.Validator): _114.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _114.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.SimpleValidator;
            fromPartial(object: Partial<_114.SimpleValidator>): _114.SimpleValidator;
            fromAmino(object: _114.SimpleValidatorAmino): _114.SimpleValidator;
            toAmino(message: _114.SimpleValidator): _114.SimpleValidatorAmino;
            fromAminoMsg(object: _114.SimpleValidatorAminoMsg): _114.SimpleValidator;
            fromProtoMsg(message: _114.SimpleValidatorProtoMsg): _114.SimpleValidator;
            toProto(message: _114.SimpleValidator): Uint8Array;
            toProtoMsg(message: _114.SimpleValidator): _114.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _113.BlockIDFlag;
        blockIDFlagToJSON(object: _113.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _113.SignedMsgType;
        signedMsgTypeToJSON(object: _113.SignedMsgType): string;
        BlockIDFlag: typeof _113.BlockIDFlag;
        BlockIDFlagSDKType: typeof _113.BlockIDFlag;
        BlockIDFlagAmino: typeof _113.BlockIDFlag;
        SignedMsgType: typeof _113.SignedMsgType;
        SignedMsgTypeSDKType: typeof _113.SignedMsgType;
        SignedMsgTypeAmino: typeof _113.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _113.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.PartSetHeader;
            fromPartial(object: Partial<_113.PartSetHeader>): _113.PartSetHeader;
            fromAmino(object: _113.PartSetHeaderAmino): _113.PartSetHeader;
            toAmino(message: _113.PartSetHeader): _113.PartSetHeaderAmino;
            fromAminoMsg(object: _113.PartSetHeaderAminoMsg): _113.PartSetHeader;
            fromProtoMsg(message: _113.PartSetHeaderProtoMsg): _113.PartSetHeader;
            toProto(message: _113.PartSetHeader): Uint8Array;
            toProtoMsg(message: _113.PartSetHeader): _113.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _113.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Part;
            fromPartial(object: Partial<_113.Part>): _113.Part;
            fromAmino(object: _113.PartAmino): _113.Part;
            toAmino(message: _113.Part): _113.PartAmino;
            fromAminoMsg(object: _113.PartAminoMsg): _113.Part;
            fromProtoMsg(message: _113.PartProtoMsg): _113.Part;
            toProto(message: _113.Part): Uint8Array;
            toProtoMsg(message: _113.Part): _113.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _113.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.BlockID;
            fromPartial(object: Partial<_113.BlockID>): _113.BlockID;
            fromAmino(object: _113.BlockIDAmino): _113.BlockID;
            toAmino(message: _113.BlockID): _113.BlockIDAmino;
            fromAminoMsg(object: _113.BlockIDAminoMsg): _113.BlockID;
            fromProtoMsg(message: _113.BlockIDProtoMsg): _113.BlockID;
            toProto(message: _113.BlockID): Uint8Array;
            toProtoMsg(message: _113.BlockID): _113.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _113.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Header;
            fromPartial(object: Partial<_113.Header>): _113.Header;
            fromAmino(object: _113.HeaderAmino): _113.Header;
            toAmino(message: _113.Header): _113.HeaderAmino;
            fromAminoMsg(object: _113.HeaderAminoMsg): _113.Header;
            fromProtoMsg(message: _113.HeaderProtoMsg): _113.Header;
            toProto(message: _113.Header): Uint8Array;
            toProtoMsg(message: _113.Header): _113.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _113.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Data;
            fromPartial(object: Partial<_113.Data>): _113.Data;
            fromAmino(object: _113.DataAmino): _113.Data;
            toAmino(message: _113.Data): _113.DataAmino;
            fromAminoMsg(object: _113.DataAminoMsg): _113.Data;
            fromProtoMsg(message: _113.DataProtoMsg): _113.Data;
            toProto(message: _113.Data): Uint8Array;
            toProtoMsg(message: _113.Data): _113.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _113.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Vote;
            fromPartial(object: Partial<_113.Vote>): _113.Vote;
            fromAmino(object: _113.VoteAmino): _113.Vote;
            toAmino(message: _113.Vote): _113.VoteAmino;
            fromAminoMsg(object: _113.VoteAminoMsg): _113.Vote;
            fromProtoMsg(message: _113.VoteProtoMsg): _113.Vote;
            toProto(message: _113.Vote): Uint8Array;
            toProtoMsg(message: _113.Vote): _113.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _113.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Commit;
            fromPartial(object: Partial<_113.Commit>): _113.Commit;
            fromAmino(object: _113.CommitAmino): _113.Commit;
            toAmino(message: _113.Commit): _113.CommitAmino;
            fromAminoMsg(object: _113.CommitAminoMsg): _113.Commit;
            fromProtoMsg(message: _113.CommitProtoMsg): _113.Commit;
            toProto(message: _113.Commit): Uint8Array;
            toProtoMsg(message: _113.Commit): _113.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _113.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.CommitSig;
            fromPartial(object: Partial<_113.CommitSig>): _113.CommitSig;
            fromAmino(object: _113.CommitSigAmino): _113.CommitSig;
            toAmino(message: _113.CommitSig): _113.CommitSigAmino;
            fromAminoMsg(object: _113.CommitSigAminoMsg): _113.CommitSig;
            fromProtoMsg(message: _113.CommitSigProtoMsg): _113.CommitSig;
            toProto(message: _113.CommitSig): Uint8Array;
            toProtoMsg(message: _113.CommitSig): _113.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _113.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Proposal;
            fromPartial(object: Partial<_113.Proposal>): _113.Proposal;
            fromAmino(object: _113.ProposalAmino): _113.Proposal;
            toAmino(message: _113.Proposal): _113.ProposalAmino;
            fromAminoMsg(object: _113.ProposalAminoMsg): _113.Proposal;
            fromProtoMsg(message: _113.ProposalProtoMsg): _113.Proposal;
            toProto(message: _113.Proposal): Uint8Array;
            toProtoMsg(message: _113.Proposal): _113.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _113.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.SignedHeader;
            fromPartial(object: Partial<_113.SignedHeader>): _113.SignedHeader;
            fromAmino(object: _113.SignedHeaderAmino): _113.SignedHeader;
            toAmino(message: _113.SignedHeader): _113.SignedHeaderAmino;
            fromAminoMsg(object: _113.SignedHeaderAminoMsg): _113.SignedHeader;
            fromProtoMsg(message: _113.SignedHeaderProtoMsg): _113.SignedHeader;
            toProto(message: _113.SignedHeader): Uint8Array;
            toProtoMsg(message: _113.SignedHeader): _113.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _113.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.LightBlock;
            fromPartial(object: Partial<_113.LightBlock>): _113.LightBlock;
            fromAmino(object: _113.LightBlockAmino): _113.LightBlock;
            toAmino(message: _113.LightBlock): _113.LightBlockAmino;
            fromAminoMsg(object: _113.LightBlockAminoMsg): _113.LightBlock;
            fromProtoMsg(message: _113.LightBlockProtoMsg): _113.LightBlock;
            toProto(message: _113.LightBlock): Uint8Array;
            toProtoMsg(message: _113.LightBlock): _113.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _113.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.BlockMeta;
            fromPartial(object: Partial<_113.BlockMeta>): _113.BlockMeta;
            fromAmino(object: _113.BlockMetaAmino): _113.BlockMeta;
            toAmino(message: _113.BlockMeta): _113.BlockMetaAmino;
            fromAminoMsg(object: _113.BlockMetaAminoMsg): _113.BlockMeta;
            fromProtoMsg(message: _113.BlockMetaProtoMsg): _113.BlockMeta;
            toProto(message: _113.BlockMeta): Uint8Array;
            toProtoMsg(message: _113.BlockMeta): _113.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _113.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.TxProof;
            fromPartial(object: Partial<_113.TxProof>): _113.TxProof;
            fromAmino(object: _113.TxProofAmino): _113.TxProof;
            toAmino(message: _113.TxProof): _113.TxProofAmino;
            fromAminoMsg(object: _113.TxProofAminoMsg): _113.TxProof;
            fromProtoMsg(message: _113.TxProofProtoMsg): _113.TxProof;
            toProto(message: _113.TxProof): Uint8Array;
            toProtoMsg(message: _113.TxProof): _113.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _112.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ConsensusParams;
            fromPartial(object: Partial<_112.ConsensusParams>): _112.ConsensusParams;
            fromAmino(object: _112.ConsensusParamsAmino): _112.ConsensusParams;
            toAmino(message: _112.ConsensusParams): _112.ConsensusParamsAmino;
            fromAminoMsg(object: _112.ConsensusParamsAminoMsg): _112.ConsensusParams;
            fromProtoMsg(message: _112.ConsensusParamsProtoMsg): _112.ConsensusParams;
            toProto(message: _112.ConsensusParams): Uint8Array;
            toProtoMsg(message: _112.ConsensusParams): _112.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _112.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.BlockParams;
            fromPartial(object: Partial<_112.BlockParams>): _112.BlockParams;
            fromAmino(object: _112.BlockParamsAmino): _112.BlockParams;
            toAmino(message: _112.BlockParams): _112.BlockParamsAmino;
            fromAminoMsg(object: _112.BlockParamsAminoMsg): _112.BlockParams;
            fromProtoMsg(message: _112.BlockParamsProtoMsg): _112.BlockParams;
            toProto(message: _112.BlockParams): Uint8Array;
            toProtoMsg(message: _112.BlockParams): _112.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _112.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.EvidenceParams;
            fromPartial(object: Partial<_112.EvidenceParams>): _112.EvidenceParams;
            fromAmino(object: _112.EvidenceParamsAmino): _112.EvidenceParams;
            toAmino(message: _112.EvidenceParams): _112.EvidenceParamsAmino;
            fromAminoMsg(object: _112.EvidenceParamsAminoMsg): _112.EvidenceParams;
            fromProtoMsg(message: _112.EvidenceParamsProtoMsg): _112.EvidenceParams;
            toProto(message: _112.EvidenceParams): Uint8Array;
            toProtoMsg(message: _112.EvidenceParams): _112.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _112.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ValidatorParams;
            fromPartial(object: Partial<_112.ValidatorParams>): _112.ValidatorParams;
            fromAmino(object: _112.ValidatorParamsAmino): _112.ValidatorParams;
            toAmino(message: _112.ValidatorParams): _112.ValidatorParamsAmino;
            fromAminoMsg(object: _112.ValidatorParamsAminoMsg): _112.ValidatorParams;
            fromProtoMsg(message: _112.ValidatorParamsProtoMsg): _112.ValidatorParams;
            toProto(message: _112.ValidatorParams): Uint8Array;
            toProtoMsg(message: _112.ValidatorParams): _112.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _112.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.VersionParams;
            fromPartial(object: Partial<_112.VersionParams>): _112.VersionParams;
            fromAmino(object: _112.VersionParamsAmino): _112.VersionParams;
            toAmino(message: _112.VersionParams): _112.VersionParamsAmino;
            fromAminoMsg(object: _112.VersionParamsAminoMsg): _112.VersionParams;
            fromProtoMsg(message: _112.VersionParamsProtoMsg): _112.VersionParams;
            toProto(message: _112.VersionParams): Uint8Array;
            toProtoMsg(message: _112.VersionParams): _112.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _112.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.HashedParams;
            fromPartial(object: Partial<_112.HashedParams>): _112.HashedParams;
            fromAmino(object: _112.HashedParamsAmino): _112.HashedParams;
            toAmino(message: _112.HashedParams): _112.HashedParamsAmino;
            fromAminoMsg(object: _112.HashedParamsAminoMsg): _112.HashedParams;
            fromProtoMsg(message: _112.HashedParamsProtoMsg): _112.HashedParams;
            toProto(message: _112.HashedParams): Uint8Array;
            toProtoMsg(message: _112.HashedParams): _112.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _111.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.Evidence;
            fromPartial(object: Partial<_111.Evidence>): _111.Evidence;
            fromAmino(object: _111.EvidenceAmino): _111.Evidence;
            toAmino(message: _111.Evidence): _111.EvidenceAmino;
            fromAminoMsg(object: _111.EvidenceAminoMsg): _111.Evidence;
            fromProtoMsg(message: _111.EvidenceProtoMsg): _111.Evidence;
            toProto(message: _111.Evidence): Uint8Array;
            toProtoMsg(message: _111.Evidence): _111.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _111.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.DuplicateVoteEvidence;
            fromPartial(object: Partial<_111.DuplicateVoteEvidence>): _111.DuplicateVoteEvidence;
            fromAmino(object: _111.DuplicateVoteEvidenceAmino): _111.DuplicateVoteEvidence;
            toAmino(message: _111.DuplicateVoteEvidence): _111.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _111.DuplicateVoteEvidenceAminoMsg): _111.DuplicateVoteEvidence;
            fromProtoMsg(message: _111.DuplicateVoteEvidenceProtoMsg): _111.DuplicateVoteEvidence;
            toProto(message: _111.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _111.DuplicateVoteEvidence): _111.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _111.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.LightClientAttackEvidence;
            fromPartial(object: Partial<_111.LightClientAttackEvidence>): _111.LightClientAttackEvidence;
            fromAmino(object: _111.LightClientAttackEvidenceAmino): _111.LightClientAttackEvidence;
            toAmino(message: _111.LightClientAttackEvidence): _111.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _111.LightClientAttackEvidenceAminoMsg): _111.LightClientAttackEvidence;
            fromProtoMsg(message: _111.LightClientAttackEvidenceProtoMsg): _111.LightClientAttackEvidence;
            toProto(message: _111.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _111.LightClientAttackEvidence): _111.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _111.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.EvidenceList;
            fromPartial(object: Partial<_111.EvidenceList>): _111.EvidenceList;
            fromAmino(object: _111.EvidenceListAmino): _111.EvidenceList;
            toAmino(message: _111.EvidenceList): _111.EvidenceListAmino;
            fromAminoMsg(object: _111.EvidenceListAminoMsg): _111.EvidenceList;
            fromProtoMsg(message: _111.EvidenceListProtoMsg): _111.EvidenceList;
            toProto(message: _111.EvidenceList): Uint8Array;
            toProtoMsg(message: _111.EvidenceList): _111.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _110.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.Block;
            fromPartial(object: Partial<_110.Block>): _110.Block;
            fromAmino(object: _110.BlockAmino): _110.Block;
            toAmino(message: _110.Block): _110.BlockAmino;
            fromAminoMsg(object: _110.BlockAminoMsg): _110.Block;
            fromProtoMsg(message: _110.BlockProtoMsg): _110.Block;
            toProto(message: _110.Block): Uint8Array;
            toProtoMsg(message: _110.Block): _110.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _117.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.App;
            fromPartial(object: Partial<_117.App>): _117.App;
            fromAmino(object: _117.AppAmino): _117.App;
            toAmino(message: _117.App): _117.AppAmino;
            fromAminoMsg(object: _117.AppAminoMsg): _117.App;
            fromProtoMsg(message: _117.AppProtoMsg): _117.App;
            toProto(message: _117.App): Uint8Array;
            toProtoMsg(message: _117.App): _117.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _117.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.Consensus;
            fromPartial(object: Partial<_117.Consensus>): _117.Consensus;
            fromAmino(object: _117.ConsensusAmino): _117.Consensus;
            toAmino(message: _117.Consensus): _117.ConsensusAmino;
            fromAminoMsg(object: _117.ConsensusAminoMsg): _117.Consensus;
            fromProtoMsg(message: _117.ConsensusProtoMsg): _117.Consensus;
            toProto(message: _117.Consensus): Uint8Array;
            toProtoMsg(message: _117.Consensus): _117.ConsensusProtoMsg;
        };
    };
    const blockchain: {
        BlockRequest: {
            typeUrl: string;
            encode(message: _118.BlockRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.BlockRequest;
            fromPartial(object: Partial<_118.BlockRequest>): _118.BlockRequest;
            fromAmino(object: _118.BlockRequestAmino): _118.BlockRequest;
            toAmino(message: _118.BlockRequest): _118.BlockRequestAmino;
            fromAminoMsg(object: _118.BlockRequestAminoMsg): _118.BlockRequest;
            fromProtoMsg(message: _118.BlockRequestProtoMsg): _118.BlockRequest;
            toProto(message: _118.BlockRequest): Uint8Array;
            toProtoMsg(message: _118.BlockRequest): _118.BlockRequestProtoMsg;
        };
        NoBlockResponse: {
            typeUrl: string;
            encode(message: _118.NoBlockResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.NoBlockResponse;
            fromPartial(object: Partial<_118.NoBlockResponse>): _118.NoBlockResponse;
            fromAmino(object: _118.NoBlockResponseAmino): _118.NoBlockResponse;
            toAmino(message: _118.NoBlockResponse): _118.NoBlockResponseAmino;
            fromAminoMsg(object: _118.NoBlockResponseAminoMsg): _118.NoBlockResponse;
            fromProtoMsg(message: _118.NoBlockResponseProtoMsg): _118.NoBlockResponse;
            toProto(message: _118.NoBlockResponse): Uint8Array;
            toProtoMsg(message: _118.NoBlockResponse): _118.NoBlockResponseProtoMsg;
        };
        BlockResponse: {
            typeUrl: string;
            encode(message: _118.BlockResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.BlockResponse;
            fromPartial(object: Partial<_118.BlockResponse>): _118.BlockResponse;
            fromAmino(object: _118.BlockResponseAmino): _118.BlockResponse;
            toAmino(message: _118.BlockResponse): _118.BlockResponseAmino;
            fromAminoMsg(object: _118.BlockResponseAminoMsg): _118.BlockResponse;
            fromProtoMsg(message: _118.BlockResponseProtoMsg): _118.BlockResponse;
            toProto(message: _118.BlockResponse): Uint8Array;
            toProtoMsg(message: _118.BlockResponse): _118.BlockResponseProtoMsg;
        };
        StatusRequest: {
            typeUrl: string;
            encode(_: _118.StatusRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _118.StatusRequest;
            fromPartial(_: Partial<_118.StatusRequest>): _118.StatusRequest;
            fromAmino(_: _118.StatusRequestAmino): _118.StatusRequest;
            toAmino(_: _118.StatusRequest): _118.StatusRequestAmino;
            fromAminoMsg(object: _118.StatusRequestAminoMsg): _118.StatusRequest;
            fromProtoMsg(message: _118.StatusRequestProtoMsg): _118.StatusRequest;
            toProto(message: _118.StatusRequest): Uint8Array;
            toProtoMsg(message: _118.StatusRequest): _118.StatusRequestProtoMsg;
        };
        StatusResponse: {
            typeUrl: string;
            encode(message: _118.StatusResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.StatusResponse;
            fromPartial(object: Partial<_118.StatusResponse>): _118.StatusResponse;
            fromAmino(object: _118.StatusResponseAmino): _118.StatusResponse;
            toAmino(message: _118.StatusResponse): _118.StatusResponseAmino;
            fromAminoMsg(object: _118.StatusResponseAminoMsg): _118.StatusResponse;
            fromProtoMsg(message: _118.StatusResponseProtoMsg): _118.StatusResponse;
            toProto(message: _118.StatusResponse): Uint8Array;
            toProtoMsg(message: _118.StatusResponse): _118.StatusResponseProtoMsg;
        };
        Message: {
            typeUrl: string;
            encode(message: _118.Message, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.Message;
            fromPartial(object: Partial<_118.Message>): _118.Message;
            fromAmino(object: _118.MessageAmino): _118.Message;
            toAmino(message: _118.Message): _118.MessageAmino;
            fromAminoMsg(object: _118.MessageAminoMsg): _118.Message;
            fromProtoMsg(message: _118.MessageProtoMsg): _118.Message;
            toProto(message: _118.Message): Uint8Array;
            toProtoMsg(message: _118.Message): _118.MessageProtoMsg;
        };
    };
    const consensus: {
        MsgInfo: {
            typeUrl: string;
            encode(message: _120.MsgInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.MsgInfo;
            fromPartial(object: Partial<_120.MsgInfo>): _120.MsgInfo;
            fromAmino(object: _120.MsgInfoAmino): _120.MsgInfo;
            toAmino(message: _120.MsgInfo): _120.MsgInfoAmino;
            fromAminoMsg(object: _120.MsgInfoAminoMsg): _120.MsgInfo;
            fromProtoMsg(message: _120.MsgInfoProtoMsg): _120.MsgInfo;
            toProto(message: _120.MsgInfo): Uint8Array;
            toProtoMsg(message: _120.MsgInfo): _120.MsgInfoProtoMsg;
        };
        TimeoutInfo: {
            typeUrl: string;
            encode(message: _120.TimeoutInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.TimeoutInfo;
            fromPartial(object: Partial<_120.TimeoutInfo>): _120.TimeoutInfo;
            fromAmino(object: _120.TimeoutInfoAmino): _120.TimeoutInfo;
            toAmino(message: _120.TimeoutInfo): _120.TimeoutInfoAmino;
            fromAminoMsg(object: _120.TimeoutInfoAminoMsg): _120.TimeoutInfo;
            fromProtoMsg(message: _120.TimeoutInfoProtoMsg): _120.TimeoutInfo;
            toProto(message: _120.TimeoutInfo): Uint8Array;
            toProtoMsg(message: _120.TimeoutInfo): _120.TimeoutInfoProtoMsg;
        };
        EndHeight: {
            typeUrl: string;
            encode(message: _120.EndHeight, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.EndHeight;
            fromPartial(object: Partial<_120.EndHeight>): _120.EndHeight;
            fromAmino(object: _120.EndHeightAmino): _120.EndHeight;
            toAmino(message: _120.EndHeight): _120.EndHeightAmino;
            fromAminoMsg(object: _120.EndHeightAminoMsg): _120.EndHeight;
            fromProtoMsg(message: _120.EndHeightProtoMsg): _120.EndHeight;
            toProto(message: _120.EndHeight): Uint8Array;
            toProtoMsg(message: _120.EndHeight): _120.EndHeightProtoMsg;
        };
        WALMessage: {
            typeUrl: string;
            encode(message: _120.WALMessage, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.WALMessage;
            fromPartial(object: Partial<_120.WALMessage>): _120.WALMessage;
            fromAmino(object: _120.WALMessageAmino): _120.WALMessage;
            toAmino(message: _120.WALMessage): _120.WALMessageAmino;
            fromAminoMsg(object: _120.WALMessageAminoMsg): _120.WALMessage;
            fromProtoMsg(message: _120.WALMessageProtoMsg): _120.WALMessage;
            toProto(message: _120.WALMessage): Uint8Array;
            toProtoMsg(message: _120.WALMessage): _120.WALMessageProtoMsg;
        };
        TimedWALMessage: {
            typeUrl: string;
            encode(message: _120.TimedWALMessage, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.TimedWALMessage;
            fromPartial(object: Partial<_120.TimedWALMessage>): _120.TimedWALMessage;
            fromAmino(object: _120.TimedWALMessageAmino): _120.TimedWALMessage;
            toAmino(message: _120.TimedWALMessage): _120.TimedWALMessageAmino;
            fromAminoMsg(object: _120.TimedWALMessageAminoMsg): _120.TimedWALMessage;
            fromProtoMsg(message: _120.TimedWALMessageProtoMsg): _120.TimedWALMessage;
            toProto(message: _120.TimedWALMessage): Uint8Array;
            toProtoMsg(message: _120.TimedWALMessage): _120.TimedWALMessageProtoMsg;
        };
        NewRoundStep: {
            typeUrl: string;
            encode(message: _119.NewRoundStep, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.NewRoundStep;
            fromPartial(object: Partial<_119.NewRoundStep>): _119.NewRoundStep;
            fromAmino(object: _119.NewRoundStepAmino): _119.NewRoundStep;
            toAmino(message: _119.NewRoundStep): _119.NewRoundStepAmino;
            fromAminoMsg(object: _119.NewRoundStepAminoMsg): _119.NewRoundStep;
            fromProtoMsg(message: _119.NewRoundStepProtoMsg): _119.NewRoundStep;
            toProto(message: _119.NewRoundStep): Uint8Array;
            toProtoMsg(message: _119.NewRoundStep): _119.NewRoundStepProtoMsg;
        };
        NewValidBlock: {
            typeUrl: string;
            encode(message: _119.NewValidBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.NewValidBlock;
            fromPartial(object: Partial<_119.NewValidBlock>): _119.NewValidBlock;
            fromAmino(object: _119.NewValidBlockAmino): _119.NewValidBlock;
            toAmino(message: _119.NewValidBlock): _119.NewValidBlockAmino;
            fromAminoMsg(object: _119.NewValidBlockAminoMsg): _119.NewValidBlock;
            fromProtoMsg(message: _119.NewValidBlockProtoMsg): _119.NewValidBlock;
            toProto(message: _119.NewValidBlock): Uint8Array;
            toProtoMsg(message: _119.NewValidBlock): _119.NewValidBlockProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _119.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.Proposal;
            fromPartial(object: Partial<_119.Proposal>): _119.Proposal;
            fromAmino(object: _119.ProposalAmino): _119.Proposal;
            toAmino(message: _119.Proposal): _119.ProposalAmino;
            fromAminoMsg(object: _119.ProposalAminoMsg): _119.Proposal;
            fromProtoMsg(message: _119.ProposalProtoMsg): _119.Proposal;
            toProto(message: _119.Proposal): Uint8Array;
            toProtoMsg(message: _119.Proposal): _119.ProposalProtoMsg;
        };
        ProposalPOL: {
            typeUrl: string;
            encode(message: _119.ProposalPOL, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.ProposalPOL;
            fromPartial(object: Partial<_119.ProposalPOL>): _119.ProposalPOL;
            fromAmino(object: _119.ProposalPOLAmino): _119.ProposalPOL;
            toAmino(message: _119.ProposalPOL): _119.ProposalPOLAmino;
            fromAminoMsg(object: _119.ProposalPOLAminoMsg): _119.ProposalPOL;
            fromProtoMsg(message: _119.ProposalPOLProtoMsg): _119.ProposalPOL;
            toProto(message: _119.ProposalPOL): Uint8Array;
            toProtoMsg(message: _119.ProposalPOL): _119.ProposalPOLProtoMsg;
        };
        BlockPart: {
            typeUrl: string;
            encode(message: _119.BlockPart, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.BlockPart;
            fromPartial(object: Partial<_119.BlockPart>): _119.BlockPart;
            fromAmino(object: _119.BlockPartAmino): _119.BlockPart;
            toAmino(message: _119.BlockPart): _119.BlockPartAmino;
            fromAminoMsg(object: _119.BlockPartAminoMsg): _119.BlockPart;
            fromProtoMsg(message: _119.BlockPartProtoMsg): _119.BlockPart;
            toProto(message: _119.BlockPart): Uint8Array;
            toProtoMsg(message: _119.BlockPart): _119.BlockPartProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _119.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.Vote;
            fromPartial(object: Partial<_119.Vote>): _119.Vote;
            fromAmino(object: _119.VoteAmino): _119.Vote;
            toAmino(message: _119.Vote): _119.VoteAmino;
            fromAminoMsg(object: _119.VoteAminoMsg): _119.Vote;
            fromProtoMsg(message: _119.VoteProtoMsg): _119.Vote;
            toProto(message: _119.Vote): Uint8Array;
            toProtoMsg(message: _119.Vote): _119.VoteProtoMsg;
        };
        HasVote: {
            typeUrl: string;
            encode(message: _119.HasVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.HasVote;
            fromPartial(object: Partial<_119.HasVote>): _119.HasVote;
            fromAmino(object: _119.HasVoteAmino): _119.HasVote;
            toAmino(message: _119.HasVote): _119.HasVoteAmino;
            fromAminoMsg(object: _119.HasVoteAminoMsg): _119.HasVote;
            fromProtoMsg(message: _119.HasVoteProtoMsg): _119.HasVote;
            toProto(message: _119.HasVote): Uint8Array;
            toProtoMsg(message: _119.HasVote): _119.HasVoteProtoMsg;
        };
        VoteSetMaj23: {
            typeUrl: string;
            encode(message: _119.VoteSetMaj23, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.VoteSetMaj23;
            fromPartial(object: Partial<_119.VoteSetMaj23>): _119.VoteSetMaj23;
            fromAmino(object: _119.VoteSetMaj23Amino): _119.VoteSetMaj23;
            toAmino(message: _119.VoteSetMaj23): _119.VoteSetMaj23Amino;
            fromAminoMsg(object: _119.VoteSetMaj23AminoMsg): _119.VoteSetMaj23;
            fromProtoMsg(message: _119.VoteSetMaj23ProtoMsg): _119.VoteSetMaj23;
            toProto(message: _119.VoteSetMaj23): Uint8Array;
            toProtoMsg(message: _119.VoteSetMaj23): _119.VoteSetMaj23ProtoMsg;
        };
        VoteSetBits: {
            typeUrl: string;
            encode(message: _119.VoteSetBits, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.VoteSetBits;
            fromPartial(object: Partial<_119.VoteSetBits>): _119.VoteSetBits;
            fromAmino(object: _119.VoteSetBitsAmino): _119.VoteSetBits;
            toAmino(message: _119.VoteSetBits): _119.VoteSetBitsAmino;
            fromAminoMsg(object: _119.VoteSetBitsAminoMsg): _119.VoteSetBits;
            fromProtoMsg(message: _119.VoteSetBitsProtoMsg): _119.VoteSetBits;
            toProto(message: _119.VoteSetBits): Uint8Array;
            toProtoMsg(message: _119.VoteSetBits): _119.VoteSetBitsProtoMsg;
        };
        Message: {
            typeUrl: string;
            encode(message: _119.Message, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.Message;
            fromPartial(object: Partial<_119.Message>): _119.Message;
            fromAmino(object: _119.MessageAmino): _119.Message;
            toAmino(message: _119.Message): _119.MessageAmino;
            fromAminoMsg(object: _119.MessageAminoMsg): _119.Message;
            fromProtoMsg(message: _119.MessageProtoMsg): _119.Message;
            toProto(message: _119.Message): Uint8Array;
            toProtoMsg(message: _119.Message): _119.MessageProtoMsg;
        };
    };
    const mempool: {
        Txs: {
            typeUrl: string;
            encode(message: _121.Txs, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.Txs;
            fromPartial(object: Partial<_121.Txs>): _121.Txs;
            fromAmino(object: _121.TxsAmino): _121.Txs;
            toAmino(message: _121.Txs): _121.TxsAmino;
            fromAminoMsg(object: _121.TxsAminoMsg): _121.Txs;
            fromProtoMsg(message: _121.TxsProtoMsg): _121.Txs;
            toProto(message: _121.Txs): Uint8Array;
            toProtoMsg(message: _121.Txs): _121.TxsProtoMsg;
        };
        Message: {
            typeUrl: string;
            encode(message: _121.Message, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.Message;
            fromPartial(object: Partial<_121.Message>): _121.Message;
            fromAmino(object: _121.MessageAmino): _121.Message;
            toAmino(message: _121.Message): _121.MessageAmino;
            fromAminoMsg(object: _121.MessageAminoMsg): _121.Message;
            fromProtoMsg(message: _121.MessageProtoMsg): _121.Message;
            toProto(message: _121.Message): Uint8Array;
            toProtoMsg(message: _121.Message): _121.MessageProtoMsg;
        };
    };
    const privval: {
        errorsFromJSON(object: any): _122.Errors;
        errorsToJSON(object: _122.Errors): string;
        Errors: typeof _122.Errors;
        ErrorsSDKType: typeof _122.Errors;
        ErrorsAmino: typeof _122.Errors;
        RemoteSignerError: {
            typeUrl: string;
            encode(message: _122.RemoteSignerError, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.RemoteSignerError;
            fromPartial(object: Partial<_122.RemoteSignerError>): _122.RemoteSignerError;
            fromAmino(object: _122.RemoteSignerErrorAmino): _122.RemoteSignerError;
            toAmino(message: _122.RemoteSignerError): _122.RemoteSignerErrorAmino;
            fromAminoMsg(object: _122.RemoteSignerErrorAminoMsg): _122.RemoteSignerError;
            fromProtoMsg(message: _122.RemoteSignerErrorProtoMsg): _122.RemoteSignerError;
            toProto(message: _122.RemoteSignerError): Uint8Array;
            toProtoMsg(message: _122.RemoteSignerError): _122.RemoteSignerErrorProtoMsg;
        };
        PubKeyRequest: {
            typeUrl: string;
            encode(message: _122.PubKeyRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.PubKeyRequest;
            fromPartial(object: Partial<_122.PubKeyRequest>): _122.PubKeyRequest;
            fromAmino(object: _122.PubKeyRequestAmino): _122.PubKeyRequest;
            toAmino(message: _122.PubKeyRequest): _122.PubKeyRequestAmino;
            fromAminoMsg(object: _122.PubKeyRequestAminoMsg): _122.PubKeyRequest;
            fromProtoMsg(message: _122.PubKeyRequestProtoMsg): _122.PubKeyRequest;
            toProto(message: _122.PubKeyRequest): Uint8Array;
            toProtoMsg(message: _122.PubKeyRequest): _122.PubKeyRequestProtoMsg;
        };
        PubKeyResponse: {
            typeUrl: string;
            encode(message: _122.PubKeyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.PubKeyResponse;
            fromPartial(object: Partial<_122.PubKeyResponse>): _122.PubKeyResponse;
            fromAmino(object: _122.PubKeyResponseAmino): _122.PubKeyResponse;
            toAmino(message: _122.PubKeyResponse): _122.PubKeyResponseAmino;
            fromAminoMsg(object: _122.PubKeyResponseAminoMsg): _122.PubKeyResponse;
            fromProtoMsg(message: _122.PubKeyResponseProtoMsg): _122.PubKeyResponse;
            toProto(message: _122.PubKeyResponse): Uint8Array;
            toProtoMsg(message: _122.PubKeyResponse): _122.PubKeyResponseProtoMsg;
        };
        SignVoteRequest: {
            typeUrl: string;
            encode(message: _122.SignVoteRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.SignVoteRequest;
            fromPartial(object: Partial<_122.SignVoteRequest>): _122.SignVoteRequest;
            fromAmino(object: _122.SignVoteRequestAmino): _122.SignVoteRequest;
            toAmino(message: _122.SignVoteRequest): _122.SignVoteRequestAmino;
            fromAminoMsg(object: _122.SignVoteRequestAminoMsg): _122.SignVoteRequest;
            fromProtoMsg(message: _122.SignVoteRequestProtoMsg): _122.SignVoteRequest;
            toProto(message: _122.SignVoteRequest): Uint8Array;
            toProtoMsg(message: _122.SignVoteRequest): _122.SignVoteRequestProtoMsg;
        };
        SignedVoteResponse: {
            typeUrl: string;
            encode(message: _122.SignedVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.SignedVoteResponse;
            fromPartial(object: Partial<_122.SignedVoteResponse>): _122.SignedVoteResponse;
            fromAmino(object: _122.SignedVoteResponseAmino): _122.SignedVoteResponse;
            toAmino(message: _122.SignedVoteResponse): _122.SignedVoteResponseAmino;
            fromAminoMsg(object: _122.SignedVoteResponseAminoMsg): _122.SignedVoteResponse;
            fromProtoMsg(message: _122.SignedVoteResponseProtoMsg): _122.SignedVoteResponse;
            toProto(message: _122.SignedVoteResponse): Uint8Array;
            toProtoMsg(message: _122.SignedVoteResponse): _122.SignedVoteResponseProtoMsg;
        };
        SignProposalRequest: {
            typeUrl: string;
            encode(message: _122.SignProposalRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.SignProposalRequest;
            fromPartial(object: Partial<_122.SignProposalRequest>): _122.SignProposalRequest;
            fromAmino(object: _122.SignProposalRequestAmino): _122.SignProposalRequest;
            toAmino(message: _122.SignProposalRequest): _122.SignProposalRequestAmino;
            fromAminoMsg(object: _122.SignProposalRequestAminoMsg): _122.SignProposalRequest;
            fromProtoMsg(message: _122.SignProposalRequestProtoMsg): _122.SignProposalRequest;
            toProto(message: _122.SignProposalRequest): Uint8Array;
            toProtoMsg(message: _122.SignProposalRequest): _122.SignProposalRequestProtoMsg;
        };
        SignedProposalResponse: {
            typeUrl: string;
            encode(message: _122.SignedProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.SignedProposalResponse;
            fromPartial(object: Partial<_122.SignedProposalResponse>): _122.SignedProposalResponse;
            fromAmino(object: _122.SignedProposalResponseAmino): _122.SignedProposalResponse;
            toAmino(message: _122.SignedProposalResponse): _122.SignedProposalResponseAmino;
            fromAminoMsg(object: _122.SignedProposalResponseAminoMsg): _122.SignedProposalResponse;
            fromProtoMsg(message: _122.SignedProposalResponseProtoMsg): _122.SignedProposalResponse;
            toProto(message: _122.SignedProposalResponse): Uint8Array;
            toProtoMsg(message: _122.SignedProposalResponse): _122.SignedProposalResponseProtoMsg;
        };
        PingRequest: {
            typeUrl: string;
            encode(_: _122.PingRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _122.PingRequest;
            fromPartial(_: Partial<_122.PingRequest>): _122.PingRequest;
            fromAmino(_: _122.PingRequestAmino): _122.PingRequest;
            toAmino(_: _122.PingRequest): _122.PingRequestAmino;
            fromAminoMsg(object: _122.PingRequestAminoMsg): _122.PingRequest;
            fromProtoMsg(message: _122.PingRequestProtoMsg): _122.PingRequest;
            toProto(message: _122.PingRequest): Uint8Array;
            toProtoMsg(message: _122.PingRequest): _122.PingRequestProtoMsg;
        };
        PingResponse: {
            typeUrl: string;
            encode(_: _122.PingResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _122.PingResponse;
            fromPartial(_: Partial<_122.PingResponse>): _122.PingResponse;
            fromAmino(_: _122.PingResponseAmino): _122.PingResponse;
            toAmino(_: _122.PingResponse): _122.PingResponseAmino;
            fromAminoMsg(object: _122.PingResponseAminoMsg): _122.PingResponse;
            fromProtoMsg(message: _122.PingResponseProtoMsg): _122.PingResponse;
            toProto(message: _122.PingResponse): Uint8Array;
            toProtoMsg(message: _122.PingResponse): _122.PingResponseProtoMsg;
        };
        Message: {
            typeUrl: string;
            encode(message: _122.Message, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.Message;
            fromPartial(object: Partial<_122.Message>): _122.Message;
            fromAmino(object: _122.MessageAmino): _122.Message;
            toAmino(message: _122.Message): _122.MessageAmino;
            fromAminoMsg(object: _122.MessageAminoMsg): _122.Message;
            fromProtoMsg(message: _122.MessageProtoMsg): _122.Message;
            toProto(message: _122.Message): Uint8Array;
            toProtoMsg(message: _122.Message): _122.MessageProtoMsg;
        };
    };
    namespace rpc {
        const grpc: {
            RequestPing: {
                typeUrl: string;
                encode(_: _123.RequestPing, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(_: any): _123.RequestPing;
                fromPartial(_: Partial<_123.RequestPing>): _123.RequestPing;
                fromAmino(_: _123.RequestPingAmino): _123.RequestPing;
                toAmino(_: _123.RequestPing): _123.RequestPingAmino;
                fromAminoMsg(object: _123.RequestPingAminoMsg): _123.RequestPing;
                fromProtoMsg(message: _123.RequestPingProtoMsg): _123.RequestPing;
                toProto(message: _123.RequestPing): Uint8Array;
                toProtoMsg(message: _123.RequestPing): _123.RequestPingProtoMsg;
            };
            RequestBroadcastTx: {
                typeUrl: string;
                encode(message: _123.RequestBroadcastTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _123.RequestBroadcastTx;
                fromPartial(object: Partial<_123.RequestBroadcastTx>): _123.RequestBroadcastTx;
                fromAmino(object: _123.RequestBroadcastTxAmino): _123.RequestBroadcastTx;
                toAmino(message: _123.RequestBroadcastTx): _123.RequestBroadcastTxAmino;
                fromAminoMsg(object: _123.RequestBroadcastTxAminoMsg): _123.RequestBroadcastTx;
                fromProtoMsg(message: _123.RequestBroadcastTxProtoMsg): _123.RequestBroadcastTx;
                toProto(message: _123.RequestBroadcastTx): Uint8Array;
                toProtoMsg(message: _123.RequestBroadcastTx): _123.RequestBroadcastTxProtoMsg;
            };
            ResponsePing: {
                typeUrl: string;
                encode(_: _123.ResponsePing, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(_: any): _123.ResponsePing;
                fromPartial(_: Partial<_123.ResponsePing>): _123.ResponsePing;
                fromAmino(_: _123.ResponsePingAmino): _123.ResponsePing;
                toAmino(_: _123.ResponsePing): _123.ResponsePingAmino;
                fromAminoMsg(object: _123.ResponsePingAminoMsg): _123.ResponsePing;
                fromProtoMsg(message: _123.ResponsePingProtoMsg): _123.ResponsePing;
                toProto(message: _123.ResponsePing): Uint8Array;
                toProtoMsg(message: _123.ResponsePing): _123.ResponsePingProtoMsg;
            };
            ResponseBroadcastTx: {
                typeUrl: string;
                encode(message: _123.ResponseBroadcastTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _123.ResponseBroadcastTx;
                fromPartial(object: Partial<_123.ResponseBroadcastTx>): _123.ResponseBroadcastTx;
                fromAmino(object: _123.ResponseBroadcastTxAmino): _123.ResponseBroadcastTx;
                toAmino(message: _123.ResponseBroadcastTx): _123.ResponseBroadcastTxAmino;
                fromAminoMsg(object: _123.ResponseBroadcastTxAminoMsg): _123.ResponseBroadcastTx;
                fromProtoMsg(message: _123.ResponseBroadcastTxProtoMsg): _123.ResponseBroadcastTx;
                toProto(message: _123.ResponseBroadcastTx): Uint8Array;
                toProtoMsg(message: _123.ResponseBroadcastTx): _123.ResponseBroadcastTxProtoMsg;
            };
        };
    }
    const state: {
        ABCIResponses: {
            typeUrl: string;
            encode(message: _124.ABCIResponses, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _124.ABCIResponses;
            fromPartial(object: Partial<_124.ABCIResponses>): _124.ABCIResponses;
            fromAmino(object: _124.ABCIResponsesAmino): _124.ABCIResponses;
            toAmino(message: _124.ABCIResponses): _124.ABCIResponsesAmino;
            fromAminoMsg(object: _124.ABCIResponsesAminoMsg): _124.ABCIResponses;
            fromProtoMsg(message: _124.ABCIResponsesProtoMsg): _124.ABCIResponses;
            toProto(message: _124.ABCIResponses): Uint8Array;
            toProtoMsg(message: _124.ABCIResponses): _124.ABCIResponsesProtoMsg;
        };
        ValidatorsInfo: {
            typeUrl: string;
            encode(message: _124.ValidatorsInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _124.ValidatorsInfo;
            fromPartial(object: Partial<_124.ValidatorsInfo>): _124.ValidatorsInfo;
            fromAmino(object: _124.ValidatorsInfoAmino): _124.ValidatorsInfo;
            toAmino(message: _124.ValidatorsInfo): _124.ValidatorsInfoAmino;
            fromAminoMsg(object: _124.ValidatorsInfoAminoMsg): _124.ValidatorsInfo;
            fromProtoMsg(message: _124.ValidatorsInfoProtoMsg): _124.ValidatorsInfo;
            toProto(message: _124.ValidatorsInfo): Uint8Array;
            toProtoMsg(message: _124.ValidatorsInfo): _124.ValidatorsInfoProtoMsg;
        };
        ConsensusParamsInfo: {
            typeUrl: string;
            encode(message: _124.ConsensusParamsInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _124.ConsensusParamsInfo;
            fromPartial(object: Partial<_124.ConsensusParamsInfo>): _124.ConsensusParamsInfo;
            fromAmino(object: _124.ConsensusParamsInfoAmino): _124.ConsensusParamsInfo;
            toAmino(message: _124.ConsensusParamsInfo): _124.ConsensusParamsInfoAmino;
            fromAminoMsg(object: _124.ConsensusParamsInfoAminoMsg): _124.ConsensusParamsInfo;
            fromProtoMsg(message: _124.ConsensusParamsInfoProtoMsg): _124.ConsensusParamsInfo;
            toProto(message: _124.ConsensusParamsInfo): Uint8Array;
            toProtoMsg(message: _124.ConsensusParamsInfo): _124.ConsensusParamsInfoProtoMsg;
        };
        ABCIResponsesInfo: {
            typeUrl: string;
            encode(message: _124.ABCIResponsesInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _124.ABCIResponsesInfo;
            fromPartial(object: Partial<_124.ABCIResponsesInfo>): _124.ABCIResponsesInfo;
            fromAmino(object: _124.ABCIResponsesInfoAmino): _124.ABCIResponsesInfo;
            toAmino(message: _124.ABCIResponsesInfo): _124.ABCIResponsesInfoAmino;
            fromAminoMsg(object: _124.ABCIResponsesInfoAminoMsg): _124.ABCIResponsesInfo;
            fromProtoMsg(message: _124.ABCIResponsesInfoProtoMsg): _124.ABCIResponsesInfo;
            toProto(message: _124.ABCIResponsesInfo): Uint8Array;
            toProtoMsg(message: _124.ABCIResponsesInfo): _124.ABCIResponsesInfoProtoMsg;
        };
        Version: {
            typeUrl: string;
            encode(message: _124.Version, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _124.Version;
            fromPartial(object: Partial<_124.Version>): _124.Version;
            fromAmino(object: _124.VersionAmino): _124.Version;
            toAmino(message: _124.Version): _124.VersionAmino;
            fromAminoMsg(object: _124.VersionAminoMsg): _124.Version;
            fromProtoMsg(message: _124.VersionProtoMsg): _124.Version;
            toProto(message: _124.Version): Uint8Array;
            toProtoMsg(message: _124.Version): _124.VersionProtoMsg;
        };
        State: {
            typeUrl: string;
            encode(message: _124.State, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _124.State;
            fromPartial(object: Partial<_124.State>): _124.State;
            fromAmino(object: _124.StateAmino): _124.State;
            toAmino(message: _124.State): _124.StateAmino;
            fromAminoMsg(object: _124.StateAminoMsg): _124.State;
            fromProtoMsg(message: _124.StateProtoMsg): _124.State;
            toProto(message: _124.State): Uint8Array;
            toProtoMsg(message: _124.State): _124.StateProtoMsg;
        };
    };
    const statesync: {
        Message: {
            typeUrl: string;
            encode(message: _125.Message, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _125.Message;
            fromPartial(object: Partial<_125.Message>): _125.Message;
            fromAmino(object: _125.MessageAmino): _125.Message;
            toAmino(message: _125.Message): _125.MessageAmino;
            fromAminoMsg(object: _125.MessageAminoMsg): _125.Message;
            fromProtoMsg(message: _125.MessageProtoMsg): _125.Message;
            toProto(message: _125.Message): Uint8Array;
            toProtoMsg(message: _125.Message): _125.MessageProtoMsg;
        };
        SnapshotsRequest: {
            typeUrl: string;
            encode(_: _125.SnapshotsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _125.SnapshotsRequest;
            fromPartial(_: Partial<_125.SnapshotsRequest>): _125.SnapshotsRequest;
            fromAmino(_: _125.SnapshotsRequestAmino): _125.SnapshotsRequest;
            toAmino(_: _125.SnapshotsRequest): _125.SnapshotsRequestAmino;
            fromAminoMsg(object: _125.SnapshotsRequestAminoMsg): _125.SnapshotsRequest;
            fromProtoMsg(message: _125.SnapshotsRequestProtoMsg): _125.SnapshotsRequest;
            toProto(message: _125.SnapshotsRequest): Uint8Array;
            toProtoMsg(message: _125.SnapshotsRequest): _125.SnapshotsRequestProtoMsg;
        };
        SnapshotsResponse: {
            typeUrl: string;
            encode(message: _125.SnapshotsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _125.SnapshotsResponse;
            fromPartial(object: Partial<_125.SnapshotsResponse>): _125.SnapshotsResponse;
            fromAmino(object: _125.SnapshotsResponseAmino): _125.SnapshotsResponse;
            toAmino(message: _125.SnapshotsResponse): _125.SnapshotsResponseAmino;
            fromAminoMsg(object: _125.SnapshotsResponseAminoMsg): _125.SnapshotsResponse;
            fromProtoMsg(message: _125.SnapshotsResponseProtoMsg): _125.SnapshotsResponse;
            toProto(message: _125.SnapshotsResponse): Uint8Array;
            toProtoMsg(message: _125.SnapshotsResponse): _125.SnapshotsResponseProtoMsg;
        };
        ChunkRequest: {
            typeUrl: string;
            encode(message: _125.ChunkRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _125.ChunkRequest;
            fromPartial(object: Partial<_125.ChunkRequest>): _125.ChunkRequest;
            fromAmino(object: _125.ChunkRequestAmino): _125.ChunkRequest;
            toAmino(message: _125.ChunkRequest): _125.ChunkRequestAmino;
            fromAminoMsg(object: _125.ChunkRequestAminoMsg): _125.ChunkRequest;
            fromProtoMsg(message: _125.ChunkRequestProtoMsg): _125.ChunkRequest;
            toProto(message: _125.ChunkRequest): Uint8Array;
            toProtoMsg(message: _125.ChunkRequest): _125.ChunkRequestProtoMsg;
        };
        ChunkResponse: {
            typeUrl: string;
            encode(message: _125.ChunkResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _125.ChunkResponse;
            fromPartial(object: Partial<_125.ChunkResponse>): _125.ChunkResponse;
            fromAmino(object: _125.ChunkResponseAmino): _125.ChunkResponse;
            toAmino(message: _125.ChunkResponse): _125.ChunkResponseAmino;
            fromAminoMsg(object: _125.ChunkResponseAminoMsg): _125.ChunkResponse;
            fromProtoMsg(message: _125.ChunkResponseProtoMsg): _125.ChunkResponse;
            toProto(message: _125.ChunkResponse): Uint8Array;
            toProtoMsg(message: _125.ChunkResponse): _125.ChunkResponseProtoMsg;
        };
    };
    const store: {
        BlockStoreState: {
            typeUrl: string;
            encode(message: _126.BlockStoreState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _126.BlockStoreState;
            fromPartial(object: Partial<_126.BlockStoreState>): _126.BlockStoreState;
            fromAmino(object: _126.BlockStoreStateAmino): _126.BlockStoreState;
            toAmino(message: _126.BlockStoreState): _126.BlockStoreStateAmino;
            fromAminoMsg(object: _126.BlockStoreStateAminoMsg): _126.BlockStoreState;
            fromProtoMsg(message: _126.BlockStoreStateProtoMsg): _126.BlockStoreState;
            toProto(message: _126.BlockStoreState): Uint8Array;
            toProtoMsg(message: _126.BlockStoreState): _126.BlockStoreStateProtoMsg;
        };
    };
}
