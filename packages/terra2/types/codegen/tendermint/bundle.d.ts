import * as _140 from "./abci/types";
import * as _141 from "./crypto/keys";
import * as _142 from "./crypto/proof";
import * as _143 from "./libs/bits/types";
import * as _144 from "./p2p/types";
import * as _145 from "./types/block";
import * as _146 from "./types/evidence";
import * as _147 from "./types/params";
import * as _148 from "./types/types";
import * as _149 from "./types/validator";
import * as _150 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _140.CheckTxType;
        checkTxTypeToJSON(object: _140.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _140.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _140.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _140.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _140.ResponseApplySnapshotChunk_Result): string;
        responseProcessProposal_ProposalStatusFromJSON(object: any): _140.ResponseProcessProposal_ProposalStatus;
        responseProcessProposal_ProposalStatusToJSON(object: _140.ResponseProcessProposal_ProposalStatus): string;
        misbehaviorTypeFromJSON(object: any): _140.MisbehaviorType;
        misbehaviorTypeToJSON(object: _140.MisbehaviorType): string;
        CheckTxType: typeof _140.CheckTxType;
        CheckTxTypeSDKType: typeof _140.CheckTxType;
        CheckTxTypeAmino: typeof _140.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _140.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _140.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _140.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _140.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _140.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _140.ResponseApplySnapshotChunk_Result;
        ResponseProcessProposal_ProposalStatus: typeof _140.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusSDKType: typeof _140.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusAmino: typeof _140.ResponseProcessProposal_ProposalStatus;
        MisbehaviorType: typeof _140.MisbehaviorType;
        MisbehaviorTypeSDKType: typeof _140.MisbehaviorType;
        MisbehaviorTypeAmino: typeof _140.MisbehaviorType;
        Request: {
            typeUrl: string;
            encode(message: _140.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.Request;
            fromPartial(object: Partial<_140.Request>): _140.Request;
            fromAmino(object: _140.RequestAmino): _140.Request;
            toAmino(message: _140.Request): _140.RequestAmino;
            fromAminoMsg(object: _140.RequestAminoMsg): _140.Request;
            fromProtoMsg(message: _140.RequestProtoMsg): _140.Request;
            toProto(message: _140.Request): Uint8Array;
            toProtoMsg(message: _140.Request): _140.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _140.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestEcho;
            fromPartial(object: Partial<_140.RequestEcho>): _140.RequestEcho;
            fromAmino(object: _140.RequestEchoAmino): _140.RequestEcho;
            toAmino(message: _140.RequestEcho): _140.RequestEchoAmino;
            fromAminoMsg(object: _140.RequestEchoAminoMsg): _140.RequestEcho;
            fromProtoMsg(message: _140.RequestEchoProtoMsg): _140.RequestEcho;
            toProto(message: _140.RequestEcho): Uint8Array;
            toProtoMsg(message: _140.RequestEcho): _140.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _140.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _140.RequestFlush;
            fromPartial(_: Partial<_140.RequestFlush>): _140.RequestFlush;
            fromAmino(_: _140.RequestFlushAmino): _140.RequestFlush;
            toAmino(_: _140.RequestFlush): _140.RequestFlushAmino;
            fromAminoMsg(object: _140.RequestFlushAminoMsg): _140.RequestFlush;
            fromProtoMsg(message: _140.RequestFlushProtoMsg): _140.RequestFlush;
            toProto(message: _140.RequestFlush): Uint8Array;
            toProtoMsg(message: _140.RequestFlush): _140.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _140.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestInfo;
            fromPartial(object: Partial<_140.RequestInfo>): _140.RequestInfo;
            fromAmino(object: _140.RequestInfoAmino): _140.RequestInfo;
            toAmino(message: _140.RequestInfo): _140.RequestInfoAmino;
            fromAminoMsg(object: _140.RequestInfoAminoMsg): _140.RequestInfo;
            fromProtoMsg(message: _140.RequestInfoProtoMsg): _140.RequestInfo;
            toProto(message: _140.RequestInfo): Uint8Array;
            toProtoMsg(message: _140.RequestInfo): _140.RequestInfoProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _140.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestInitChain;
            fromPartial(object: Partial<_140.RequestInitChain>): _140.RequestInitChain;
            fromAmino(object: _140.RequestInitChainAmino): _140.RequestInitChain;
            toAmino(message: _140.RequestInitChain): _140.RequestInitChainAmino;
            fromAminoMsg(object: _140.RequestInitChainAminoMsg): _140.RequestInitChain;
            fromProtoMsg(message: _140.RequestInitChainProtoMsg): _140.RequestInitChain;
            toProto(message: _140.RequestInitChain): Uint8Array;
            toProtoMsg(message: _140.RequestInitChain): _140.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _140.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestQuery;
            fromPartial(object: Partial<_140.RequestQuery>): _140.RequestQuery;
            fromAmino(object: _140.RequestQueryAmino): _140.RequestQuery;
            toAmino(message: _140.RequestQuery): _140.RequestQueryAmino;
            fromAminoMsg(object: _140.RequestQueryAminoMsg): _140.RequestQuery;
            fromProtoMsg(message: _140.RequestQueryProtoMsg): _140.RequestQuery;
            toProto(message: _140.RequestQuery): Uint8Array;
            toProtoMsg(message: _140.RequestQuery): _140.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _140.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestBeginBlock;
            fromPartial(object: Partial<_140.RequestBeginBlock>): _140.RequestBeginBlock;
            fromAmino(object: _140.RequestBeginBlockAmino): _140.RequestBeginBlock;
            toAmino(message: _140.RequestBeginBlock): _140.RequestBeginBlockAmino;
            fromAminoMsg(object: _140.RequestBeginBlockAminoMsg): _140.RequestBeginBlock;
            fromProtoMsg(message: _140.RequestBeginBlockProtoMsg): _140.RequestBeginBlock;
            toProto(message: _140.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _140.RequestBeginBlock): _140.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _140.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestCheckTx;
            fromPartial(object: Partial<_140.RequestCheckTx>): _140.RequestCheckTx;
            fromAmino(object: _140.RequestCheckTxAmino): _140.RequestCheckTx;
            toAmino(message: _140.RequestCheckTx): _140.RequestCheckTxAmino;
            fromAminoMsg(object: _140.RequestCheckTxAminoMsg): _140.RequestCheckTx;
            fromProtoMsg(message: _140.RequestCheckTxProtoMsg): _140.RequestCheckTx;
            toProto(message: _140.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _140.RequestCheckTx): _140.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _140.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestDeliverTx;
            fromPartial(object: Partial<_140.RequestDeliverTx>): _140.RequestDeliverTx;
            fromAmino(object: _140.RequestDeliverTxAmino): _140.RequestDeliverTx;
            toAmino(message: _140.RequestDeliverTx): _140.RequestDeliverTxAmino;
            fromAminoMsg(object: _140.RequestDeliverTxAminoMsg): _140.RequestDeliverTx;
            fromProtoMsg(message: _140.RequestDeliverTxProtoMsg): _140.RequestDeliverTx;
            toProto(message: _140.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _140.RequestDeliverTx): _140.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _140.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestEndBlock;
            fromPartial(object: Partial<_140.RequestEndBlock>): _140.RequestEndBlock;
            fromAmino(object: _140.RequestEndBlockAmino): _140.RequestEndBlock;
            toAmino(message: _140.RequestEndBlock): _140.RequestEndBlockAmino;
            fromAminoMsg(object: _140.RequestEndBlockAminoMsg): _140.RequestEndBlock;
            fromProtoMsg(message: _140.RequestEndBlockProtoMsg): _140.RequestEndBlock;
            toProto(message: _140.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _140.RequestEndBlock): _140.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _140.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _140.RequestCommit;
            fromPartial(_: Partial<_140.RequestCommit>): _140.RequestCommit;
            fromAmino(_: _140.RequestCommitAmino): _140.RequestCommit;
            toAmino(_: _140.RequestCommit): _140.RequestCommitAmino;
            fromAminoMsg(object: _140.RequestCommitAminoMsg): _140.RequestCommit;
            fromProtoMsg(message: _140.RequestCommitProtoMsg): _140.RequestCommit;
            toProto(message: _140.RequestCommit): Uint8Array;
            toProtoMsg(message: _140.RequestCommit): _140.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _140.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _140.RequestListSnapshots;
            fromPartial(_: Partial<_140.RequestListSnapshots>): _140.RequestListSnapshots;
            fromAmino(_: _140.RequestListSnapshotsAmino): _140.RequestListSnapshots;
            toAmino(_: _140.RequestListSnapshots): _140.RequestListSnapshotsAmino;
            fromAminoMsg(object: _140.RequestListSnapshotsAminoMsg): _140.RequestListSnapshots;
            fromProtoMsg(message: _140.RequestListSnapshotsProtoMsg): _140.RequestListSnapshots;
            toProto(message: _140.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _140.RequestListSnapshots): _140.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _140.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestOfferSnapshot;
            fromPartial(object: Partial<_140.RequestOfferSnapshot>): _140.RequestOfferSnapshot;
            fromAmino(object: _140.RequestOfferSnapshotAmino): _140.RequestOfferSnapshot;
            toAmino(message: _140.RequestOfferSnapshot): _140.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _140.RequestOfferSnapshotAminoMsg): _140.RequestOfferSnapshot;
            fromProtoMsg(message: _140.RequestOfferSnapshotProtoMsg): _140.RequestOfferSnapshot;
            toProto(message: _140.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _140.RequestOfferSnapshot): _140.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _140.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_140.RequestLoadSnapshotChunk>): _140.RequestLoadSnapshotChunk;
            fromAmino(object: _140.RequestLoadSnapshotChunkAmino): _140.RequestLoadSnapshotChunk;
            toAmino(message: _140.RequestLoadSnapshotChunk): _140.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _140.RequestLoadSnapshotChunkAminoMsg): _140.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _140.RequestLoadSnapshotChunkProtoMsg): _140.RequestLoadSnapshotChunk;
            toProto(message: _140.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _140.RequestLoadSnapshotChunk): _140.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _140.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_140.RequestApplySnapshotChunk>): _140.RequestApplySnapshotChunk;
            fromAmino(object: _140.RequestApplySnapshotChunkAmino): _140.RequestApplySnapshotChunk;
            toAmino(message: _140.RequestApplySnapshotChunk): _140.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _140.RequestApplySnapshotChunkAminoMsg): _140.RequestApplySnapshotChunk;
            fromProtoMsg(message: _140.RequestApplySnapshotChunkProtoMsg): _140.RequestApplySnapshotChunk;
            toProto(message: _140.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _140.RequestApplySnapshotChunk): _140.RequestApplySnapshotChunkProtoMsg;
        };
        RequestPrepareProposal: {
            typeUrl: string;
            encode(message: _140.RequestPrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestPrepareProposal;
            fromPartial(object: Partial<_140.RequestPrepareProposal>): _140.RequestPrepareProposal;
            fromAmino(object: _140.RequestPrepareProposalAmino): _140.RequestPrepareProposal;
            toAmino(message: _140.RequestPrepareProposal): _140.RequestPrepareProposalAmino;
            fromAminoMsg(object: _140.RequestPrepareProposalAminoMsg): _140.RequestPrepareProposal;
            fromProtoMsg(message: _140.RequestPrepareProposalProtoMsg): _140.RequestPrepareProposal;
            toProto(message: _140.RequestPrepareProposal): Uint8Array;
            toProtoMsg(message: _140.RequestPrepareProposal): _140.RequestPrepareProposalProtoMsg;
        };
        RequestProcessProposal: {
            typeUrl: string;
            encode(message: _140.RequestProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.RequestProcessProposal;
            fromPartial(object: Partial<_140.RequestProcessProposal>): _140.RequestProcessProposal;
            fromAmino(object: _140.RequestProcessProposalAmino): _140.RequestProcessProposal;
            toAmino(message: _140.RequestProcessProposal): _140.RequestProcessProposalAmino;
            fromAminoMsg(object: _140.RequestProcessProposalAminoMsg): _140.RequestProcessProposal;
            fromProtoMsg(message: _140.RequestProcessProposalProtoMsg): _140.RequestProcessProposal;
            toProto(message: _140.RequestProcessProposal): Uint8Array;
            toProtoMsg(message: _140.RequestProcessProposal): _140.RequestProcessProposalProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _140.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.Response;
            fromPartial(object: Partial<_140.Response>): _140.Response;
            fromAmino(object: _140.ResponseAmino): _140.Response;
            toAmino(message: _140.Response): _140.ResponseAmino;
            fromAminoMsg(object: _140.ResponseAminoMsg): _140.Response;
            fromProtoMsg(message: _140.ResponseProtoMsg): _140.Response;
            toProto(message: _140.Response): Uint8Array;
            toProtoMsg(message: _140.Response): _140.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _140.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseException;
            fromPartial(object: Partial<_140.ResponseException>): _140.ResponseException;
            fromAmino(object: _140.ResponseExceptionAmino): _140.ResponseException;
            toAmino(message: _140.ResponseException): _140.ResponseExceptionAmino;
            fromAminoMsg(object: _140.ResponseExceptionAminoMsg): _140.ResponseException;
            fromProtoMsg(message: _140.ResponseExceptionProtoMsg): _140.ResponseException;
            toProto(message: _140.ResponseException): Uint8Array;
            toProtoMsg(message: _140.ResponseException): _140.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _140.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseEcho;
            fromPartial(object: Partial<_140.ResponseEcho>): _140.ResponseEcho;
            fromAmino(object: _140.ResponseEchoAmino): _140.ResponseEcho;
            toAmino(message: _140.ResponseEcho): _140.ResponseEchoAmino;
            fromAminoMsg(object: _140.ResponseEchoAminoMsg): _140.ResponseEcho;
            fromProtoMsg(message: _140.ResponseEchoProtoMsg): _140.ResponseEcho;
            toProto(message: _140.ResponseEcho): Uint8Array;
            toProtoMsg(message: _140.ResponseEcho): _140.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _140.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _140.ResponseFlush;
            fromPartial(_: Partial<_140.ResponseFlush>): _140.ResponseFlush;
            fromAmino(_: _140.ResponseFlushAmino): _140.ResponseFlush;
            toAmino(_: _140.ResponseFlush): _140.ResponseFlushAmino;
            fromAminoMsg(object: _140.ResponseFlushAminoMsg): _140.ResponseFlush;
            fromProtoMsg(message: _140.ResponseFlushProtoMsg): _140.ResponseFlush;
            toProto(message: _140.ResponseFlush): Uint8Array;
            toProtoMsg(message: _140.ResponseFlush): _140.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _140.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseInfo;
            fromPartial(object: Partial<_140.ResponseInfo>): _140.ResponseInfo;
            fromAmino(object: _140.ResponseInfoAmino): _140.ResponseInfo;
            toAmino(message: _140.ResponseInfo): _140.ResponseInfoAmino;
            fromAminoMsg(object: _140.ResponseInfoAminoMsg): _140.ResponseInfo;
            fromProtoMsg(message: _140.ResponseInfoProtoMsg): _140.ResponseInfo;
            toProto(message: _140.ResponseInfo): Uint8Array;
            toProtoMsg(message: _140.ResponseInfo): _140.ResponseInfoProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _140.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseInitChain;
            fromPartial(object: Partial<_140.ResponseInitChain>): _140.ResponseInitChain;
            fromAmino(object: _140.ResponseInitChainAmino): _140.ResponseInitChain;
            toAmino(message: _140.ResponseInitChain): _140.ResponseInitChainAmino;
            fromAminoMsg(object: _140.ResponseInitChainAminoMsg): _140.ResponseInitChain;
            fromProtoMsg(message: _140.ResponseInitChainProtoMsg): _140.ResponseInitChain;
            toProto(message: _140.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _140.ResponseInitChain): _140.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _140.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseQuery;
            fromPartial(object: Partial<_140.ResponseQuery>): _140.ResponseQuery;
            fromAmino(object: _140.ResponseQueryAmino): _140.ResponseQuery;
            toAmino(message: _140.ResponseQuery): _140.ResponseQueryAmino;
            fromAminoMsg(object: _140.ResponseQueryAminoMsg): _140.ResponseQuery;
            fromProtoMsg(message: _140.ResponseQueryProtoMsg): _140.ResponseQuery;
            toProto(message: _140.ResponseQuery): Uint8Array;
            toProtoMsg(message: _140.ResponseQuery): _140.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _140.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseBeginBlock;
            fromPartial(object: Partial<_140.ResponseBeginBlock>): _140.ResponseBeginBlock;
            fromAmino(object: _140.ResponseBeginBlockAmino): _140.ResponseBeginBlock;
            toAmino(message: _140.ResponseBeginBlock): _140.ResponseBeginBlockAmino;
            fromAminoMsg(object: _140.ResponseBeginBlockAminoMsg): _140.ResponseBeginBlock;
            fromProtoMsg(message: _140.ResponseBeginBlockProtoMsg): _140.ResponseBeginBlock;
            toProto(message: _140.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _140.ResponseBeginBlock): _140.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _140.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseCheckTx;
            fromPartial(object: Partial<_140.ResponseCheckTx>): _140.ResponseCheckTx;
            fromAmino(object: _140.ResponseCheckTxAmino): _140.ResponseCheckTx;
            toAmino(message: _140.ResponseCheckTx): _140.ResponseCheckTxAmino;
            fromAminoMsg(object: _140.ResponseCheckTxAminoMsg): _140.ResponseCheckTx;
            fromProtoMsg(message: _140.ResponseCheckTxProtoMsg): _140.ResponseCheckTx;
            toProto(message: _140.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _140.ResponseCheckTx): _140.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _140.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseDeliverTx;
            fromPartial(object: Partial<_140.ResponseDeliverTx>): _140.ResponseDeliverTx;
            fromAmino(object: _140.ResponseDeliverTxAmino): _140.ResponseDeliverTx;
            toAmino(message: _140.ResponseDeliverTx): _140.ResponseDeliverTxAmino;
            fromAminoMsg(object: _140.ResponseDeliverTxAminoMsg): _140.ResponseDeliverTx;
            fromProtoMsg(message: _140.ResponseDeliverTxProtoMsg): _140.ResponseDeliverTx;
            toProto(message: _140.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _140.ResponseDeliverTx): _140.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _140.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseEndBlock;
            fromPartial(object: Partial<_140.ResponseEndBlock>): _140.ResponseEndBlock;
            fromAmino(object: _140.ResponseEndBlockAmino): _140.ResponseEndBlock;
            toAmino(message: _140.ResponseEndBlock): _140.ResponseEndBlockAmino;
            fromAminoMsg(object: _140.ResponseEndBlockAminoMsg): _140.ResponseEndBlock;
            fromProtoMsg(message: _140.ResponseEndBlockProtoMsg): _140.ResponseEndBlock;
            toProto(message: _140.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _140.ResponseEndBlock): _140.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _140.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseCommit;
            fromPartial(object: Partial<_140.ResponseCommit>): _140.ResponseCommit;
            fromAmino(object: _140.ResponseCommitAmino): _140.ResponseCommit;
            toAmino(message: _140.ResponseCommit): _140.ResponseCommitAmino;
            fromAminoMsg(object: _140.ResponseCommitAminoMsg): _140.ResponseCommit;
            fromProtoMsg(message: _140.ResponseCommitProtoMsg): _140.ResponseCommit;
            toProto(message: _140.ResponseCommit): Uint8Array;
            toProtoMsg(message: _140.ResponseCommit): _140.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _140.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseListSnapshots;
            fromPartial(object: Partial<_140.ResponseListSnapshots>): _140.ResponseListSnapshots;
            fromAmino(object: _140.ResponseListSnapshotsAmino): _140.ResponseListSnapshots;
            toAmino(message: _140.ResponseListSnapshots): _140.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _140.ResponseListSnapshotsAminoMsg): _140.ResponseListSnapshots;
            fromProtoMsg(message: _140.ResponseListSnapshotsProtoMsg): _140.ResponseListSnapshots;
            toProto(message: _140.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _140.ResponseListSnapshots): _140.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _140.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseOfferSnapshot;
            fromPartial(object: Partial<_140.ResponseOfferSnapshot>): _140.ResponseOfferSnapshot;
            fromAmino(object: _140.ResponseOfferSnapshotAmino): _140.ResponseOfferSnapshot;
            toAmino(message: _140.ResponseOfferSnapshot): _140.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _140.ResponseOfferSnapshotAminoMsg): _140.ResponseOfferSnapshot;
            fromProtoMsg(message: _140.ResponseOfferSnapshotProtoMsg): _140.ResponseOfferSnapshot;
            toProto(message: _140.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _140.ResponseOfferSnapshot): _140.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _140.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_140.ResponseLoadSnapshotChunk>): _140.ResponseLoadSnapshotChunk;
            fromAmino(object: _140.ResponseLoadSnapshotChunkAmino): _140.ResponseLoadSnapshotChunk;
            toAmino(message: _140.ResponseLoadSnapshotChunk): _140.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _140.ResponseLoadSnapshotChunkAminoMsg): _140.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _140.ResponseLoadSnapshotChunkProtoMsg): _140.ResponseLoadSnapshotChunk;
            toProto(message: _140.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _140.ResponseLoadSnapshotChunk): _140.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _140.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_140.ResponseApplySnapshotChunk>): _140.ResponseApplySnapshotChunk;
            fromAmino(object: _140.ResponseApplySnapshotChunkAmino): _140.ResponseApplySnapshotChunk;
            toAmino(message: _140.ResponseApplySnapshotChunk): _140.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _140.ResponseApplySnapshotChunkAminoMsg): _140.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _140.ResponseApplySnapshotChunkProtoMsg): _140.ResponseApplySnapshotChunk;
            toProto(message: _140.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _140.ResponseApplySnapshotChunk): _140.ResponseApplySnapshotChunkProtoMsg;
        };
        ResponsePrepareProposal: {
            typeUrl: string;
            encode(message: _140.ResponsePrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponsePrepareProposal;
            fromPartial(object: Partial<_140.ResponsePrepareProposal>): _140.ResponsePrepareProposal;
            fromAmino(object: _140.ResponsePrepareProposalAmino): _140.ResponsePrepareProposal;
            toAmino(message: _140.ResponsePrepareProposal): _140.ResponsePrepareProposalAmino;
            fromAminoMsg(object: _140.ResponsePrepareProposalAminoMsg): _140.ResponsePrepareProposal;
            fromProtoMsg(message: _140.ResponsePrepareProposalProtoMsg): _140.ResponsePrepareProposal;
            toProto(message: _140.ResponsePrepareProposal): Uint8Array;
            toProtoMsg(message: _140.ResponsePrepareProposal): _140.ResponsePrepareProposalProtoMsg;
        };
        ResponseProcessProposal: {
            typeUrl: string;
            encode(message: _140.ResponseProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ResponseProcessProposal;
            fromPartial(object: Partial<_140.ResponseProcessProposal>): _140.ResponseProcessProposal;
            fromAmino(object: _140.ResponseProcessProposalAmino): _140.ResponseProcessProposal;
            toAmino(message: _140.ResponseProcessProposal): _140.ResponseProcessProposalAmino;
            fromAminoMsg(object: _140.ResponseProcessProposalAminoMsg): _140.ResponseProcessProposal;
            fromProtoMsg(message: _140.ResponseProcessProposalProtoMsg): _140.ResponseProcessProposal;
            toProto(message: _140.ResponseProcessProposal): Uint8Array;
            toProtoMsg(message: _140.ResponseProcessProposal): _140.ResponseProcessProposalProtoMsg;
        };
        CommitInfo: {
            typeUrl: string;
            encode(message: _140.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.CommitInfo;
            fromPartial(object: Partial<_140.CommitInfo>): _140.CommitInfo;
            fromAmino(object: _140.CommitInfoAmino): _140.CommitInfo;
            toAmino(message: _140.CommitInfo): _140.CommitInfoAmino;
            fromAminoMsg(object: _140.CommitInfoAminoMsg): _140.CommitInfo;
            fromProtoMsg(message: _140.CommitInfoProtoMsg): _140.CommitInfo;
            toProto(message: _140.CommitInfo): Uint8Array;
            toProtoMsg(message: _140.CommitInfo): _140.CommitInfoProtoMsg;
        };
        ExtendedCommitInfo: {
            typeUrl: string;
            encode(message: _140.ExtendedCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ExtendedCommitInfo;
            fromPartial(object: Partial<_140.ExtendedCommitInfo>): _140.ExtendedCommitInfo;
            fromAmino(object: _140.ExtendedCommitInfoAmino): _140.ExtendedCommitInfo;
            toAmino(message: _140.ExtendedCommitInfo): _140.ExtendedCommitInfoAmino;
            fromAminoMsg(object: _140.ExtendedCommitInfoAminoMsg): _140.ExtendedCommitInfo;
            fromProtoMsg(message: _140.ExtendedCommitInfoProtoMsg): _140.ExtendedCommitInfo;
            toProto(message: _140.ExtendedCommitInfo): Uint8Array;
            toProtoMsg(message: _140.ExtendedCommitInfo): _140.ExtendedCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _140.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.Event;
            fromPartial(object: Partial<_140.Event>): _140.Event;
            fromAmino(object: _140.EventAmino): _140.Event;
            toAmino(message: _140.Event): _140.EventAmino;
            fromAminoMsg(object: _140.EventAminoMsg): _140.Event;
            fromProtoMsg(message: _140.EventProtoMsg): _140.Event;
            toProto(message: _140.Event): Uint8Array;
            toProtoMsg(message: _140.Event): _140.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _140.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.EventAttribute;
            fromPartial(object: Partial<_140.EventAttribute>): _140.EventAttribute;
            fromAmino(object: _140.EventAttributeAmino): _140.EventAttribute;
            toAmino(message: _140.EventAttribute): _140.EventAttributeAmino;
            fromAminoMsg(object: _140.EventAttributeAminoMsg): _140.EventAttribute;
            fromProtoMsg(message: _140.EventAttributeProtoMsg): _140.EventAttribute;
            toProto(message: _140.EventAttribute): Uint8Array;
            toProtoMsg(message: _140.EventAttribute): _140.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _140.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.TxResult;
            fromPartial(object: Partial<_140.TxResult>): _140.TxResult;
            fromAmino(object: _140.TxResultAmino): _140.TxResult;
            toAmino(message: _140.TxResult): _140.TxResultAmino;
            fromAminoMsg(object: _140.TxResultAminoMsg): _140.TxResult;
            fromProtoMsg(message: _140.TxResultProtoMsg): _140.TxResult;
            toProto(message: _140.TxResult): Uint8Array;
            toProtoMsg(message: _140.TxResult): _140.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _140.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.Validator;
            fromPartial(object: Partial<_140.Validator>): _140.Validator;
            fromAmino(object: _140.ValidatorAmino): _140.Validator;
            toAmino(message: _140.Validator): _140.ValidatorAmino;
            fromAminoMsg(object: _140.ValidatorAminoMsg): _140.Validator;
            fromProtoMsg(message: _140.ValidatorProtoMsg): _140.Validator;
            toProto(message: _140.Validator): Uint8Array;
            toProtoMsg(message: _140.Validator): _140.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _140.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ValidatorUpdate;
            fromPartial(object: Partial<_140.ValidatorUpdate>): _140.ValidatorUpdate;
            fromAmino(object: _140.ValidatorUpdateAmino): _140.ValidatorUpdate;
            toAmino(message: _140.ValidatorUpdate): _140.ValidatorUpdateAmino;
            fromAminoMsg(object: _140.ValidatorUpdateAminoMsg): _140.ValidatorUpdate;
            fromProtoMsg(message: _140.ValidatorUpdateProtoMsg): _140.ValidatorUpdate;
            toProto(message: _140.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _140.ValidatorUpdate): _140.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _140.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.VoteInfo;
            fromPartial(object: Partial<_140.VoteInfo>): _140.VoteInfo;
            fromAmino(object: _140.VoteInfoAmino): _140.VoteInfo;
            toAmino(message: _140.VoteInfo): _140.VoteInfoAmino;
            fromAminoMsg(object: _140.VoteInfoAminoMsg): _140.VoteInfo;
            fromProtoMsg(message: _140.VoteInfoProtoMsg): _140.VoteInfo;
            toProto(message: _140.VoteInfo): Uint8Array;
            toProtoMsg(message: _140.VoteInfo): _140.VoteInfoProtoMsg;
        };
        ExtendedVoteInfo: {
            typeUrl: string;
            encode(message: _140.ExtendedVoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.ExtendedVoteInfo;
            fromPartial(object: Partial<_140.ExtendedVoteInfo>): _140.ExtendedVoteInfo;
            fromAmino(object: _140.ExtendedVoteInfoAmino): _140.ExtendedVoteInfo;
            toAmino(message: _140.ExtendedVoteInfo): _140.ExtendedVoteInfoAmino;
            fromAminoMsg(object: _140.ExtendedVoteInfoAminoMsg): _140.ExtendedVoteInfo;
            fromProtoMsg(message: _140.ExtendedVoteInfoProtoMsg): _140.ExtendedVoteInfo;
            toProto(message: _140.ExtendedVoteInfo): Uint8Array;
            toProtoMsg(message: _140.ExtendedVoteInfo): _140.ExtendedVoteInfoProtoMsg;
        };
        Misbehavior: {
            typeUrl: string;
            encode(message: _140.Misbehavior, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.Misbehavior;
            fromPartial(object: Partial<_140.Misbehavior>): _140.Misbehavior;
            fromAmino(object: _140.MisbehaviorAmino): _140.Misbehavior;
            toAmino(message: _140.Misbehavior): _140.MisbehaviorAmino;
            fromAminoMsg(object: _140.MisbehaviorAminoMsg): _140.Misbehavior;
            fromProtoMsg(message: _140.MisbehaviorProtoMsg): _140.Misbehavior;
            toProto(message: _140.Misbehavior): Uint8Array;
            toProtoMsg(message: _140.Misbehavior): _140.MisbehaviorProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _140.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.Snapshot;
            fromPartial(object: Partial<_140.Snapshot>): _140.Snapshot;
            fromAmino(object: _140.SnapshotAmino): _140.Snapshot;
            toAmino(message: _140.Snapshot): _140.SnapshotAmino;
            fromAminoMsg(object: _140.SnapshotAminoMsg): _140.Snapshot;
            fromProtoMsg(message: _140.SnapshotProtoMsg): _140.Snapshot;
            toProto(message: _140.Snapshot): Uint8Array;
            toProtoMsg(message: _140.Snapshot): _140.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _142.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.Proof;
            fromPartial(object: Partial<_142.Proof>): _142.Proof;
            fromAmino(object: _142.ProofAmino): _142.Proof;
            toAmino(message: _142.Proof): _142.ProofAmino;
            fromAminoMsg(object: _142.ProofAminoMsg): _142.Proof;
            fromProtoMsg(message: _142.ProofProtoMsg): _142.Proof;
            toProto(message: _142.Proof): Uint8Array;
            toProtoMsg(message: _142.Proof): _142.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _142.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.ValueOp;
            fromPartial(object: Partial<_142.ValueOp>): _142.ValueOp;
            fromAmino(object: _142.ValueOpAmino): _142.ValueOp;
            toAmino(message: _142.ValueOp): _142.ValueOpAmino;
            fromAminoMsg(object: _142.ValueOpAminoMsg): _142.ValueOp;
            fromProtoMsg(message: _142.ValueOpProtoMsg): _142.ValueOp;
            toProto(message: _142.ValueOp): Uint8Array;
            toProtoMsg(message: _142.ValueOp): _142.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _142.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.DominoOp;
            fromPartial(object: Partial<_142.DominoOp>): _142.DominoOp;
            fromAmino(object: _142.DominoOpAmino): _142.DominoOp;
            toAmino(message: _142.DominoOp): _142.DominoOpAmino;
            fromAminoMsg(object: _142.DominoOpAminoMsg): _142.DominoOp;
            fromProtoMsg(message: _142.DominoOpProtoMsg): _142.DominoOp;
            toProto(message: _142.DominoOp): Uint8Array;
            toProtoMsg(message: _142.DominoOp): _142.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _142.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.ProofOp;
            fromPartial(object: Partial<_142.ProofOp>): _142.ProofOp;
            fromAmino(object: _142.ProofOpAmino): _142.ProofOp;
            toAmino(message: _142.ProofOp): _142.ProofOpAmino;
            fromAminoMsg(object: _142.ProofOpAminoMsg): _142.ProofOp;
            fromProtoMsg(message: _142.ProofOpProtoMsg): _142.ProofOp;
            toProto(message: _142.ProofOp): Uint8Array;
            toProtoMsg(message: _142.ProofOp): _142.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _142.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.ProofOps;
            fromPartial(object: Partial<_142.ProofOps>): _142.ProofOps;
            fromAmino(object: _142.ProofOpsAmino): _142.ProofOps;
            toAmino(message: _142.ProofOps): _142.ProofOpsAmino;
            fromAminoMsg(object: _142.ProofOpsAminoMsg): _142.ProofOps;
            fromProtoMsg(message: _142.ProofOpsProtoMsg): _142.ProofOps;
            toProto(message: _142.ProofOps): Uint8Array;
            toProtoMsg(message: _142.ProofOps): _142.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _141.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _141.PublicKey;
            fromPartial(object: Partial<_141.PublicKey>): _141.PublicKey;
            fromAmino(object: _141.PublicKeyAmino): _141.PublicKey;
            toAmino(message: _141.PublicKey): _141.PublicKeyAmino;
            fromAminoMsg(object: _141.PublicKeyAminoMsg): _141.PublicKey;
            fromProtoMsg(message: _141.PublicKeyProtoMsg): _141.PublicKey;
            toProto(message: _141.PublicKey): Uint8Array;
            toProtoMsg(message: _141.PublicKey): _141.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _143.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _143.BitArray;
                fromPartial(object: Partial<_143.BitArray>): _143.BitArray;
                fromAmino(object: _143.BitArrayAmino): _143.BitArray;
                toAmino(message: _143.BitArray): _143.BitArrayAmino;
                fromAminoMsg(object: _143.BitArrayAminoMsg): _143.BitArray;
                fromProtoMsg(message: _143.BitArrayProtoMsg): _143.BitArray;
                toProto(message: _143.BitArray): Uint8Array;
                toProtoMsg(message: _143.BitArray): _143.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _144.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.NetAddress;
            fromPartial(object: Partial<_144.NetAddress>): _144.NetAddress;
            fromAmino(object: _144.NetAddressAmino): _144.NetAddress;
            toAmino(message: _144.NetAddress): _144.NetAddressAmino;
            fromAminoMsg(object: _144.NetAddressAminoMsg): _144.NetAddress;
            fromProtoMsg(message: _144.NetAddressProtoMsg): _144.NetAddress;
            toProto(message: _144.NetAddress): Uint8Array;
            toProtoMsg(message: _144.NetAddress): _144.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _144.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.ProtocolVersion;
            fromPartial(object: Partial<_144.ProtocolVersion>): _144.ProtocolVersion;
            fromAmino(object: _144.ProtocolVersionAmino): _144.ProtocolVersion;
            toAmino(message: _144.ProtocolVersion): _144.ProtocolVersionAmino;
            fromAminoMsg(object: _144.ProtocolVersionAminoMsg): _144.ProtocolVersion;
            fromProtoMsg(message: _144.ProtocolVersionProtoMsg): _144.ProtocolVersion;
            toProto(message: _144.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _144.ProtocolVersion): _144.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _144.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.DefaultNodeInfo;
            fromPartial(object: Partial<_144.DefaultNodeInfo>): _144.DefaultNodeInfo;
            fromAmino(object: _144.DefaultNodeInfoAmino): _144.DefaultNodeInfo;
            toAmino(message: _144.DefaultNodeInfo): _144.DefaultNodeInfoAmino;
            fromAminoMsg(object: _144.DefaultNodeInfoAminoMsg): _144.DefaultNodeInfo;
            fromProtoMsg(message: _144.DefaultNodeInfoProtoMsg): _144.DefaultNodeInfo;
            toProto(message: _144.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _144.DefaultNodeInfo): _144.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _144.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.DefaultNodeInfoOther;
            fromPartial(object: Partial<_144.DefaultNodeInfoOther>): _144.DefaultNodeInfoOther;
            fromAmino(object: _144.DefaultNodeInfoOtherAmino): _144.DefaultNodeInfoOther;
            toAmino(message: _144.DefaultNodeInfoOther): _144.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _144.DefaultNodeInfoOtherAminoMsg): _144.DefaultNodeInfoOther;
            fromProtoMsg(message: _144.DefaultNodeInfoOtherProtoMsg): _144.DefaultNodeInfoOther;
            toProto(message: _144.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _144.DefaultNodeInfoOther): _144.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _149.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _149.ValidatorSet;
            fromPartial(object: Partial<_149.ValidatorSet>): _149.ValidatorSet;
            fromAmino(object: _149.ValidatorSetAmino): _149.ValidatorSet;
            toAmino(message: _149.ValidatorSet): _149.ValidatorSetAmino;
            fromAminoMsg(object: _149.ValidatorSetAminoMsg): _149.ValidatorSet;
            fromProtoMsg(message: _149.ValidatorSetProtoMsg): _149.ValidatorSet;
            toProto(message: _149.ValidatorSet): Uint8Array;
            toProtoMsg(message: _149.ValidatorSet): _149.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _149.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _149.Validator;
            fromPartial(object: Partial<_149.Validator>): _149.Validator;
            fromAmino(object: _149.ValidatorAmino): _149.Validator;
            toAmino(message: _149.Validator): _149.ValidatorAmino;
            fromAminoMsg(object: _149.ValidatorAminoMsg): _149.Validator;
            fromProtoMsg(message: _149.ValidatorProtoMsg): _149.Validator;
            toProto(message: _149.Validator): Uint8Array;
            toProtoMsg(message: _149.Validator): _149.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _149.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _149.SimpleValidator;
            fromPartial(object: Partial<_149.SimpleValidator>): _149.SimpleValidator;
            fromAmino(object: _149.SimpleValidatorAmino): _149.SimpleValidator;
            toAmino(message: _149.SimpleValidator): _149.SimpleValidatorAmino;
            fromAminoMsg(object: _149.SimpleValidatorAminoMsg): _149.SimpleValidator;
            fromProtoMsg(message: _149.SimpleValidatorProtoMsg): _149.SimpleValidator;
            toProto(message: _149.SimpleValidator): Uint8Array;
            toProtoMsg(message: _149.SimpleValidator): _149.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _148.BlockIDFlag;
        blockIDFlagToJSON(object: _148.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _148.SignedMsgType;
        signedMsgTypeToJSON(object: _148.SignedMsgType): string;
        BlockIDFlag: typeof _148.BlockIDFlag;
        BlockIDFlagSDKType: typeof _148.BlockIDFlag;
        BlockIDFlagAmino: typeof _148.BlockIDFlag;
        SignedMsgType: typeof _148.SignedMsgType;
        SignedMsgTypeSDKType: typeof _148.SignedMsgType;
        SignedMsgTypeAmino: typeof _148.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _148.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.PartSetHeader;
            fromPartial(object: Partial<_148.PartSetHeader>): _148.PartSetHeader;
            fromAmino(object: _148.PartSetHeaderAmino): _148.PartSetHeader;
            toAmino(message: _148.PartSetHeader): _148.PartSetHeaderAmino;
            fromAminoMsg(object: _148.PartSetHeaderAminoMsg): _148.PartSetHeader;
            fromProtoMsg(message: _148.PartSetHeaderProtoMsg): _148.PartSetHeader;
            toProto(message: _148.PartSetHeader): Uint8Array;
            toProtoMsg(message: _148.PartSetHeader): _148.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _148.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.Part;
            fromPartial(object: Partial<_148.Part>): _148.Part;
            fromAmino(object: _148.PartAmino): _148.Part;
            toAmino(message: _148.Part): _148.PartAmino;
            fromAminoMsg(object: _148.PartAminoMsg): _148.Part;
            fromProtoMsg(message: _148.PartProtoMsg): _148.Part;
            toProto(message: _148.Part): Uint8Array;
            toProtoMsg(message: _148.Part): _148.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _148.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.BlockID;
            fromPartial(object: Partial<_148.BlockID>): _148.BlockID;
            fromAmino(object: _148.BlockIDAmino): _148.BlockID;
            toAmino(message: _148.BlockID): _148.BlockIDAmino;
            fromAminoMsg(object: _148.BlockIDAminoMsg): _148.BlockID;
            fromProtoMsg(message: _148.BlockIDProtoMsg): _148.BlockID;
            toProto(message: _148.BlockID): Uint8Array;
            toProtoMsg(message: _148.BlockID): _148.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _148.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.Header;
            fromPartial(object: Partial<_148.Header>): _148.Header;
            fromAmino(object: _148.HeaderAmino): _148.Header;
            toAmino(message: _148.Header): _148.HeaderAmino;
            fromAminoMsg(object: _148.HeaderAminoMsg): _148.Header;
            fromProtoMsg(message: _148.HeaderProtoMsg): _148.Header;
            toProto(message: _148.Header): Uint8Array;
            toProtoMsg(message: _148.Header): _148.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _148.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.Data;
            fromPartial(object: Partial<_148.Data>): _148.Data;
            fromAmino(object: _148.DataAmino): _148.Data;
            toAmino(message: _148.Data): _148.DataAmino;
            fromAminoMsg(object: _148.DataAminoMsg): _148.Data;
            fromProtoMsg(message: _148.DataProtoMsg): _148.Data;
            toProto(message: _148.Data): Uint8Array;
            toProtoMsg(message: _148.Data): _148.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _148.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.Vote;
            fromPartial(object: Partial<_148.Vote>): _148.Vote;
            fromAmino(object: _148.VoteAmino): _148.Vote;
            toAmino(message: _148.Vote): _148.VoteAmino;
            fromAminoMsg(object: _148.VoteAminoMsg): _148.Vote;
            fromProtoMsg(message: _148.VoteProtoMsg): _148.Vote;
            toProto(message: _148.Vote): Uint8Array;
            toProtoMsg(message: _148.Vote): _148.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _148.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.Commit;
            fromPartial(object: Partial<_148.Commit>): _148.Commit;
            fromAmino(object: _148.CommitAmino): _148.Commit;
            toAmino(message: _148.Commit): _148.CommitAmino;
            fromAminoMsg(object: _148.CommitAminoMsg): _148.Commit;
            fromProtoMsg(message: _148.CommitProtoMsg): _148.Commit;
            toProto(message: _148.Commit): Uint8Array;
            toProtoMsg(message: _148.Commit): _148.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _148.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.CommitSig;
            fromPartial(object: Partial<_148.CommitSig>): _148.CommitSig;
            fromAmino(object: _148.CommitSigAmino): _148.CommitSig;
            toAmino(message: _148.CommitSig): _148.CommitSigAmino;
            fromAminoMsg(object: _148.CommitSigAminoMsg): _148.CommitSig;
            fromProtoMsg(message: _148.CommitSigProtoMsg): _148.CommitSig;
            toProto(message: _148.CommitSig): Uint8Array;
            toProtoMsg(message: _148.CommitSig): _148.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _148.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.Proposal;
            fromPartial(object: Partial<_148.Proposal>): _148.Proposal;
            fromAmino(object: _148.ProposalAmino): _148.Proposal;
            toAmino(message: _148.Proposal): _148.ProposalAmino;
            fromAminoMsg(object: _148.ProposalAminoMsg): _148.Proposal;
            fromProtoMsg(message: _148.ProposalProtoMsg): _148.Proposal;
            toProto(message: _148.Proposal): Uint8Array;
            toProtoMsg(message: _148.Proposal): _148.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _148.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.SignedHeader;
            fromPartial(object: Partial<_148.SignedHeader>): _148.SignedHeader;
            fromAmino(object: _148.SignedHeaderAmino): _148.SignedHeader;
            toAmino(message: _148.SignedHeader): _148.SignedHeaderAmino;
            fromAminoMsg(object: _148.SignedHeaderAminoMsg): _148.SignedHeader;
            fromProtoMsg(message: _148.SignedHeaderProtoMsg): _148.SignedHeader;
            toProto(message: _148.SignedHeader): Uint8Array;
            toProtoMsg(message: _148.SignedHeader): _148.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _148.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.LightBlock;
            fromPartial(object: Partial<_148.LightBlock>): _148.LightBlock;
            fromAmino(object: _148.LightBlockAmino): _148.LightBlock;
            toAmino(message: _148.LightBlock): _148.LightBlockAmino;
            fromAminoMsg(object: _148.LightBlockAminoMsg): _148.LightBlock;
            fromProtoMsg(message: _148.LightBlockProtoMsg): _148.LightBlock;
            toProto(message: _148.LightBlock): Uint8Array;
            toProtoMsg(message: _148.LightBlock): _148.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _148.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.BlockMeta;
            fromPartial(object: Partial<_148.BlockMeta>): _148.BlockMeta;
            fromAmino(object: _148.BlockMetaAmino): _148.BlockMeta;
            toAmino(message: _148.BlockMeta): _148.BlockMetaAmino;
            fromAminoMsg(object: _148.BlockMetaAminoMsg): _148.BlockMeta;
            fromProtoMsg(message: _148.BlockMetaProtoMsg): _148.BlockMeta;
            toProto(message: _148.BlockMeta): Uint8Array;
            toProtoMsg(message: _148.BlockMeta): _148.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _148.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _148.TxProof;
            fromPartial(object: Partial<_148.TxProof>): _148.TxProof;
            fromAmino(object: _148.TxProofAmino): _148.TxProof;
            toAmino(message: _148.TxProof): _148.TxProofAmino;
            fromAminoMsg(object: _148.TxProofAminoMsg): _148.TxProof;
            fromProtoMsg(message: _148.TxProofProtoMsg): _148.TxProof;
            toProto(message: _148.TxProof): Uint8Array;
            toProtoMsg(message: _148.TxProof): _148.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _147.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _147.ConsensusParams;
            fromPartial(object: Partial<_147.ConsensusParams>): _147.ConsensusParams;
            fromAmino(object: _147.ConsensusParamsAmino): _147.ConsensusParams;
            toAmino(message: _147.ConsensusParams): _147.ConsensusParamsAmino;
            fromAminoMsg(object: _147.ConsensusParamsAminoMsg): _147.ConsensusParams;
            fromProtoMsg(message: _147.ConsensusParamsProtoMsg): _147.ConsensusParams;
            toProto(message: _147.ConsensusParams): Uint8Array;
            toProtoMsg(message: _147.ConsensusParams): _147.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _147.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _147.BlockParams;
            fromPartial(object: Partial<_147.BlockParams>): _147.BlockParams;
            fromAmino(object: _147.BlockParamsAmino): _147.BlockParams;
            toAmino(message: _147.BlockParams): _147.BlockParamsAmino;
            fromAminoMsg(object: _147.BlockParamsAminoMsg): _147.BlockParams;
            fromProtoMsg(message: _147.BlockParamsProtoMsg): _147.BlockParams;
            toProto(message: _147.BlockParams): Uint8Array;
            toProtoMsg(message: _147.BlockParams): _147.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _147.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _147.EvidenceParams;
            fromPartial(object: Partial<_147.EvidenceParams>): _147.EvidenceParams;
            fromAmino(object: _147.EvidenceParamsAmino): _147.EvidenceParams;
            toAmino(message: _147.EvidenceParams): _147.EvidenceParamsAmino;
            fromAminoMsg(object: _147.EvidenceParamsAminoMsg): _147.EvidenceParams;
            fromProtoMsg(message: _147.EvidenceParamsProtoMsg): _147.EvidenceParams;
            toProto(message: _147.EvidenceParams): Uint8Array;
            toProtoMsg(message: _147.EvidenceParams): _147.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _147.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _147.ValidatorParams;
            fromPartial(object: Partial<_147.ValidatorParams>): _147.ValidatorParams;
            fromAmino(object: _147.ValidatorParamsAmino): _147.ValidatorParams;
            toAmino(message: _147.ValidatorParams): _147.ValidatorParamsAmino;
            fromAminoMsg(object: _147.ValidatorParamsAminoMsg): _147.ValidatorParams;
            fromProtoMsg(message: _147.ValidatorParamsProtoMsg): _147.ValidatorParams;
            toProto(message: _147.ValidatorParams): Uint8Array;
            toProtoMsg(message: _147.ValidatorParams): _147.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _147.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _147.VersionParams;
            fromPartial(object: Partial<_147.VersionParams>): _147.VersionParams;
            fromAmino(object: _147.VersionParamsAmino): _147.VersionParams;
            toAmino(message: _147.VersionParams): _147.VersionParamsAmino;
            fromAminoMsg(object: _147.VersionParamsAminoMsg): _147.VersionParams;
            fromProtoMsg(message: _147.VersionParamsProtoMsg): _147.VersionParams;
            toProto(message: _147.VersionParams): Uint8Array;
            toProtoMsg(message: _147.VersionParams): _147.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _147.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _147.HashedParams;
            fromPartial(object: Partial<_147.HashedParams>): _147.HashedParams;
            fromAmino(object: _147.HashedParamsAmino): _147.HashedParams;
            toAmino(message: _147.HashedParams): _147.HashedParamsAmino;
            fromAminoMsg(object: _147.HashedParamsAminoMsg): _147.HashedParams;
            fromProtoMsg(message: _147.HashedParamsProtoMsg): _147.HashedParams;
            toProto(message: _147.HashedParams): Uint8Array;
            toProtoMsg(message: _147.HashedParams): _147.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _146.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.Evidence;
            fromPartial(object: Partial<_146.Evidence>): _146.Evidence;
            fromAmino(object: _146.EvidenceAmino): _146.Evidence;
            toAmino(message: _146.Evidence): _146.EvidenceAmino;
            fromAminoMsg(object: _146.EvidenceAminoMsg): _146.Evidence;
            fromProtoMsg(message: _146.EvidenceProtoMsg): _146.Evidence;
            toProto(message: _146.Evidence): Uint8Array;
            toProtoMsg(message: _146.Evidence): _146.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _146.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.DuplicateVoteEvidence;
            fromPartial(object: Partial<_146.DuplicateVoteEvidence>): _146.DuplicateVoteEvidence;
            fromAmino(object: _146.DuplicateVoteEvidenceAmino): _146.DuplicateVoteEvidence;
            toAmino(message: _146.DuplicateVoteEvidence): _146.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _146.DuplicateVoteEvidenceAminoMsg): _146.DuplicateVoteEvidence;
            fromProtoMsg(message: _146.DuplicateVoteEvidenceProtoMsg): _146.DuplicateVoteEvidence;
            toProto(message: _146.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _146.DuplicateVoteEvidence): _146.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _146.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.LightClientAttackEvidence;
            fromPartial(object: Partial<_146.LightClientAttackEvidence>): _146.LightClientAttackEvidence;
            fromAmino(object: _146.LightClientAttackEvidenceAmino): _146.LightClientAttackEvidence;
            toAmino(message: _146.LightClientAttackEvidence): _146.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _146.LightClientAttackEvidenceAminoMsg): _146.LightClientAttackEvidence;
            fromProtoMsg(message: _146.LightClientAttackEvidenceProtoMsg): _146.LightClientAttackEvidence;
            toProto(message: _146.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _146.LightClientAttackEvidence): _146.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _146.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _146.EvidenceList;
            fromPartial(object: Partial<_146.EvidenceList>): _146.EvidenceList;
            fromAmino(object: _146.EvidenceListAmino): _146.EvidenceList;
            toAmino(message: _146.EvidenceList): _146.EvidenceListAmino;
            fromAminoMsg(object: _146.EvidenceListAminoMsg): _146.EvidenceList;
            fromProtoMsg(message: _146.EvidenceListProtoMsg): _146.EvidenceList;
            toProto(message: _146.EvidenceList): Uint8Array;
            toProtoMsg(message: _146.EvidenceList): _146.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _145.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _145.Block;
            fromPartial(object: Partial<_145.Block>): _145.Block;
            fromAmino(object: _145.BlockAmino): _145.Block;
            toAmino(message: _145.Block): _145.BlockAmino;
            fromAminoMsg(object: _145.BlockAminoMsg): _145.Block;
            fromProtoMsg(message: _145.BlockProtoMsg): _145.Block;
            toProto(message: _145.Block): Uint8Array;
            toProtoMsg(message: _145.Block): _145.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _150.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _150.App;
            fromPartial(object: Partial<_150.App>): _150.App;
            fromAmino(object: _150.AppAmino): _150.App;
            toAmino(message: _150.App): _150.AppAmino;
            fromAminoMsg(object: _150.AppAminoMsg): _150.App;
            fromProtoMsg(message: _150.AppProtoMsg): _150.App;
            toProto(message: _150.App): Uint8Array;
            toProtoMsg(message: _150.App): _150.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _150.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _150.Consensus;
            fromPartial(object: Partial<_150.Consensus>): _150.Consensus;
            fromAmino(object: _150.ConsensusAmino): _150.Consensus;
            toAmino(message: _150.Consensus): _150.ConsensusAmino;
            fromAminoMsg(object: _150.ConsensusAminoMsg): _150.Consensus;
            fromProtoMsg(message: _150.ConsensusProtoMsg): _150.Consensus;
            toProto(message: _150.Consensus): Uint8Array;
            toProtoMsg(message: _150.Consensus): _150.ConsensusProtoMsg;
        };
    };
}
