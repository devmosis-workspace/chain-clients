import * as _180 from "../proofs";
export declare const ics23: {
    hashOpFromJSON(object: any): _180.HashOp;
    hashOpToJSON(object: _180.HashOp): string;
    lengthOpFromJSON(object: any): _180.LengthOp;
    lengthOpToJSON(object: _180.LengthOp): string;
    HashOp: typeof _180.HashOp;
    HashOpSDKType: typeof _180.HashOp;
    HashOpAmino: typeof _180.HashOp;
    LengthOp: typeof _180.LengthOp;
    LengthOpSDKType: typeof _180.LengthOp;
    LengthOpAmino: typeof _180.LengthOp;
    ExistenceProof: {
        typeUrl: string;
        encode(message: _180.ExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.ExistenceProof;
        fromPartial(object: Partial<_180.ExistenceProof>): _180.ExistenceProof;
        fromAmino(object: _180.ExistenceProofAmino): _180.ExistenceProof;
        toAmino(message: _180.ExistenceProof): _180.ExistenceProofAmino;
        fromAminoMsg(object: _180.ExistenceProofAminoMsg): _180.ExistenceProof;
        fromProtoMsg(message: _180.ExistenceProofProtoMsg): _180.ExistenceProof;
        toProto(message: _180.ExistenceProof): Uint8Array;
        toProtoMsg(message: _180.ExistenceProof): _180.ExistenceProofProtoMsg;
    };
    NonExistenceProof: {
        typeUrl: string;
        encode(message: _180.NonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.NonExistenceProof;
        fromPartial(object: Partial<_180.NonExistenceProof>): _180.NonExistenceProof;
        fromAmino(object: _180.NonExistenceProofAmino): _180.NonExistenceProof;
        toAmino(message: _180.NonExistenceProof): _180.NonExistenceProofAmino;
        fromAminoMsg(object: _180.NonExistenceProofAminoMsg): _180.NonExistenceProof;
        fromProtoMsg(message: _180.NonExistenceProofProtoMsg): _180.NonExistenceProof;
        toProto(message: _180.NonExistenceProof): Uint8Array;
        toProtoMsg(message: _180.NonExistenceProof): _180.NonExistenceProofProtoMsg;
    };
    CommitmentProof: {
        typeUrl: string;
        encode(message: _180.CommitmentProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.CommitmentProof;
        fromPartial(object: Partial<_180.CommitmentProof>): _180.CommitmentProof;
        fromAmino(object: _180.CommitmentProofAmino): _180.CommitmentProof;
        toAmino(message: _180.CommitmentProof): _180.CommitmentProofAmino;
        fromAminoMsg(object: _180.CommitmentProofAminoMsg): _180.CommitmentProof;
        fromProtoMsg(message: _180.CommitmentProofProtoMsg): _180.CommitmentProof;
        toProto(message: _180.CommitmentProof): Uint8Array;
        toProtoMsg(message: _180.CommitmentProof): _180.CommitmentProofProtoMsg;
    };
    LeafOp: {
        typeUrl: string;
        encode(message: _180.LeafOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.LeafOp;
        fromPartial(object: Partial<_180.LeafOp>): _180.LeafOp;
        fromAmino(object: _180.LeafOpAmino): _180.LeafOp;
        toAmino(message: _180.LeafOp): _180.LeafOpAmino;
        fromAminoMsg(object: _180.LeafOpAminoMsg): _180.LeafOp;
        fromProtoMsg(message: _180.LeafOpProtoMsg): _180.LeafOp;
        toProto(message: _180.LeafOp): Uint8Array;
        toProtoMsg(message: _180.LeafOp): _180.LeafOpProtoMsg;
    };
    InnerOp: {
        typeUrl: string;
        encode(message: _180.InnerOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.InnerOp;
        fromPartial(object: Partial<_180.InnerOp>): _180.InnerOp;
        fromAmino(object: _180.InnerOpAmino): _180.InnerOp;
        toAmino(message: _180.InnerOp): _180.InnerOpAmino;
        fromAminoMsg(object: _180.InnerOpAminoMsg): _180.InnerOp;
        fromProtoMsg(message: _180.InnerOpProtoMsg): _180.InnerOp;
        toProto(message: _180.InnerOp): Uint8Array;
        toProtoMsg(message: _180.InnerOp): _180.InnerOpProtoMsg;
    };
    ProofSpec: {
        typeUrl: string;
        encode(message: _180.ProofSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.ProofSpec;
        fromPartial(object: Partial<_180.ProofSpec>): _180.ProofSpec;
        fromAmino(object: _180.ProofSpecAmino): _180.ProofSpec;
        toAmino(message: _180.ProofSpec): _180.ProofSpecAmino;
        fromAminoMsg(object: _180.ProofSpecAminoMsg): _180.ProofSpec;
        fromProtoMsg(message: _180.ProofSpecProtoMsg): _180.ProofSpec;
        toProto(message: _180.ProofSpec): Uint8Array;
        toProtoMsg(message: _180.ProofSpec): _180.ProofSpecProtoMsg;
    };
    InnerSpec: {
        typeUrl: string;
        encode(message: _180.InnerSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.InnerSpec;
        fromPartial(object: Partial<_180.InnerSpec>): _180.InnerSpec;
        fromAmino(object: _180.InnerSpecAmino): _180.InnerSpec;
        toAmino(message: _180.InnerSpec): _180.InnerSpecAmino;
        fromAminoMsg(object: _180.InnerSpecAminoMsg): _180.InnerSpec;
        fromProtoMsg(message: _180.InnerSpecProtoMsg): _180.InnerSpec;
        toProto(message: _180.InnerSpec): Uint8Array;
        toProtoMsg(message: _180.InnerSpec): _180.InnerSpecProtoMsg;
    };
    BatchProof: {
        typeUrl: string;
        encode(message: _180.BatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.BatchProof;
        fromPartial(object: Partial<_180.BatchProof>): _180.BatchProof;
        fromAmino(object: _180.BatchProofAmino): _180.BatchProof;
        toAmino(message: _180.BatchProof): _180.BatchProofAmino;
        fromAminoMsg(object: _180.BatchProofAminoMsg): _180.BatchProof;
        fromProtoMsg(message: _180.BatchProofProtoMsg): _180.BatchProof;
        toProto(message: _180.BatchProof): Uint8Array;
        toProtoMsg(message: _180.BatchProof): _180.BatchProofProtoMsg;
    };
    BatchEntry: {
        typeUrl: string;
        encode(message: _180.BatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.BatchEntry;
        fromPartial(object: Partial<_180.BatchEntry>): _180.BatchEntry;
        fromAmino(object: _180.BatchEntryAmino): _180.BatchEntry;
        toAmino(message: _180.BatchEntry): _180.BatchEntryAmino;
        fromAminoMsg(object: _180.BatchEntryAminoMsg): _180.BatchEntry;
        fromProtoMsg(message: _180.BatchEntryProtoMsg): _180.BatchEntry;
        toProto(message: _180.BatchEntry): Uint8Array;
        toProtoMsg(message: _180.BatchEntry): _180.BatchEntryProtoMsg;
    };
    CompressedBatchProof: {
        typeUrl: string;
        encode(message: _180.CompressedBatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.CompressedBatchProof;
        fromPartial(object: Partial<_180.CompressedBatchProof>): _180.CompressedBatchProof;
        fromAmino(object: _180.CompressedBatchProofAmino): _180.CompressedBatchProof;
        toAmino(message: _180.CompressedBatchProof): _180.CompressedBatchProofAmino;
        fromAminoMsg(object: _180.CompressedBatchProofAminoMsg): _180.CompressedBatchProof;
        fromProtoMsg(message: _180.CompressedBatchProofProtoMsg): _180.CompressedBatchProof;
        toProto(message: _180.CompressedBatchProof): Uint8Array;
        toProtoMsg(message: _180.CompressedBatchProof): _180.CompressedBatchProofProtoMsg;
    };
    CompressedBatchEntry: {
        typeUrl: string;
        encode(message: _180.CompressedBatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.CompressedBatchEntry;
        fromPartial(object: Partial<_180.CompressedBatchEntry>): _180.CompressedBatchEntry;
        fromAmino(object: _180.CompressedBatchEntryAmino): _180.CompressedBatchEntry;
        toAmino(message: _180.CompressedBatchEntry): _180.CompressedBatchEntryAmino;
        fromAminoMsg(object: _180.CompressedBatchEntryAminoMsg): _180.CompressedBatchEntry;
        fromProtoMsg(message: _180.CompressedBatchEntryProtoMsg): _180.CompressedBatchEntry;
        toProto(message: _180.CompressedBatchEntry): Uint8Array;
        toProtoMsg(message: _180.CompressedBatchEntry): _180.CompressedBatchEntryProtoMsg;
    };
    CompressedExistenceProof: {
        typeUrl: string;
        encode(message: _180.CompressedExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.CompressedExistenceProof;
        fromPartial(object: Partial<_180.CompressedExistenceProof>): _180.CompressedExistenceProof;
        fromAmino(object: _180.CompressedExistenceProofAmino): _180.CompressedExistenceProof;
        toAmino(message: _180.CompressedExistenceProof): _180.CompressedExistenceProofAmino;
        fromAminoMsg(object: _180.CompressedExistenceProofAminoMsg): _180.CompressedExistenceProof;
        fromProtoMsg(message: _180.CompressedExistenceProofProtoMsg): _180.CompressedExistenceProof;
        toProto(message: _180.CompressedExistenceProof): Uint8Array;
        toProtoMsg(message: _180.CompressedExistenceProof): _180.CompressedExistenceProofProtoMsg;
    };
    CompressedNonExistenceProof: {
        typeUrl: string;
        encode(message: _180.CompressedNonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _180.CompressedNonExistenceProof;
        fromPartial(object: Partial<_180.CompressedNonExistenceProof>): _180.CompressedNonExistenceProof;
        fromAmino(object: _180.CompressedNonExistenceProofAmino): _180.CompressedNonExistenceProof;
        toAmino(message: _180.CompressedNonExistenceProof): _180.CompressedNonExistenceProofAmino;
        fromAminoMsg(object: _180.CompressedNonExistenceProofAminoMsg): _180.CompressedNonExistenceProof;
        fromProtoMsg(message: _180.CompressedNonExistenceProofProtoMsg): _180.CompressedNonExistenceProof;
        toProto(message: _180.CompressedNonExistenceProof): Uint8Array;
        toProtoMsg(message: _180.CompressedNonExistenceProof): _180.CompressedNonExistenceProofProtoMsg;
    };
};
