import * as _130 from "./abci/types";
import * as _131 from "./crypto/keys";
import * as _132 from "./crypto/proof";
import * as _133 from "./libs/bits/types";
import * as _134 from "./p2p/types";
import * as _135 from "./types/block";
import * as _136 from "./types/evidence";
import * as _137 from "./types/params";
import * as _138 from "./types/types";
import * as _139 from "./types/validator";
import * as _140 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _130.CheckTxType;
        checkTxTypeToJSON(object: _130.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _130.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _130.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _130.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _130.ResponseApplySnapshotChunk_Result): string;
        responseProcessProposal_ProposalStatusFromJSON(object: any): _130.ResponseProcessProposal_ProposalStatus;
        responseProcessProposal_ProposalStatusToJSON(object: _130.ResponseProcessProposal_ProposalStatus): string;
        misbehaviorTypeFromJSON(object: any): _130.MisbehaviorType;
        misbehaviorTypeToJSON(object: _130.MisbehaviorType): string;
        CheckTxType: typeof _130.CheckTxType;
        CheckTxTypeSDKType: typeof _130.CheckTxType;
        CheckTxTypeAmino: typeof _130.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _130.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _130.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _130.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _130.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _130.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _130.ResponseApplySnapshotChunk_Result;
        ResponseProcessProposal_ProposalStatus: typeof _130.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusSDKType: typeof _130.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusAmino: typeof _130.ResponseProcessProposal_ProposalStatus;
        MisbehaviorType: typeof _130.MisbehaviorType;
        MisbehaviorTypeSDKType: typeof _130.MisbehaviorType;
        MisbehaviorTypeAmino: typeof _130.MisbehaviorType;
        Request: {
            typeUrl: string;
            encode(message: _130.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.Request;
            fromPartial(object: Partial<_130.Request>): _130.Request;
            fromAmino(object: _130.RequestAmino): _130.Request;
            toAmino(message: _130.Request): _130.RequestAmino;
            fromAminoMsg(object: _130.RequestAminoMsg): _130.Request;
            fromProtoMsg(message: _130.RequestProtoMsg): _130.Request;
            toProto(message: _130.Request): Uint8Array;
            toProtoMsg(message: _130.Request): _130.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _130.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestEcho;
            fromPartial(object: Partial<_130.RequestEcho>): _130.RequestEcho;
            fromAmino(object: _130.RequestEchoAmino): _130.RequestEcho;
            toAmino(message: _130.RequestEcho): _130.RequestEchoAmino;
            fromAminoMsg(object: _130.RequestEchoAminoMsg): _130.RequestEcho;
            fromProtoMsg(message: _130.RequestEchoProtoMsg): _130.RequestEcho;
            toProto(message: _130.RequestEcho): Uint8Array;
            toProtoMsg(message: _130.RequestEcho): _130.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _130.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _130.RequestFlush;
            fromPartial(_: Partial<_130.RequestFlush>): _130.RequestFlush;
            fromAmino(_: _130.RequestFlushAmino): _130.RequestFlush;
            toAmino(_: _130.RequestFlush): _130.RequestFlushAmino;
            fromAminoMsg(object: _130.RequestFlushAminoMsg): _130.RequestFlush;
            fromProtoMsg(message: _130.RequestFlushProtoMsg): _130.RequestFlush;
            toProto(message: _130.RequestFlush): Uint8Array;
            toProtoMsg(message: _130.RequestFlush): _130.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _130.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestInfo;
            fromPartial(object: Partial<_130.RequestInfo>): _130.RequestInfo;
            fromAmino(object: _130.RequestInfoAmino): _130.RequestInfo;
            toAmino(message: _130.RequestInfo): _130.RequestInfoAmino;
            fromAminoMsg(object: _130.RequestInfoAminoMsg): _130.RequestInfo;
            fromProtoMsg(message: _130.RequestInfoProtoMsg): _130.RequestInfo;
            toProto(message: _130.RequestInfo): Uint8Array;
            toProtoMsg(message: _130.RequestInfo): _130.RequestInfoProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _130.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestInitChain;
            fromPartial(object: Partial<_130.RequestInitChain>): _130.RequestInitChain;
            fromAmino(object: _130.RequestInitChainAmino): _130.RequestInitChain;
            toAmino(message: _130.RequestInitChain): _130.RequestInitChainAmino;
            fromAminoMsg(object: _130.RequestInitChainAminoMsg): _130.RequestInitChain;
            fromProtoMsg(message: _130.RequestInitChainProtoMsg): _130.RequestInitChain;
            toProto(message: _130.RequestInitChain): Uint8Array;
            toProtoMsg(message: _130.RequestInitChain): _130.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _130.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestQuery;
            fromPartial(object: Partial<_130.RequestQuery>): _130.RequestQuery;
            fromAmino(object: _130.RequestQueryAmino): _130.RequestQuery;
            toAmino(message: _130.RequestQuery): _130.RequestQueryAmino;
            fromAminoMsg(object: _130.RequestQueryAminoMsg): _130.RequestQuery;
            fromProtoMsg(message: _130.RequestQueryProtoMsg): _130.RequestQuery;
            toProto(message: _130.RequestQuery): Uint8Array;
            toProtoMsg(message: _130.RequestQuery): _130.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _130.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestBeginBlock;
            fromPartial(object: Partial<_130.RequestBeginBlock>): _130.RequestBeginBlock;
            fromAmino(object: _130.RequestBeginBlockAmino): _130.RequestBeginBlock;
            toAmino(message: _130.RequestBeginBlock): _130.RequestBeginBlockAmino;
            fromAminoMsg(object: _130.RequestBeginBlockAminoMsg): _130.RequestBeginBlock;
            fromProtoMsg(message: _130.RequestBeginBlockProtoMsg): _130.RequestBeginBlock;
            toProto(message: _130.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _130.RequestBeginBlock): _130.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _130.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestCheckTx;
            fromPartial(object: Partial<_130.RequestCheckTx>): _130.RequestCheckTx;
            fromAmino(object: _130.RequestCheckTxAmino): _130.RequestCheckTx;
            toAmino(message: _130.RequestCheckTx): _130.RequestCheckTxAmino;
            fromAminoMsg(object: _130.RequestCheckTxAminoMsg): _130.RequestCheckTx;
            fromProtoMsg(message: _130.RequestCheckTxProtoMsg): _130.RequestCheckTx;
            toProto(message: _130.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _130.RequestCheckTx): _130.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _130.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestDeliverTx;
            fromPartial(object: Partial<_130.RequestDeliverTx>): _130.RequestDeliverTx;
            fromAmino(object: _130.RequestDeliverTxAmino): _130.RequestDeliverTx;
            toAmino(message: _130.RequestDeliverTx): _130.RequestDeliverTxAmino;
            fromAminoMsg(object: _130.RequestDeliverTxAminoMsg): _130.RequestDeliverTx;
            fromProtoMsg(message: _130.RequestDeliverTxProtoMsg): _130.RequestDeliverTx;
            toProto(message: _130.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _130.RequestDeliverTx): _130.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _130.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestEndBlock;
            fromPartial(object: Partial<_130.RequestEndBlock>): _130.RequestEndBlock;
            fromAmino(object: _130.RequestEndBlockAmino): _130.RequestEndBlock;
            toAmino(message: _130.RequestEndBlock): _130.RequestEndBlockAmino;
            fromAminoMsg(object: _130.RequestEndBlockAminoMsg): _130.RequestEndBlock;
            fromProtoMsg(message: _130.RequestEndBlockProtoMsg): _130.RequestEndBlock;
            toProto(message: _130.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _130.RequestEndBlock): _130.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _130.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _130.RequestCommit;
            fromPartial(_: Partial<_130.RequestCommit>): _130.RequestCommit;
            fromAmino(_: _130.RequestCommitAmino): _130.RequestCommit;
            toAmino(_: _130.RequestCommit): _130.RequestCommitAmino;
            fromAminoMsg(object: _130.RequestCommitAminoMsg): _130.RequestCommit;
            fromProtoMsg(message: _130.RequestCommitProtoMsg): _130.RequestCommit;
            toProto(message: _130.RequestCommit): Uint8Array;
            toProtoMsg(message: _130.RequestCommit): _130.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _130.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _130.RequestListSnapshots;
            fromPartial(_: Partial<_130.RequestListSnapshots>): _130.RequestListSnapshots;
            fromAmino(_: _130.RequestListSnapshotsAmino): _130.RequestListSnapshots;
            toAmino(_: _130.RequestListSnapshots): _130.RequestListSnapshotsAmino;
            fromAminoMsg(object: _130.RequestListSnapshotsAminoMsg): _130.RequestListSnapshots;
            fromProtoMsg(message: _130.RequestListSnapshotsProtoMsg): _130.RequestListSnapshots;
            toProto(message: _130.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _130.RequestListSnapshots): _130.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _130.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestOfferSnapshot;
            fromPartial(object: Partial<_130.RequestOfferSnapshot>): _130.RequestOfferSnapshot;
            fromAmino(object: _130.RequestOfferSnapshotAmino): _130.RequestOfferSnapshot;
            toAmino(message: _130.RequestOfferSnapshot): _130.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _130.RequestOfferSnapshotAminoMsg): _130.RequestOfferSnapshot;
            fromProtoMsg(message: _130.RequestOfferSnapshotProtoMsg): _130.RequestOfferSnapshot;
            toProto(message: _130.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _130.RequestOfferSnapshot): _130.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _130.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_130.RequestLoadSnapshotChunk>): _130.RequestLoadSnapshotChunk;
            fromAmino(object: _130.RequestLoadSnapshotChunkAmino): _130.RequestLoadSnapshotChunk;
            toAmino(message: _130.RequestLoadSnapshotChunk): _130.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _130.RequestLoadSnapshotChunkAminoMsg): _130.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _130.RequestLoadSnapshotChunkProtoMsg): _130.RequestLoadSnapshotChunk;
            toProto(message: _130.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _130.RequestLoadSnapshotChunk): _130.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _130.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_130.RequestApplySnapshotChunk>): _130.RequestApplySnapshotChunk;
            fromAmino(object: _130.RequestApplySnapshotChunkAmino): _130.RequestApplySnapshotChunk;
            toAmino(message: _130.RequestApplySnapshotChunk): _130.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _130.RequestApplySnapshotChunkAminoMsg): _130.RequestApplySnapshotChunk;
            fromProtoMsg(message: _130.RequestApplySnapshotChunkProtoMsg): _130.RequestApplySnapshotChunk;
            toProto(message: _130.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _130.RequestApplySnapshotChunk): _130.RequestApplySnapshotChunkProtoMsg;
        };
        RequestPrepareProposal: {
            typeUrl: string;
            encode(message: _130.RequestPrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestPrepareProposal;
            fromPartial(object: Partial<_130.RequestPrepareProposal>): _130.RequestPrepareProposal;
            fromAmino(object: _130.RequestPrepareProposalAmino): _130.RequestPrepareProposal;
            toAmino(message: _130.RequestPrepareProposal): _130.RequestPrepareProposalAmino;
            fromAminoMsg(object: _130.RequestPrepareProposalAminoMsg): _130.RequestPrepareProposal;
            fromProtoMsg(message: _130.RequestPrepareProposalProtoMsg): _130.RequestPrepareProposal;
            toProto(message: _130.RequestPrepareProposal): Uint8Array;
            toProtoMsg(message: _130.RequestPrepareProposal): _130.RequestPrepareProposalProtoMsg;
        };
        RequestProcessProposal: {
            typeUrl: string;
            encode(message: _130.RequestProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.RequestProcessProposal;
            fromPartial(object: Partial<_130.RequestProcessProposal>): _130.RequestProcessProposal;
            fromAmino(object: _130.RequestProcessProposalAmino): _130.RequestProcessProposal;
            toAmino(message: _130.RequestProcessProposal): _130.RequestProcessProposalAmino;
            fromAminoMsg(object: _130.RequestProcessProposalAminoMsg): _130.RequestProcessProposal;
            fromProtoMsg(message: _130.RequestProcessProposalProtoMsg): _130.RequestProcessProposal;
            toProto(message: _130.RequestProcessProposal): Uint8Array;
            toProtoMsg(message: _130.RequestProcessProposal): _130.RequestProcessProposalProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _130.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.Response;
            fromPartial(object: Partial<_130.Response>): _130.Response;
            fromAmino(object: _130.ResponseAmino): _130.Response;
            toAmino(message: _130.Response): _130.ResponseAmino;
            fromAminoMsg(object: _130.ResponseAminoMsg): _130.Response;
            fromProtoMsg(message: _130.ResponseProtoMsg): _130.Response;
            toProto(message: _130.Response): Uint8Array;
            toProtoMsg(message: _130.Response): _130.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _130.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseException;
            fromPartial(object: Partial<_130.ResponseException>): _130.ResponseException;
            fromAmino(object: _130.ResponseExceptionAmino): _130.ResponseException;
            toAmino(message: _130.ResponseException): _130.ResponseExceptionAmino;
            fromAminoMsg(object: _130.ResponseExceptionAminoMsg): _130.ResponseException;
            fromProtoMsg(message: _130.ResponseExceptionProtoMsg): _130.ResponseException;
            toProto(message: _130.ResponseException): Uint8Array;
            toProtoMsg(message: _130.ResponseException): _130.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _130.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseEcho;
            fromPartial(object: Partial<_130.ResponseEcho>): _130.ResponseEcho;
            fromAmino(object: _130.ResponseEchoAmino): _130.ResponseEcho;
            toAmino(message: _130.ResponseEcho): _130.ResponseEchoAmino;
            fromAminoMsg(object: _130.ResponseEchoAminoMsg): _130.ResponseEcho;
            fromProtoMsg(message: _130.ResponseEchoProtoMsg): _130.ResponseEcho;
            toProto(message: _130.ResponseEcho): Uint8Array;
            toProtoMsg(message: _130.ResponseEcho): _130.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _130.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _130.ResponseFlush;
            fromPartial(_: Partial<_130.ResponseFlush>): _130.ResponseFlush;
            fromAmino(_: _130.ResponseFlushAmino): _130.ResponseFlush;
            toAmino(_: _130.ResponseFlush): _130.ResponseFlushAmino;
            fromAminoMsg(object: _130.ResponseFlushAminoMsg): _130.ResponseFlush;
            fromProtoMsg(message: _130.ResponseFlushProtoMsg): _130.ResponseFlush;
            toProto(message: _130.ResponseFlush): Uint8Array;
            toProtoMsg(message: _130.ResponseFlush): _130.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _130.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseInfo;
            fromPartial(object: Partial<_130.ResponseInfo>): _130.ResponseInfo;
            fromAmino(object: _130.ResponseInfoAmino): _130.ResponseInfo;
            toAmino(message: _130.ResponseInfo): _130.ResponseInfoAmino;
            fromAminoMsg(object: _130.ResponseInfoAminoMsg): _130.ResponseInfo;
            fromProtoMsg(message: _130.ResponseInfoProtoMsg): _130.ResponseInfo;
            toProto(message: _130.ResponseInfo): Uint8Array;
            toProtoMsg(message: _130.ResponseInfo): _130.ResponseInfoProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _130.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseInitChain;
            fromPartial(object: Partial<_130.ResponseInitChain>): _130.ResponseInitChain;
            fromAmino(object: _130.ResponseInitChainAmino): _130.ResponseInitChain;
            toAmino(message: _130.ResponseInitChain): _130.ResponseInitChainAmino;
            fromAminoMsg(object: _130.ResponseInitChainAminoMsg): _130.ResponseInitChain;
            fromProtoMsg(message: _130.ResponseInitChainProtoMsg): _130.ResponseInitChain;
            toProto(message: _130.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _130.ResponseInitChain): _130.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _130.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseQuery;
            fromPartial(object: Partial<_130.ResponseQuery>): _130.ResponseQuery;
            fromAmino(object: _130.ResponseQueryAmino): _130.ResponseQuery;
            toAmino(message: _130.ResponseQuery): _130.ResponseQueryAmino;
            fromAminoMsg(object: _130.ResponseQueryAminoMsg): _130.ResponseQuery;
            fromProtoMsg(message: _130.ResponseQueryProtoMsg): _130.ResponseQuery;
            toProto(message: _130.ResponseQuery): Uint8Array;
            toProtoMsg(message: _130.ResponseQuery): _130.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _130.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseBeginBlock;
            fromPartial(object: Partial<_130.ResponseBeginBlock>): _130.ResponseBeginBlock;
            fromAmino(object: _130.ResponseBeginBlockAmino): _130.ResponseBeginBlock;
            toAmino(message: _130.ResponseBeginBlock): _130.ResponseBeginBlockAmino;
            fromAminoMsg(object: _130.ResponseBeginBlockAminoMsg): _130.ResponseBeginBlock;
            fromProtoMsg(message: _130.ResponseBeginBlockProtoMsg): _130.ResponseBeginBlock;
            toProto(message: _130.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _130.ResponseBeginBlock): _130.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _130.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseCheckTx;
            fromPartial(object: Partial<_130.ResponseCheckTx>): _130.ResponseCheckTx;
            fromAmino(object: _130.ResponseCheckTxAmino): _130.ResponseCheckTx;
            toAmino(message: _130.ResponseCheckTx): _130.ResponseCheckTxAmino;
            fromAminoMsg(object: _130.ResponseCheckTxAminoMsg): _130.ResponseCheckTx;
            fromProtoMsg(message: _130.ResponseCheckTxProtoMsg): _130.ResponseCheckTx;
            toProto(message: _130.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _130.ResponseCheckTx): _130.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _130.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseDeliverTx;
            fromPartial(object: Partial<_130.ResponseDeliverTx>): _130.ResponseDeliverTx;
            fromAmino(object: _130.ResponseDeliverTxAmino): _130.ResponseDeliverTx;
            toAmino(message: _130.ResponseDeliverTx): _130.ResponseDeliverTxAmino;
            fromAminoMsg(object: _130.ResponseDeliverTxAminoMsg): _130.ResponseDeliverTx;
            fromProtoMsg(message: _130.ResponseDeliverTxProtoMsg): _130.ResponseDeliverTx;
            toProto(message: _130.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _130.ResponseDeliverTx): _130.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _130.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseEndBlock;
            fromPartial(object: Partial<_130.ResponseEndBlock>): _130.ResponseEndBlock;
            fromAmino(object: _130.ResponseEndBlockAmino): _130.ResponseEndBlock;
            toAmino(message: _130.ResponseEndBlock): _130.ResponseEndBlockAmino;
            fromAminoMsg(object: _130.ResponseEndBlockAminoMsg): _130.ResponseEndBlock;
            fromProtoMsg(message: _130.ResponseEndBlockProtoMsg): _130.ResponseEndBlock;
            toProto(message: _130.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _130.ResponseEndBlock): _130.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _130.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseCommit;
            fromPartial(object: Partial<_130.ResponseCommit>): _130.ResponseCommit;
            fromAmino(object: _130.ResponseCommitAmino): _130.ResponseCommit;
            toAmino(message: _130.ResponseCommit): _130.ResponseCommitAmino;
            fromAminoMsg(object: _130.ResponseCommitAminoMsg): _130.ResponseCommit;
            fromProtoMsg(message: _130.ResponseCommitProtoMsg): _130.ResponseCommit;
            toProto(message: _130.ResponseCommit): Uint8Array;
            toProtoMsg(message: _130.ResponseCommit): _130.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _130.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseListSnapshots;
            fromPartial(object: Partial<_130.ResponseListSnapshots>): _130.ResponseListSnapshots;
            fromAmino(object: _130.ResponseListSnapshotsAmino): _130.ResponseListSnapshots;
            toAmino(message: _130.ResponseListSnapshots): _130.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _130.ResponseListSnapshotsAminoMsg): _130.ResponseListSnapshots;
            fromProtoMsg(message: _130.ResponseListSnapshotsProtoMsg): _130.ResponseListSnapshots;
            toProto(message: _130.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _130.ResponseListSnapshots): _130.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _130.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseOfferSnapshot;
            fromPartial(object: Partial<_130.ResponseOfferSnapshot>): _130.ResponseOfferSnapshot;
            fromAmino(object: _130.ResponseOfferSnapshotAmino): _130.ResponseOfferSnapshot;
            toAmino(message: _130.ResponseOfferSnapshot): _130.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _130.ResponseOfferSnapshotAminoMsg): _130.ResponseOfferSnapshot;
            fromProtoMsg(message: _130.ResponseOfferSnapshotProtoMsg): _130.ResponseOfferSnapshot;
            toProto(message: _130.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _130.ResponseOfferSnapshot): _130.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _130.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_130.ResponseLoadSnapshotChunk>): _130.ResponseLoadSnapshotChunk;
            fromAmino(object: _130.ResponseLoadSnapshotChunkAmino): _130.ResponseLoadSnapshotChunk;
            toAmino(message: _130.ResponseLoadSnapshotChunk): _130.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _130.ResponseLoadSnapshotChunkAminoMsg): _130.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _130.ResponseLoadSnapshotChunkProtoMsg): _130.ResponseLoadSnapshotChunk;
            toProto(message: _130.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _130.ResponseLoadSnapshotChunk): _130.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _130.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_130.ResponseApplySnapshotChunk>): _130.ResponseApplySnapshotChunk;
            fromAmino(object: _130.ResponseApplySnapshotChunkAmino): _130.ResponseApplySnapshotChunk;
            toAmino(message: _130.ResponseApplySnapshotChunk): _130.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _130.ResponseApplySnapshotChunkAminoMsg): _130.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _130.ResponseApplySnapshotChunkProtoMsg): _130.ResponseApplySnapshotChunk;
            toProto(message: _130.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _130.ResponseApplySnapshotChunk): _130.ResponseApplySnapshotChunkProtoMsg;
        };
        ResponsePrepareProposal: {
            typeUrl: string;
            encode(message: _130.ResponsePrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponsePrepareProposal;
            fromPartial(object: Partial<_130.ResponsePrepareProposal>): _130.ResponsePrepareProposal;
            fromAmino(object: _130.ResponsePrepareProposalAmino): _130.ResponsePrepareProposal;
            toAmino(message: _130.ResponsePrepareProposal): _130.ResponsePrepareProposalAmino;
            fromAminoMsg(object: _130.ResponsePrepareProposalAminoMsg): _130.ResponsePrepareProposal;
            fromProtoMsg(message: _130.ResponsePrepareProposalProtoMsg): _130.ResponsePrepareProposal;
            toProto(message: _130.ResponsePrepareProposal): Uint8Array;
            toProtoMsg(message: _130.ResponsePrepareProposal): _130.ResponsePrepareProposalProtoMsg;
        };
        ResponseProcessProposal: {
            typeUrl: string;
            encode(message: _130.ResponseProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ResponseProcessProposal;
            fromPartial(object: Partial<_130.ResponseProcessProposal>): _130.ResponseProcessProposal;
            fromAmino(object: _130.ResponseProcessProposalAmino): _130.ResponseProcessProposal;
            toAmino(message: _130.ResponseProcessProposal): _130.ResponseProcessProposalAmino;
            fromAminoMsg(object: _130.ResponseProcessProposalAminoMsg): _130.ResponseProcessProposal;
            fromProtoMsg(message: _130.ResponseProcessProposalProtoMsg): _130.ResponseProcessProposal;
            toProto(message: _130.ResponseProcessProposal): Uint8Array;
            toProtoMsg(message: _130.ResponseProcessProposal): _130.ResponseProcessProposalProtoMsg;
        };
        CommitInfo: {
            typeUrl: string;
            encode(message: _130.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.CommitInfo;
            fromPartial(object: Partial<_130.CommitInfo>): _130.CommitInfo;
            fromAmino(object: _130.CommitInfoAmino): _130.CommitInfo;
            toAmino(message: _130.CommitInfo): _130.CommitInfoAmino;
            fromAminoMsg(object: _130.CommitInfoAminoMsg): _130.CommitInfo;
            fromProtoMsg(message: _130.CommitInfoProtoMsg): _130.CommitInfo;
            toProto(message: _130.CommitInfo): Uint8Array;
            toProtoMsg(message: _130.CommitInfo): _130.CommitInfoProtoMsg;
        };
        ExtendedCommitInfo: {
            typeUrl: string;
            encode(message: _130.ExtendedCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ExtendedCommitInfo;
            fromPartial(object: Partial<_130.ExtendedCommitInfo>): _130.ExtendedCommitInfo;
            fromAmino(object: _130.ExtendedCommitInfoAmino): _130.ExtendedCommitInfo;
            toAmino(message: _130.ExtendedCommitInfo): _130.ExtendedCommitInfoAmino;
            fromAminoMsg(object: _130.ExtendedCommitInfoAminoMsg): _130.ExtendedCommitInfo;
            fromProtoMsg(message: _130.ExtendedCommitInfoProtoMsg): _130.ExtendedCommitInfo;
            toProto(message: _130.ExtendedCommitInfo): Uint8Array;
            toProtoMsg(message: _130.ExtendedCommitInfo): _130.ExtendedCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _130.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.Event;
            fromPartial(object: Partial<_130.Event>): _130.Event;
            fromAmino(object: _130.EventAmino): _130.Event;
            toAmino(message: _130.Event): _130.EventAmino;
            fromAminoMsg(object: _130.EventAminoMsg): _130.Event;
            fromProtoMsg(message: _130.EventProtoMsg): _130.Event;
            toProto(message: _130.Event): Uint8Array;
            toProtoMsg(message: _130.Event): _130.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _130.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.EventAttribute;
            fromPartial(object: Partial<_130.EventAttribute>): _130.EventAttribute;
            fromAmino(object: _130.EventAttributeAmino): _130.EventAttribute;
            toAmino(message: _130.EventAttribute): _130.EventAttributeAmino;
            fromAminoMsg(object: _130.EventAttributeAminoMsg): _130.EventAttribute;
            fromProtoMsg(message: _130.EventAttributeProtoMsg): _130.EventAttribute;
            toProto(message: _130.EventAttribute): Uint8Array;
            toProtoMsg(message: _130.EventAttribute): _130.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _130.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.TxResult;
            fromPartial(object: Partial<_130.TxResult>): _130.TxResult;
            fromAmino(object: _130.TxResultAmino): _130.TxResult;
            toAmino(message: _130.TxResult): _130.TxResultAmino;
            fromAminoMsg(object: _130.TxResultAminoMsg): _130.TxResult;
            fromProtoMsg(message: _130.TxResultProtoMsg): _130.TxResult;
            toProto(message: _130.TxResult): Uint8Array;
            toProtoMsg(message: _130.TxResult): _130.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _130.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.Validator;
            fromPartial(object: Partial<_130.Validator>): _130.Validator;
            fromAmino(object: _130.ValidatorAmino): _130.Validator;
            toAmino(message: _130.Validator): _130.ValidatorAmino;
            fromAminoMsg(object: _130.ValidatorAminoMsg): _130.Validator;
            fromProtoMsg(message: _130.ValidatorProtoMsg): _130.Validator;
            toProto(message: _130.Validator): Uint8Array;
            toProtoMsg(message: _130.Validator): _130.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _130.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ValidatorUpdate;
            fromPartial(object: Partial<_130.ValidatorUpdate>): _130.ValidatorUpdate;
            fromAmino(object: _130.ValidatorUpdateAmino): _130.ValidatorUpdate;
            toAmino(message: _130.ValidatorUpdate): _130.ValidatorUpdateAmino;
            fromAminoMsg(object: _130.ValidatorUpdateAminoMsg): _130.ValidatorUpdate;
            fromProtoMsg(message: _130.ValidatorUpdateProtoMsg): _130.ValidatorUpdate;
            toProto(message: _130.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _130.ValidatorUpdate): _130.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _130.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.VoteInfo;
            fromPartial(object: Partial<_130.VoteInfo>): _130.VoteInfo;
            fromAmino(object: _130.VoteInfoAmino): _130.VoteInfo;
            toAmino(message: _130.VoteInfo): _130.VoteInfoAmino;
            fromAminoMsg(object: _130.VoteInfoAminoMsg): _130.VoteInfo;
            fromProtoMsg(message: _130.VoteInfoProtoMsg): _130.VoteInfo;
            toProto(message: _130.VoteInfo): Uint8Array;
            toProtoMsg(message: _130.VoteInfo): _130.VoteInfoProtoMsg;
        };
        ExtendedVoteInfo: {
            typeUrl: string;
            encode(message: _130.ExtendedVoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.ExtendedVoteInfo;
            fromPartial(object: Partial<_130.ExtendedVoteInfo>): _130.ExtendedVoteInfo;
            fromAmino(object: _130.ExtendedVoteInfoAmino): _130.ExtendedVoteInfo;
            toAmino(message: _130.ExtendedVoteInfo): _130.ExtendedVoteInfoAmino;
            fromAminoMsg(object: _130.ExtendedVoteInfoAminoMsg): _130.ExtendedVoteInfo;
            fromProtoMsg(message: _130.ExtendedVoteInfoProtoMsg): _130.ExtendedVoteInfo;
            toProto(message: _130.ExtendedVoteInfo): Uint8Array;
            toProtoMsg(message: _130.ExtendedVoteInfo): _130.ExtendedVoteInfoProtoMsg;
        };
        Misbehavior: {
            typeUrl: string;
            encode(message: _130.Misbehavior, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.Misbehavior;
            fromPartial(object: Partial<_130.Misbehavior>): _130.Misbehavior;
            fromAmino(object: _130.MisbehaviorAmino): _130.Misbehavior;
            toAmino(message: _130.Misbehavior): _130.MisbehaviorAmino;
            fromAminoMsg(object: _130.MisbehaviorAminoMsg): _130.Misbehavior;
            fromProtoMsg(message: _130.MisbehaviorProtoMsg): _130.Misbehavior;
            toProto(message: _130.Misbehavior): Uint8Array;
            toProtoMsg(message: _130.Misbehavior): _130.MisbehaviorProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _130.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _130.Snapshot;
            fromPartial(object: Partial<_130.Snapshot>): _130.Snapshot;
            fromAmino(object: _130.SnapshotAmino): _130.Snapshot;
            toAmino(message: _130.Snapshot): _130.SnapshotAmino;
            fromAminoMsg(object: _130.SnapshotAminoMsg): _130.Snapshot;
            fromProtoMsg(message: _130.SnapshotProtoMsg): _130.Snapshot;
            toProto(message: _130.Snapshot): Uint8Array;
            toProtoMsg(message: _130.Snapshot): _130.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _132.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _132.Proof;
            fromPartial(object: Partial<_132.Proof>): _132.Proof;
            fromAmino(object: _132.ProofAmino): _132.Proof;
            toAmino(message: _132.Proof): _132.ProofAmino;
            fromAminoMsg(object: _132.ProofAminoMsg): _132.Proof;
            fromProtoMsg(message: _132.ProofProtoMsg): _132.Proof;
            toProto(message: _132.Proof): Uint8Array;
            toProtoMsg(message: _132.Proof): _132.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _132.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _132.ValueOp;
            fromPartial(object: Partial<_132.ValueOp>): _132.ValueOp;
            fromAmino(object: _132.ValueOpAmino): _132.ValueOp;
            toAmino(message: _132.ValueOp): _132.ValueOpAmino;
            fromAminoMsg(object: _132.ValueOpAminoMsg): _132.ValueOp;
            fromProtoMsg(message: _132.ValueOpProtoMsg): _132.ValueOp;
            toProto(message: _132.ValueOp): Uint8Array;
            toProtoMsg(message: _132.ValueOp): _132.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _132.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _132.DominoOp;
            fromPartial(object: Partial<_132.DominoOp>): _132.DominoOp;
            fromAmino(object: _132.DominoOpAmino): _132.DominoOp;
            toAmino(message: _132.DominoOp): _132.DominoOpAmino;
            fromAminoMsg(object: _132.DominoOpAminoMsg): _132.DominoOp;
            fromProtoMsg(message: _132.DominoOpProtoMsg): _132.DominoOp;
            toProto(message: _132.DominoOp): Uint8Array;
            toProtoMsg(message: _132.DominoOp): _132.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _132.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _132.ProofOp;
            fromPartial(object: Partial<_132.ProofOp>): _132.ProofOp;
            fromAmino(object: _132.ProofOpAmino): _132.ProofOp;
            toAmino(message: _132.ProofOp): _132.ProofOpAmino;
            fromAminoMsg(object: _132.ProofOpAminoMsg): _132.ProofOp;
            fromProtoMsg(message: _132.ProofOpProtoMsg): _132.ProofOp;
            toProto(message: _132.ProofOp): Uint8Array;
            toProtoMsg(message: _132.ProofOp): _132.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _132.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _132.ProofOps;
            fromPartial(object: Partial<_132.ProofOps>): _132.ProofOps;
            fromAmino(object: _132.ProofOpsAmino): _132.ProofOps;
            toAmino(message: _132.ProofOps): _132.ProofOpsAmino;
            fromAminoMsg(object: _132.ProofOpsAminoMsg): _132.ProofOps;
            fromProtoMsg(message: _132.ProofOpsProtoMsg): _132.ProofOps;
            toProto(message: _132.ProofOps): Uint8Array;
            toProtoMsg(message: _132.ProofOps): _132.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _131.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _131.PublicKey;
            fromPartial(object: Partial<_131.PublicKey>): _131.PublicKey;
            fromAmino(object: _131.PublicKeyAmino): _131.PublicKey;
            toAmino(message: _131.PublicKey): _131.PublicKeyAmino;
            fromAminoMsg(object: _131.PublicKeyAminoMsg): _131.PublicKey;
            fromProtoMsg(message: _131.PublicKeyProtoMsg): _131.PublicKey;
            toProto(message: _131.PublicKey): Uint8Array;
            toProtoMsg(message: _131.PublicKey): _131.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _133.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _133.BitArray;
                fromPartial(object: Partial<_133.BitArray>): _133.BitArray;
                fromAmino(object: _133.BitArrayAmino): _133.BitArray;
                toAmino(message: _133.BitArray): _133.BitArrayAmino;
                fromAminoMsg(object: _133.BitArrayAminoMsg): _133.BitArray;
                fromProtoMsg(message: _133.BitArrayProtoMsg): _133.BitArray;
                toProto(message: _133.BitArray): Uint8Array;
                toProtoMsg(message: _133.BitArray): _133.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _134.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _134.NetAddress;
            fromPartial(object: Partial<_134.NetAddress>): _134.NetAddress;
            fromAmino(object: _134.NetAddressAmino): _134.NetAddress;
            toAmino(message: _134.NetAddress): _134.NetAddressAmino;
            fromAminoMsg(object: _134.NetAddressAminoMsg): _134.NetAddress;
            fromProtoMsg(message: _134.NetAddressProtoMsg): _134.NetAddress;
            toProto(message: _134.NetAddress): Uint8Array;
            toProtoMsg(message: _134.NetAddress): _134.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _134.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _134.ProtocolVersion;
            fromPartial(object: Partial<_134.ProtocolVersion>): _134.ProtocolVersion;
            fromAmino(object: _134.ProtocolVersionAmino): _134.ProtocolVersion;
            toAmino(message: _134.ProtocolVersion): _134.ProtocolVersionAmino;
            fromAminoMsg(object: _134.ProtocolVersionAminoMsg): _134.ProtocolVersion;
            fromProtoMsg(message: _134.ProtocolVersionProtoMsg): _134.ProtocolVersion;
            toProto(message: _134.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _134.ProtocolVersion): _134.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _134.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _134.DefaultNodeInfo;
            fromPartial(object: Partial<_134.DefaultNodeInfo>): _134.DefaultNodeInfo;
            fromAmino(object: _134.DefaultNodeInfoAmino): _134.DefaultNodeInfo;
            toAmino(message: _134.DefaultNodeInfo): _134.DefaultNodeInfoAmino;
            fromAminoMsg(object: _134.DefaultNodeInfoAminoMsg): _134.DefaultNodeInfo;
            fromProtoMsg(message: _134.DefaultNodeInfoProtoMsg): _134.DefaultNodeInfo;
            toProto(message: _134.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _134.DefaultNodeInfo): _134.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _134.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _134.DefaultNodeInfoOther;
            fromPartial(object: Partial<_134.DefaultNodeInfoOther>): _134.DefaultNodeInfoOther;
            fromAmino(object: _134.DefaultNodeInfoOtherAmino): _134.DefaultNodeInfoOther;
            toAmino(message: _134.DefaultNodeInfoOther): _134.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _134.DefaultNodeInfoOtherAminoMsg): _134.DefaultNodeInfoOther;
            fromProtoMsg(message: _134.DefaultNodeInfoOtherProtoMsg): _134.DefaultNodeInfoOther;
            toProto(message: _134.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _134.DefaultNodeInfoOther): _134.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _139.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _139.ValidatorSet;
            fromPartial(object: Partial<_139.ValidatorSet>): _139.ValidatorSet;
            fromAmino(object: _139.ValidatorSetAmino): _139.ValidatorSet;
            toAmino(message: _139.ValidatorSet): _139.ValidatorSetAmino;
            fromAminoMsg(object: _139.ValidatorSetAminoMsg): _139.ValidatorSet;
            fromProtoMsg(message: _139.ValidatorSetProtoMsg): _139.ValidatorSet;
            toProto(message: _139.ValidatorSet): Uint8Array;
            toProtoMsg(message: _139.ValidatorSet): _139.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _139.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _139.Validator;
            fromPartial(object: Partial<_139.Validator>): _139.Validator;
            fromAmino(object: _139.ValidatorAmino): _139.Validator;
            toAmino(message: _139.Validator): _139.ValidatorAmino;
            fromAminoMsg(object: _139.ValidatorAminoMsg): _139.Validator;
            fromProtoMsg(message: _139.ValidatorProtoMsg): _139.Validator;
            toProto(message: _139.Validator): Uint8Array;
            toProtoMsg(message: _139.Validator): _139.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _139.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _139.SimpleValidator;
            fromPartial(object: Partial<_139.SimpleValidator>): _139.SimpleValidator;
            fromAmino(object: _139.SimpleValidatorAmino): _139.SimpleValidator;
            toAmino(message: _139.SimpleValidator): _139.SimpleValidatorAmino;
            fromAminoMsg(object: _139.SimpleValidatorAminoMsg): _139.SimpleValidator;
            fromProtoMsg(message: _139.SimpleValidatorProtoMsg): _139.SimpleValidator;
            toProto(message: _139.SimpleValidator): Uint8Array;
            toProtoMsg(message: _139.SimpleValidator): _139.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _138.BlockIDFlag;
        blockIDFlagToJSON(object: _138.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _138.SignedMsgType;
        signedMsgTypeToJSON(object: _138.SignedMsgType): string;
        BlockIDFlag: typeof _138.BlockIDFlag;
        BlockIDFlagSDKType: typeof _138.BlockIDFlag;
        BlockIDFlagAmino: typeof _138.BlockIDFlag;
        SignedMsgType: typeof _138.SignedMsgType;
        SignedMsgTypeSDKType: typeof _138.SignedMsgType;
        SignedMsgTypeAmino: typeof _138.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _138.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.PartSetHeader;
            fromPartial(object: Partial<_138.PartSetHeader>): _138.PartSetHeader;
            fromAmino(object: _138.PartSetHeaderAmino): _138.PartSetHeader;
            toAmino(message: _138.PartSetHeader): _138.PartSetHeaderAmino;
            fromAminoMsg(object: _138.PartSetHeaderAminoMsg): _138.PartSetHeader;
            fromProtoMsg(message: _138.PartSetHeaderProtoMsg): _138.PartSetHeader;
            toProto(message: _138.PartSetHeader): Uint8Array;
            toProtoMsg(message: _138.PartSetHeader): _138.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _138.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Part;
            fromPartial(object: Partial<_138.Part>): _138.Part;
            fromAmino(object: _138.PartAmino): _138.Part;
            toAmino(message: _138.Part): _138.PartAmino;
            fromAminoMsg(object: _138.PartAminoMsg): _138.Part;
            fromProtoMsg(message: _138.PartProtoMsg): _138.Part;
            toProto(message: _138.Part): Uint8Array;
            toProtoMsg(message: _138.Part): _138.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _138.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.BlockID;
            fromPartial(object: Partial<_138.BlockID>): _138.BlockID;
            fromAmino(object: _138.BlockIDAmino): _138.BlockID;
            toAmino(message: _138.BlockID): _138.BlockIDAmino;
            fromAminoMsg(object: _138.BlockIDAminoMsg): _138.BlockID;
            fromProtoMsg(message: _138.BlockIDProtoMsg): _138.BlockID;
            toProto(message: _138.BlockID): Uint8Array;
            toProtoMsg(message: _138.BlockID): _138.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _138.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Header;
            fromPartial(object: Partial<_138.Header>): _138.Header;
            fromAmino(object: _138.HeaderAmino): _138.Header;
            toAmino(message: _138.Header): _138.HeaderAmino;
            fromAminoMsg(object: _138.HeaderAminoMsg): _138.Header;
            fromProtoMsg(message: _138.HeaderProtoMsg): _138.Header;
            toProto(message: _138.Header): Uint8Array;
            toProtoMsg(message: _138.Header): _138.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _138.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Data;
            fromPartial(object: Partial<_138.Data>): _138.Data;
            fromAmino(object: _138.DataAmino): _138.Data;
            toAmino(message: _138.Data): _138.DataAmino;
            fromAminoMsg(object: _138.DataAminoMsg): _138.Data;
            fromProtoMsg(message: _138.DataProtoMsg): _138.Data;
            toProto(message: _138.Data): Uint8Array;
            toProtoMsg(message: _138.Data): _138.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _138.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Vote;
            fromPartial(object: Partial<_138.Vote>): _138.Vote;
            fromAmino(object: _138.VoteAmino): _138.Vote;
            toAmino(message: _138.Vote): _138.VoteAmino;
            fromAminoMsg(object: _138.VoteAminoMsg): _138.Vote;
            fromProtoMsg(message: _138.VoteProtoMsg): _138.Vote;
            toProto(message: _138.Vote): Uint8Array;
            toProtoMsg(message: _138.Vote): _138.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _138.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Commit;
            fromPartial(object: Partial<_138.Commit>): _138.Commit;
            fromAmino(object: _138.CommitAmino): _138.Commit;
            toAmino(message: _138.Commit): _138.CommitAmino;
            fromAminoMsg(object: _138.CommitAminoMsg): _138.Commit;
            fromProtoMsg(message: _138.CommitProtoMsg): _138.Commit;
            toProto(message: _138.Commit): Uint8Array;
            toProtoMsg(message: _138.Commit): _138.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _138.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.CommitSig;
            fromPartial(object: Partial<_138.CommitSig>): _138.CommitSig;
            fromAmino(object: _138.CommitSigAmino): _138.CommitSig;
            toAmino(message: _138.CommitSig): _138.CommitSigAmino;
            fromAminoMsg(object: _138.CommitSigAminoMsg): _138.CommitSig;
            fromProtoMsg(message: _138.CommitSigProtoMsg): _138.CommitSig;
            toProto(message: _138.CommitSig): Uint8Array;
            toProtoMsg(message: _138.CommitSig): _138.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _138.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.Proposal;
            fromPartial(object: Partial<_138.Proposal>): _138.Proposal;
            fromAmino(object: _138.ProposalAmino): _138.Proposal;
            toAmino(message: _138.Proposal): _138.ProposalAmino;
            fromAminoMsg(object: _138.ProposalAminoMsg): _138.Proposal;
            fromProtoMsg(message: _138.ProposalProtoMsg): _138.Proposal;
            toProto(message: _138.Proposal): Uint8Array;
            toProtoMsg(message: _138.Proposal): _138.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _138.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.SignedHeader;
            fromPartial(object: Partial<_138.SignedHeader>): _138.SignedHeader;
            fromAmino(object: _138.SignedHeaderAmino): _138.SignedHeader;
            toAmino(message: _138.SignedHeader): _138.SignedHeaderAmino;
            fromAminoMsg(object: _138.SignedHeaderAminoMsg): _138.SignedHeader;
            fromProtoMsg(message: _138.SignedHeaderProtoMsg): _138.SignedHeader;
            toProto(message: _138.SignedHeader): Uint8Array;
            toProtoMsg(message: _138.SignedHeader): _138.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _138.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.LightBlock;
            fromPartial(object: Partial<_138.LightBlock>): _138.LightBlock;
            fromAmino(object: _138.LightBlockAmino): _138.LightBlock;
            toAmino(message: _138.LightBlock): _138.LightBlockAmino;
            fromAminoMsg(object: _138.LightBlockAminoMsg): _138.LightBlock;
            fromProtoMsg(message: _138.LightBlockProtoMsg): _138.LightBlock;
            toProto(message: _138.LightBlock): Uint8Array;
            toProtoMsg(message: _138.LightBlock): _138.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _138.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.BlockMeta;
            fromPartial(object: Partial<_138.BlockMeta>): _138.BlockMeta;
            fromAmino(object: _138.BlockMetaAmino): _138.BlockMeta;
            toAmino(message: _138.BlockMeta): _138.BlockMetaAmino;
            fromAminoMsg(object: _138.BlockMetaAminoMsg): _138.BlockMeta;
            fromProtoMsg(message: _138.BlockMetaProtoMsg): _138.BlockMeta;
            toProto(message: _138.BlockMeta): Uint8Array;
            toProtoMsg(message: _138.BlockMeta): _138.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _138.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _138.TxProof;
            fromPartial(object: Partial<_138.TxProof>): _138.TxProof;
            fromAmino(object: _138.TxProofAmino): _138.TxProof;
            toAmino(message: _138.TxProof): _138.TxProofAmino;
            fromAminoMsg(object: _138.TxProofAminoMsg): _138.TxProof;
            fromProtoMsg(message: _138.TxProofProtoMsg): _138.TxProof;
            toProto(message: _138.TxProof): Uint8Array;
            toProtoMsg(message: _138.TxProof): _138.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _137.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.ConsensusParams;
            fromPartial(object: Partial<_137.ConsensusParams>): _137.ConsensusParams;
            fromAmino(object: _137.ConsensusParamsAmino): _137.ConsensusParams;
            toAmino(message: _137.ConsensusParams): _137.ConsensusParamsAmino;
            fromAminoMsg(object: _137.ConsensusParamsAminoMsg): _137.ConsensusParams;
            fromProtoMsg(message: _137.ConsensusParamsProtoMsg): _137.ConsensusParams;
            toProto(message: _137.ConsensusParams): Uint8Array;
            toProtoMsg(message: _137.ConsensusParams): _137.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _137.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.BlockParams;
            fromPartial(object: Partial<_137.BlockParams>): _137.BlockParams;
            fromAmino(object: _137.BlockParamsAmino): _137.BlockParams;
            toAmino(message: _137.BlockParams): _137.BlockParamsAmino;
            fromAminoMsg(object: _137.BlockParamsAminoMsg): _137.BlockParams;
            fromProtoMsg(message: _137.BlockParamsProtoMsg): _137.BlockParams;
            toProto(message: _137.BlockParams): Uint8Array;
            toProtoMsg(message: _137.BlockParams): _137.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _137.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.EvidenceParams;
            fromPartial(object: Partial<_137.EvidenceParams>): _137.EvidenceParams;
            fromAmino(object: _137.EvidenceParamsAmino): _137.EvidenceParams;
            toAmino(message: _137.EvidenceParams): _137.EvidenceParamsAmino;
            fromAminoMsg(object: _137.EvidenceParamsAminoMsg): _137.EvidenceParams;
            fromProtoMsg(message: _137.EvidenceParamsProtoMsg): _137.EvidenceParams;
            toProto(message: _137.EvidenceParams): Uint8Array;
            toProtoMsg(message: _137.EvidenceParams): _137.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _137.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.ValidatorParams;
            fromPartial(object: Partial<_137.ValidatorParams>): _137.ValidatorParams;
            fromAmino(object: _137.ValidatorParamsAmino): _137.ValidatorParams;
            toAmino(message: _137.ValidatorParams): _137.ValidatorParamsAmino;
            fromAminoMsg(object: _137.ValidatorParamsAminoMsg): _137.ValidatorParams;
            fromProtoMsg(message: _137.ValidatorParamsProtoMsg): _137.ValidatorParams;
            toProto(message: _137.ValidatorParams): Uint8Array;
            toProtoMsg(message: _137.ValidatorParams): _137.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _137.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.VersionParams;
            fromPartial(object: Partial<_137.VersionParams>): _137.VersionParams;
            fromAmino(object: _137.VersionParamsAmino): _137.VersionParams;
            toAmino(message: _137.VersionParams): _137.VersionParamsAmino;
            fromAminoMsg(object: _137.VersionParamsAminoMsg): _137.VersionParams;
            fromProtoMsg(message: _137.VersionParamsProtoMsg): _137.VersionParams;
            toProto(message: _137.VersionParams): Uint8Array;
            toProtoMsg(message: _137.VersionParams): _137.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _137.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.HashedParams;
            fromPartial(object: Partial<_137.HashedParams>): _137.HashedParams;
            fromAmino(object: _137.HashedParamsAmino): _137.HashedParams;
            toAmino(message: _137.HashedParams): _137.HashedParamsAmino;
            fromAminoMsg(object: _137.HashedParamsAminoMsg): _137.HashedParams;
            fromProtoMsg(message: _137.HashedParamsProtoMsg): _137.HashedParams;
            toProto(message: _137.HashedParams): Uint8Array;
            toProtoMsg(message: _137.HashedParams): _137.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _136.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _136.Evidence;
            fromPartial(object: Partial<_136.Evidence>): _136.Evidence;
            fromAmino(object: _136.EvidenceAmino): _136.Evidence;
            toAmino(message: _136.Evidence): _136.EvidenceAmino;
            fromAminoMsg(object: _136.EvidenceAminoMsg): _136.Evidence;
            fromProtoMsg(message: _136.EvidenceProtoMsg): _136.Evidence;
            toProto(message: _136.Evidence): Uint8Array;
            toProtoMsg(message: _136.Evidence): _136.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _136.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _136.DuplicateVoteEvidence;
            fromPartial(object: Partial<_136.DuplicateVoteEvidence>): _136.DuplicateVoteEvidence;
            fromAmino(object: _136.DuplicateVoteEvidenceAmino): _136.DuplicateVoteEvidence;
            toAmino(message: _136.DuplicateVoteEvidence): _136.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _136.DuplicateVoteEvidenceAminoMsg): _136.DuplicateVoteEvidence;
            fromProtoMsg(message: _136.DuplicateVoteEvidenceProtoMsg): _136.DuplicateVoteEvidence;
            toProto(message: _136.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _136.DuplicateVoteEvidence): _136.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _136.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _136.LightClientAttackEvidence;
            fromPartial(object: Partial<_136.LightClientAttackEvidence>): _136.LightClientAttackEvidence;
            fromAmino(object: _136.LightClientAttackEvidenceAmino): _136.LightClientAttackEvidence;
            toAmino(message: _136.LightClientAttackEvidence): _136.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _136.LightClientAttackEvidenceAminoMsg): _136.LightClientAttackEvidence;
            fromProtoMsg(message: _136.LightClientAttackEvidenceProtoMsg): _136.LightClientAttackEvidence;
            toProto(message: _136.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _136.LightClientAttackEvidence): _136.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _136.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _136.EvidenceList;
            fromPartial(object: Partial<_136.EvidenceList>): _136.EvidenceList;
            fromAmino(object: _136.EvidenceListAmino): _136.EvidenceList;
            toAmino(message: _136.EvidenceList): _136.EvidenceListAmino;
            fromAminoMsg(object: _136.EvidenceListAminoMsg): _136.EvidenceList;
            fromProtoMsg(message: _136.EvidenceListProtoMsg): _136.EvidenceList;
            toProto(message: _136.EvidenceList): Uint8Array;
            toProtoMsg(message: _136.EvidenceList): _136.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _135.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.Block;
            fromPartial(object: Partial<_135.Block>): _135.Block;
            fromAmino(object: _135.BlockAmino): _135.Block;
            toAmino(message: _135.Block): _135.BlockAmino;
            fromAminoMsg(object: _135.BlockAminoMsg): _135.Block;
            fromProtoMsg(message: _135.BlockProtoMsg): _135.Block;
            toProto(message: _135.Block): Uint8Array;
            toProtoMsg(message: _135.Block): _135.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _140.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.App;
            fromPartial(object: Partial<_140.App>): _140.App;
            fromAmino(object: _140.AppAmino): _140.App;
            toAmino(message: _140.App): _140.AppAmino;
            fromAminoMsg(object: _140.AppAminoMsg): _140.App;
            fromProtoMsg(message: _140.AppProtoMsg): _140.App;
            toProto(message: _140.App): Uint8Array;
            toProtoMsg(message: _140.App): _140.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _140.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.Consensus;
            fromPartial(object: Partial<_140.Consensus>): _140.Consensus;
            fromAmino(object: _140.ConsensusAmino): _140.Consensus;
            toAmino(message: _140.Consensus): _140.ConsensusAmino;
            fromAminoMsg(object: _140.ConsensusAminoMsg): _140.Consensus;
            fromProtoMsg(message: _140.ConsensusProtoMsg): _140.Consensus;
            toProto(message: _140.Consensus): Uint8Array;
            toProtoMsg(message: _140.Consensus): _140.ConsensusProtoMsg;
        };
    };
}
