import * as _112 from "./abci/types";
import * as _113 from "./crypto/keys";
import * as _114 from "./crypto/proof";
import * as _115 from "./libs/bits/types";
import * as _116 from "./p2p/types";
import * as _117 from "./types/block";
import * as _118 from "./types/evidence";
import * as _119 from "./types/params";
import * as _120 from "./types/types";
import * as _121 from "./types/validator";
import * as _122 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _112.CheckTxType;
        checkTxTypeToJSON(object: _112.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _112.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _112.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _112.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _112.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _112.EvidenceType;
        evidenceTypeToJSON(object: _112.EvidenceType): string;
        CheckTxType: typeof _112.CheckTxType;
        CheckTxTypeSDKType: typeof _112.CheckTxType;
        CheckTxTypeAmino: typeof _112.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _112.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _112.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _112.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _112.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _112.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _112.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _112.EvidenceType;
        EvidenceTypeSDKType: typeof _112.EvidenceType;
        EvidenceTypeAmino: typeof _112.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _112.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.Request;
            fromPartial(object: Partial<_112.Request>): _112.Request;
            fromAmino(object: _112.RequestAmino): _112.Request;
            toAmino(message: _112.Request): _112.RequestAmino;
            fromAminoMsg(object: _112.RequestAminoMsg): _112.Request;
            fromProtoMsg(message: _112.RequestProtoMsg): _112.Request;
            toProto(message: _112.Request): Uint8Array;
            toProtoMsg(message: _112.Request): _112.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _112.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestEcho;
            fromPartial(object: Partial<_112.RequestEcho>): _112.RequestEcho;
            fromAmino(object: _112.RequestEchoAmino): _112.RequestEcho;
            toAmino(message: _112.RequestEcho): _112.RequestEchoAmino;
            fromAminoMsg(object: _112.RequestEchoAminoMsg): _112.RequestEcho;
            fromProtoMsg(message: _112.RequestEchoProtoMsg): _112.RequestEcho;
            toProto(message: _112.RequestEcho): Uint8Array;
            toProtoMsg(message: _112.RequestEcho): _112.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _112.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _112.RequestFlush;
            fromPartial(_: Partial<_112.RequestFlush>): _112.RequestFlush;
            fromAmino(_: _112.RequestFlushAmino): _112.RequestFlush;
            toAmino(_: _112.RequestFlush): _112.RequestFlushAmino;
            fromAminoMsg(object: _112.RequestFlushAminoMsg): _112.RequestFlush;
            fromProtoMsg(message: _112.RequestFlushProtoMsg): _112.RequestFlush;
            toProto(message: _112.RequestFlush): Uint8Array;
            toProtoMsg(message: _112.RequestFlush): _112.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _112.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestInfo;
            fromPartial(object: Partial<_112.RequestInfo>): _112.RequestInfo;
            fromAmino(object: _112.RequestInfoAmino): _112.RequestInfo;
            toAmino(message: _112.RequestInfo): _112.RequestInfoAmino;
            fromAminoMsg(object: _112.RequestInfoAminoMsg): _112.RequestInfo;
            fromProtoMsg(message: _112.RequestInfoProtoMsg): _112.RequestInfo;
            toProto(message: _112.RequestInfo): Uint8Array;
            toProtoMsg(message: _112.RequestInfo): _112.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _112.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestSetOption;
            fromPartial(object: Partial<_112.RequestSetOption>): _112.RequestSetOption;
            fromAmino(object: _112.RequestSetOptionAmino): _112.RequestSetOption;
            toAmino(message: _112.RequestSetOption): _112.RequestSetOptionAmino;
            fromAminoMsg(object: _112.RequestSetOptionAminoMsg): _112.RequestSetOption;
            fromProtoMsg(message: _112.RequestSetOptionProtoMsg): _112.RequestSetOption;
            toProto(message: _112.RequestSetOption): Uint8Array;
            toProtoMsg(message: _112.RequestSetOption): _112.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _112.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestInitChain;
            fromPartial(object: Partial<_112.RequestInitChain>): _112.RequestInitChain;
            fromAmino(object: _112.RequestInitChainAmino): _112.RequestInitChain;
            toAmino(message: _112.RequestInitChain): _112.RequestInitChainAmino;
            fromAminoMsg(object: _112.RequestInitChainAminoMsg): _112.RequestInitChain;
            fromProtoMsg(message: _112.RequestInitChainProtoMsg): _112.RequestInitChain;
            toProto(message: _112.RequestInitChain): Uint8Array;
            toProtoMsg(message: _112.RequestInitChain): _112.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _112.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestQuery;
            fromPartial(object: Partial<_112.RequestQuery>): _112.RequestQuery;
            fromAmino(object: _112.RequestQueryAmino): _112.RequestQuery;
            toAmino(message: _112.RequestQuery): _112.RequestQueryAmino;
            fromAminoMsg(object: _112.RequestQueryAminoMsg): _112.RequestQuery;
            fromProtoMsg(message: _112.RequestQueryProtoMsg): _112.RequestQuery;
            toProto(message: _112.RequestQuery): Uint8Array;
            toProtoMsg(message: _112.RequestQuery): _112.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _112.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestBeginBlock;
            fromPartial(object: Partial<_112.RequestBeginBlock>): _112.RequestBeginBlock;
            fromAmino(object: _112.RequestBeginBlockAmino): _112.RequestBeginBlock;
            toAmino(message: _112.RequestBeginBlock): _112.RequestBeginBlockAmino;
            fromAminoMsg(object: _112.RequestBeginBlockAminoMsg): _112.RequestBeginBlock;
            fromProtoMsg(message: _112.RequestBeginBlockProtoMsg): _112.RequestBeginBlock;
            toProto(message: _112.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _112.RequestBeginBlock): _112.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _112.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestCheckTx;
            fromPartial(object: Partial<_112.RequestCheckTx>): _112.RequestCheckTx;
            fromAmino(object: _112.RequestCheckTxAmino): _112.RequestCheckTx;
            toAmino(message: _112.RequestCheckTx): _112.RequestCheckTxAmino;
            fromAminoMsg(object: _112.RequestCheckTxAminoMsg): _112.RequestCheckTx;
            fromProtoMsg(message: _112.RequestCheckTxProtoMsg): _112.RequestCheckTx;
            toProto(message: _112.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _112.RequestCheckTx): _112.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _112.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestDeliverTx;
            fromPartial(object: Partial<_112.RequestDeliverTx>): _112.RequestDeliverTx;
            fromAmino(object: _112.RequestDeliverTxAmino): _112.RequestDeliverTx;
            toAmino(message: _112.RequestDeliverTx): _112.RequestDeliverTxAmino;
            fromAminoMsg(object: _112.RequestDeliverTxAminoMsg): _112.RequestDeliverTx;
            fromProtoMsg(message: _112.RequestDeliverTxProtoMsg): _112.RequestDeliverTx;
            toProto(message: _112.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _112.RequestDeliverTx): _112.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _112.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestEndBlock;
            fromPartial(object: Partial<_112.RequestEndBlock>): _112.RequestEndBlock;
            fromAmino(object: _112.RequestEndBlockAmino): _112.RequestEndBlock;
            toAmino(message: _112.RequestEndBlock): _112.RequestEndBlockAmino;
            fromAminoMsg(object: _112.RequestEndBlockAminoMsg): _112.RequestEndBlock;
            fromProtoMsg(message: _112.RequestEndBlockProtoMsg): _112.RequestEndBlock;
            toProto(message: _112.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _112.RequestEndBlock): _112.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _112.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _112.RequestCommit;
            fromPartial(_: Partial<_112.RequestCommit>): _112.RequestCommit;
            fromAmino(_: _112.RequestCommitAmino): _112.RequestCommit;
            toAmino(_: _112.RequestCommit): _112.RequestCommitAmino;
            fromAminoMsg(object: _112.RequestCommitAminoMsg): _112.RequestCommit;
            fromProtoMsg(message: _112.RequestCommitProtoMsg): _112.RequestCommit;
            toProto(message: _112.RequestCommit): Uint8Array;
            toProtoMsg(message: _112.RequestCommit): _112.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _112.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _112.RequestListSnapshots;
            fromPartial(_: Partial<_112.RequestListSnapshots>): _112.RequestListSnapshots;
            fromAmino(_: _112.RequestListSnapshotsAmino): _112.RequestListSnapshots;
            toAmino(_: _112.RequestListSnapshots): _112.RequestListSnapshotsAmino;
            fromAminoMsg(object: _112.RequestListSnapshotsAminoMsg): _112.RequestListSnapshots;
            fromProtoMsg(message: _112.RequestListSnapshotsProtoMsg): _112.RequestListSnapshots;
            toProto(message: _112.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _112.RequestListSnapshots): _112.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _112.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestOfferSnapshot;
            fromPartial(object: Partial<_112.RequestOfferSnapshot>): _112.RequestOfferSnapshot;
            fromAmino(object: _112.RequestOfferSnapshotAmino): _112.RequestOfferSnapshot;
            toAmino(message: _112.RequestOfferSnapshot): _112.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _112.RequestOfferSnapshotAminoMsg): _112.RequestOfferSnapshot;
            fromProtoMsg(message: _112.RequestOfferSnapshotProtoMsg): _112.RequestOfferSnapshot;
            toProto(message: _112.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _112.RequestOfferSnapshot): _112.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _112.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_112.RequestLoadSnapshotChunk>): _112.RequestLoadSnapshotChunk;
            fromAmino(object: _112.RequestLoadSnapshotChunkAmino): _112.RequestLoadSnapshotChunk;
            toAmino(message: _112.RequestLoadSnapshotChunk): _112.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _112.RequestLoadSnapshotChunkAminoMsg): _112.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _112.RequestLoadSnapshotChunkProtoMsg): _112.RequestLoadSnapshotChunk;
            toProto(message: _112.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _112.RequestLoadSnapshotChunk): _112.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _112.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_112.RequestApplySnapshotChunk>): _112.RequestApplySnapshotChunk;
            fromAmino(object: _112.RequestApplySnapshotChunkAmino): _112.RequestApplySnapshotChunk;
            toAmino(message: _112.RequestApplySnapshotChunk): _112.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _112.RequestApplySnapshotChunkAminoMsg): _112.RequestApplySnapshotChunk;
            fromProtoMsg(message: _112.RequestApplySnapshotChunkProtoMsg): _112.RequestApplySnapshotChunk;
            toProto(message: _112.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _112.RequestApplySnapshotChunk): _112.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _112.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.Response;
            fromPartial(object: Partial<_112.Response>): _112.Response;
            fromAmino(object: _112.ResponseAmino): _112.Response;
            toAmino(message: _112.Response): _112.ResponseAmino;
            fromAminoMsg(object: _112.ResponseAminoMsg): _112.Response;
            fromProtoMsg(message: _112.ResponseProtoMsg): _112.Response;
            toProto(message: _112.Response): Uint8Array;
            toProtoMsg(message: _112.Response): _112.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _112.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseException;
            fromPartial(object: Partial<_112.ResponseException>): _112.ResponseException;
            fromAmino(object: _112.ResponseExceptionAmino): _112.ResponseException;
            toAmino(message: _112.ResponseException): _112.ResponseExceptionAmino;
            fromAminoMsg(object: _112.ResponseExceptionAminoMsg): _112.ResponseException;
            fromProtoMsg(message: _112.ResponseExceptionProtoMsg): _112.ResponseException;
            toProto(message: _112.ResponseException): Uint8Array;
            toProtoMsg(message: _112.ResponseException): _112.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _112.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseEcho;
            fromPartial(object: Partial<_112.ResponseEcho>): _112.ResponseEcho;
            fromAmino(object: _112.ResponseEchoAmino): _112.ResponseEcho;
            toAmino(message: _112.ResponseEcho): _112.ResponseEchoAmino;
            fromAminoMsg(object: _112.ResponseEchoAminoMsg): _112.ResponseEcho;
            fromProtoMsg(message: _112.ResponseEchoProtoMsg): _112.ResponseEcho;
            toProto(message: _112.ResponseEcho): Uint8Array;
            toProtoMsg(message: _112.ResponseEcho): _112.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _112.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _112.ResponseFlush;
            fromPartial(_: Partial<_112.ResponseFlush>): _112.ResponseFlush;
            fromAmino(_: _112.ResponseFlushAmino): _112.ResponseFlush;
            toAmino(_: _112.ResponseFlush): _112.ResponseFlushAmino;
            fromAminoMsg(object: _112.ResponseFlushAminoMsg): _112.ResponseFlush;
            fromProtoMsg(message: _112.ResponseFlushProtoMsg): _112.ResponseFlush;
            toProto(message: _112.ResponseFlush): Uint8Array;
            toProtoMsg(message: _112.ResponseFlush): _112.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _112.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseInfo;
            fromPartial(object: Partial<_112.ResponseInfo>): _112.ResponseInfo;
            fromAmino(object: _112.ResponseInfoAmino): _112.ResponseInfo;
            toAmino(message: _112.ResponseInfo): _112.ResponseInfoAmino;
            fromAminoMsg(object: _112.ResponseInfoAminoMsg): _112.ResponseInfo;
            fromProtoMsg(message: _112.ResponseInfoProtoMsg): _112.ResponseInfo;
            toProto(message: _112.ResponseInfo): Uint8Array;
            toProtoMsg(message: _112.ResponseInfo): _112.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _112.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseSetOption;
            fromPartial(object: Partial<_112.ResponseSetOption>): _112.ResponseSetOption;
            fromAmino(object: _112.ResponseSetOptionAmino): _112.ResponseSetOption;
            toAmino(message: _112.ResponseSetOption): _112.ResponseSetOptionAmino;
            fromAminoMsg(object: _112.ResponseSetOptionAminoMsg): _112.ResponseSetOption;
            fromProtoMsg(message: _112.ResponseSetOptionProtoMsg): _112.ResponseSetOption;
            toProto(message: _112.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _112.ResponseSetOption): _112.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _112.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseInitChain;
            fromPartial(object: Partial<_112.ResponseInitChain>): _112.ResponseInitChain;
            fromAmino(object: _112.ResponseInitChainAmino): _112.ResponseInitChain;
            toAmino(message: _112.ResponseInitChain): _112.ResponseInitChainAmino;
            fromAminoMsg(object: _112.ResponseInitChainAminoMsg): _112.ResponseInitChain;
            fromProtoMsg(message: _112.ResponseInitChainProtoMsg): _112.ResponseInitChain;
            toProto(message: _112.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _112.ResponseInitChain): _112.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _112.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseQuery;
            fromPartial(object: Partial<_112.ResponseQuery>): _112.ResponseQuery;
            fromAmino(object: _112.ResponseQueryAmino): _112.ResponseQuery;
            toAmino(message: _112.ResponseQuery): _112.ResponseQueryAmino;
            fromAminoMsg(object: _112.ResponseQueryAminoMsg): _112.ResponseQuery;
            fromProtoMsg(message: _112.ResponseQueryProtoMsg): _112.ResponseQuery;
            toProto(message: _112.ResponseQuery): Uint8Array;
            toProtoMsg(message: _112.ResponseQuery): _112.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _112.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseBeginBlock;
            fromPartial(object: Partial<_112.ResponseBeginBlock>): _112.ResponseBeginBlock;
            fromAmino(object: _112.ResponseBeginBlockAmino): _112.ResponseBeginBlock;
            toAmino(message: _112.ResponseBeginBlock): _112.ResponseBeginBlockAmino;
            fromAminoMsg(object: _112.ResponseBeginBlockAminoMsg): _112.ResponseBeginBlock;
            fromProtoMsg(message: _112.ResponseBeginBlockProtoMsg): _112.ResponseBeginBlock;
            toProto(message: _112.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _112.ResponseBeginBlock): _112.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _112.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseCheckTx;
            fromPartial(object: Partial<_112.ResponseCheckTx>): _112.ResponseCheckTx;
            fromAmino(object: _112.ResponseCheckTxAmino): _112.ResponseCheckTx;
            toAmino(message: _112.ResponseCheckTx): _112.ResponseCheckTxAmino;
            fromAminoMsg(object: _112.ResponseCheckTxAminoMsg): _112.ResponseCheckTx;
            fromProtoMsg(message: _112.ResponseCheckTxProtoMsg): _112.ResponseCheckTx;
            toProto(message: _112.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _112.ResponseCheckTx): _112.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _112.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseDeliverTx;
            fromPartial(object: Partial<_112.ResponseDeliverTx>): _112.ResponseDeliverTx;
            fromAmino(object: _112.ResponseDeliverTxAmino): _112.ResponseDeliverTx;
            toAmino(message: _112.ResponseDeliverTx): _112.ResponseDeliverTxAmino;
            fromAminoMsg(object: _112.ResponseDeliverTxAminoMsg): _112.ResponseDeliverTx;
            fromProtoMsg(message: _112.ResponseDeliverTxProtoMsg): _112.ResponseDeliverTx;
            toProto(message: _112.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _112.ResponseDeliverTx): _112.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _112.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseEndBlock;
            fromPartial(object: Partial<_112.ResponseEndBlock>): _112.ResponseEndBlock;
            fromAmino(object: _112.ResponseEndBlockAmino): _112.ResponseEndBlock;
            toAmino(message: _112.ResponseEndBlock): _112.ResponseEndBlockAmino;
            fromAminoMsg(object: _112.ResponseEndBlockAminoMsg): _112.ResponseEndBlock;
            fromProtoMsg(message: _112.ResponseEndBlockProtoMsg): _112.ResponseEndBlock;
            toProto(message: _112.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _112.ResponseEndBlock): _112.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _112.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseCommit;
            fromPartial(object: Partial<_112.ResponseCommit>): _112.ResponseCommit;
            fromAmino(object: _112.ResponseCommitAmino): _112.ResponseCommit;
            toAmino(message: _112.ResponseCommit): _112.ResponseCommitAmino;
            fromAminoMsg(object: _112.ResponseCommitAminoMsg): _112.ResponseCommit;
            fromProtoMsg(message: _112.ResponseCommitProtoMsg): _112.ResponseCommit;
            toProto(message: _112.ResponseCommit): Uint8Array;
            toProtoMsg(message: _112.ResponseCommit): _112.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _112.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseListSnapshots;
            fromPartial(object: Partial<_112.ResponseListSnapshots>): _112.ResponseListSnapshots;
            fromAmino(object: _112.ResponseListSnapshotsAmino): _112.ResponseListSnapshots;
            toAmino(message: _112.ResponseListSnapshots): _112.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _112.ResponseListSnapshotsAminoMsg): _112.ResponseListSnapshots;
            fromProtoMsg(message: _112.ResponseListSnapshotsProtoMsg): _112.ResponseListSnapshots;
            toProto(message: _112.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _112.ResponseListSnapshots): _112.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _112.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseOfferSnapshot;
            fromPartial(object: Partial<_112.ResponseOfferSnapshot>): _112.ResponseOfferSnapshot;
            fromAmino(object: _112.ResponseOfferSnapshotAmino): _112.ResponseOfferSnapshot;
            toAmino(message: _112.ResponseOfferSnapshot): _112.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _112.ResponseOfferSnapshotAminoMsg): _112.ResponseOfferSnapshot;
            fromProtoMsg(message: _112.ResponseOfferSnapshotProtoMsg): _112.ResponseOfferSnapshot;
            toProto(message: _112.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _112.ResponseOfferSnapshot): _112.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _112.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_112.ResponseLoadSnapshotChunk>): _112.ResponseLoadSnapshotChunk;
            fromAmino(object: _112.ResponseLoadSnapshotChunkAmino): _112.ResponseLoadSnapshotChunk;
            toAmino(message: _112.ResponseLoadSnapshotChunk): _112.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _112.ResponseLoadSnapshotChunkAminoMsg): _112.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _112.ResponseLoadSnapshotChunkProtoMsg): _112.ResponseLoadSnapshotChunk;
            toProto(message: _112.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _112.ResponseLoadSnapshotChunk): _112.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _112.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_112.ResponseApplySnapshotChunk>): _112.ResponseApplySnapshotChunk;
            fromAmino(object: _112.ResponseApplySnapshotChunkAmino): _112.ResponseApplySnapshotChunk;
            toAmino(message: _112.ResponseApplySnapshotChunk): _112.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _112.ResponseApplySnapshotChunkAminoMsg): _112.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _112.ResponseApplySnapshotChunkProtoMsg): _112.ResponseApplySnapshotChunk;
            toProto(message: _112.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _112.ResponseApplySnapshotChunk): _112.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _112.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ConsensusParams;
            fromPartial(object: Partial<_112.ConsensusParams>): _112.ConsensusParams;
            fromAmino(object: _112.ConsensusParamsAmino): _112.ConsensusParams;
            toAmino(message: _112.ConsensusParams): _112.ConsensusParamsAmino;
            fromAminoMsg(object: _112.ConsensusParamsAminoMsg): _112.ConsensusParams;
            fromProtoMsg(message: _112.ConsensusParamsProtoMsg): _112.ConsensusParams;
            toProto(message: _112.ConsensusParams): Uint8Array;
            toProtoMsg(message: _112.ConsensusParams): _112.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _112.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.BlockParams;
            fromPartial(object: Partial<_112.BlockParams>): _112.BlockParams;
            fromAmino(object: _112.BlockParamsAmino): _112.BlockParams;
            toAmino(message: _112.BlockParams): _112.BlockParamsAmino;
            fromAminoMsg(object: _112.BlockParamsAminoMsg): _112.BlockParams;
            fromProtoMsg(message: _112.BlockParamsProtoMsg): _112.BlockParams;
            toProto(message: _112.BlockParams): Uint8Array;
            toProtoMsg(message: _112.BlockParams): _112.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _112.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.LastCommitInfo;
            fromPartial(object: Partial<_112.LastCommitInfo>): _112.LastCommitInfo;
            fromAmino(object: _112.LastCommitInfoAmino): _112.LastCommitInfo;
            toAmino(message: _112.LastCommitInfo): _112.LastCommitInfoAmino;
            fromAminoMsg(object: _112.LastCommitInfoAminoMsg): _112.LastCommitInfo;
            fromProtoMsg(message: _112.LastCommitInfoProtoMsg): _112.LastCommitInfo;
            toProto(message: _112.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _112.LastCommitInfo): _112.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _112.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.Event;
            fromPartial(object: Partial<_112.Event>): _112.Event;
            fromAmino(object: _112.EventAmino): _112.Event;
            toAmino(message: _112.Event): _112.EventAmino;
            fromAminoMsg(object: _112.EventAminoMsg): _112.Event;
            fromProtoMsg(message: _112.EventProtoMsg): _112.Event;
            toProto(message: _112.Event): Uint8Array;
            toProtoMsg(message: _112.Event): _112.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _112.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.EventAttribute;
            fromPartial(object: Partial<_112.EventAttribute>): _112.EventAttribute;
            fromAmino(object: _112.EventAttributeAmino): _112.EventAttribute;
            toAmino(message: _112.EventAttribute): _112.EventAttributeAmino;
            fromAminoMsg(object: _112.EventAttributeAminoMsg): _112.EventAttribute;
            fromProtoMsg(message: _112.EventAttributeProtoMsg): _112.EventAttribute;
            toProto(message: _112.EventAttribute): Uint8Array;
            toProtoMsg(message: _112.EventAttribute): _112.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _112.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.TxResult;
            fromPartial(object: Partial<_112.TxResult>): _112.TxResult;
            fromAmino(object: _112.TxResultAmino): _112.TxResult;
            toAmino(message: _112.TxResult): _112.TxResultAmino;
            fromAminoMsg(object: _112.TxResultAminoMsg): _112.TxResult;
            fromProtoMsg(message: _112.TxResultProtoMsg): _112.TxResult;
            toProto(message: _112.TxResult): Uint8Array;
            toProtoMsg(message: _112.TxResult): _112.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _112.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.Validator;
            fromPartial(object: Partial<_112.Validator>): _112.Validator;
            fromAmino(object: _112.ValidatorAmino): _112.Validator;
            toAmino(message: _112.Validator): _112.ValidatorAmino;
            fromAminoMsg(object: _112.ValidatorAminoMsg): _112.Validator;
            fromProtoMsg(message: _112.ValidatorProtoMsg): _112.Validator;
            toProto(message: _112.Validator): Uint8Array;
            toProtoMsg(message: _112.Validator): _112.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _112.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ValidatorUpdate;
            fromPartial(object: Partial<_112.ValidatorUpdate>): _112.ValidatorUpdate;
            fromAmino(object: _112.ValidatorUpdateAmino): _112.ValidatorUpdate;
            toAmino(message: _112.ValidatorUpdate): _112.ValidatorUpdateAmino;
            fromAminoMsg(object: _112.ValidatorUpdateAminoMsg): _112.ValidatorUpdate;
            fromProtoMsg(message: _112.ValidatorUpdateProtoMsg): _112.ValidatorUpdate;
            toProto(message: _112.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _112.ValidatorUpdate): _112.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _112.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.VoteInfo;
            fromPartial(object: Partial<_112.VoteInfo>): _112.VoteInfo;
            fromAmino(object: _112.VoteInfoAmino): _112.VoteInfo;
            toAmino(message: _112.VoteInfo): _112.VoteInfoAmino;
            fromAminoMsg(object: _112.VoteInfoAminoMsg): _112.VoteInfo;
            fromProtoMsg(message: _112.VoteInfoProtoMsg): _112.VoteInfo;
            toProto(message: _112.VoteInfo): Uint8Array;
            toProtoMsg(message: _112.VoteInfo): _112.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _112.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.Evidence;
            fromPartial(object: Partial<_112.Evidence>): _112.Evidence;
            fromAmino(object: _112.EvidenceAmino): _112.Evidence;
            toAmino(message: _112.Evidence): _112.EvidenceAmino;
            fromAminoMsg(object: _112.EvidenceAminoMsg): _112.Evidence;
            fromProtoMsg(message: _112.EvidenceProtoMsg): _112.Evidence;
            toProto(message: _112.Evidence): Uint8Array;
            toProtoMsg(message: _112.Evidence): _112.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _112.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.Snapshot;
            fromPartial(object: Partial<_112.Snapshot>): _112.Snapshot;
            fromAmino(object: _112.SnapshotAmino): _112.Snapshot;
            toAmino(message: _112.Snapshot): _112.SnapshotAmino;
            fromAminoMsg(object: _112.SnapshotAminoMsg): _112.Snapshot;
            fromProtoMsg(message: _112.SnapshotProtoMsg): _112.Snapshot;
            toProto(message: _112.Snapshot): Uint8Array;
            toProtoMsg(message: _112.Snapshot): _112.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _114.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.Proof;
            fromPartial(object: Partial<_114.Proof>): _114.Proof;
            fromAmino(object: _114.ProofAmino): _114.Proof;
            toAmino(message: _114.Proof): _114.ProofAmino;
            fromAminoMsg(object: _114.ProofAminoMsg): _114.Proof;
            fromProtoMsg(message: _114.ProofProtoMsg): _114.Proof;
            toProto(message: _114.Proof): Uint8Array;
            toProtoMsg(message: _114.Proof): _114.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _114.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.ValueOp;
            fromPartial(object: Partial<_114.ValueOp>): _114.ValueOp;
            fromAmino(object: _114.ValueOpAmino): _114.ValueOp;
            toAmino(message: _114.ValueOp): _114.ValueOpAmino;
            fromAminoMsg(object: _114.ValueOpAminoMsg): _114.ValueOp;
            fromProtoMsg(message: _114.ValueOpProtoMsg): _114.ValueOp;
            toProto(message: _114.ValueOp): Uint8Array;
            toProtoMsg(message: _114.ValueOp): _114.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _114.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.DominoOp;
            fromPartial(object: Partial<_114.DominoOp>): _114.DominoOp;
            fromAmino(object: _114.DominoOpAmino): _114.DominoOp;
            toAmino(message: _114.DominoOp): _114.DominoOpAmino;
            fromAminoMsg(object: _114.DominoOpAminoMsg): _114.DominoOp;
            fromProtoMsg(message: _114.DominoOpProtoMsg): _114.DominoOp;
            toProto(message: _114.DominoOp): Uint8Array;
            toProtoMsg(message: _114.DominoOp): _114.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _114.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.ProofOp;
            fromPartial(object: Partial<_114.ProofOp>): _114.ProofOp;
            fromAmino(object: _114.ProofOpAmino): _114.ProofOp;
            toAmino(message: _114.ProofOp): _114.ProofOpAmino;
            fromAminoMsg(object: _114.ProofOpAminoMsg): _114.ProofOp;
            fromProtoMsg(message: _114.ProofOpProtoMsg): _114.ProofOp;
            toProto(message: _114.ProofOp): Uint8Array;
            toProtoMsg(message: _114.ProofOp): _114.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _114.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.ProofOps;
            fromPartial(object: Partial<_114.ProofOps>): _114.ProofOps;
            fromAmino(object: _114.ProofOpsAmino): _114.ProofOps;
            toAmino(message: _114.ProofOps): _114.ProofOpsAmino;
            fromAminoMsg(object: _114.ProofOpsAminoMsg): _114.ProofOps;
            fromProtoMsg(message: _114.ProofOpsProtoMsg): _114.ProofOps;
            toProto(message: _114.ProofOps): Uint8Array;
            toProtoMsg(message: _114.ProofOps): _114.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _113.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.PublicKey;
            fromPartial(object: Partial<_113.PublicKey>): _113.PublicKey;
            fromAmino(object: _113.PublicKeyAmino): _113.PublicKey;
            toAmino(message: _113.PublicKey): _113.PublicKeyAmino;
            fromAminoMsg(object: _113.PublicKeyAminoMsg): _113.PublicKey;
            fromProtoMsg(message: _113.PublicKeyProtoMsg): _113.PublicKey;
            toProto(message: _113.PublicKey): Uint8Array;
            toProtoMsg(message: _113.PublicKey): _113.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _115.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _115.BitArray;
                fromPartial(object: Partial<_115.BitArray>): _115.BitArray;
                fromAmino(object: _115.BitArrayAmino): _115.BitArray;
                toAmino(message: _115.BitArray): _115.BitArrayAmino;
                fromAminoMsg(object: _115.BitArrayAminoMsg): _115.BitArray;
                fromProtoMsg(message: _115.BitArrayProtoMsg): _115.BitArray;
                toProto(message: _115.BitArray): Uint8Array;
                toProtoMsg(message: _115.BitArray): _115.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _116.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.NetAddress;
            fromPartial(object: Partial<_116.NetAddress>): _116.NetAddress;
            fromAmino(object: _116.NetAddressAmino): _116.NetAddress;
            toAmino(message: _116.NetAddress): _116.NetAddressAmino;
            fromAminoMsg(object: _116.NetAddressAminoMsg): _116.NetAddress;
            fromProtoMsg(message: _116.NetAddressProtoMsg): _116.NetAddress;
            toProto(message: _116.NetAddress): Uint8Array;
            toProtoMsg(message: _116.NetAddress): _116.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _116.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.ProtocolVersion;
            fromPartial(object: Partial<_116.ProtocolVersion>): _116.ProtocolVersion;
            fromAmino(object: _116.ProtocolVersionAmino): _116.ProtocolVersion;
            toAmino(message: _116.ProtocolVersion): _116.ProtocolVersionAmino;
            fromAminoMsg(object: _116.ProtocolVersionAminoMsg): _116.ProtocolVersion;
            fromProtoMsg(message: _116.ProtocolVersionProtoMsg): _116.ProtocolVersion;
            toProto(message: _116.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _116.ProtocolVersion): _116.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _116.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.DefaultNodeInfo;
            fromPartial(object: Partial<_116.DefaultNodeInfo>): _116.DefaultNodeInfo;
            fromAmino(object: _116.DefaultNodeInfoAmino): _116.DefaultNodeInfo;
            toAmino(message: _116.DefaultNodeInfo): _116.DefaultNodeInfoAmino;
            fromAminoMsg(object: _116.DefaultNodeInfoAminoMsg): _116.DefaultNodeInfo;
            fromProtoMsg(message: _116.DefaultNodeInfoProtoMsg): _116.DefaultNodeInfo;
            toProto(message: _116.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _116.DefaultNodeInfo): _116.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _116.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _116.DefaultNodeInfoOther;
            fromPartial(object: Partial<_116.DefaultNodeInfoOther>): _116.DefaultNodeInfoOther;
            fromAmino(object: _116.DefaultNodeInfoOtherAmino): _116.DefaultNodeInfoOther;
            toAmino(message: _116.DefaultNodeInfoOther): _116.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _116.DefaultNodeInfoOtherAminoMsg): _116.DefaultNodeInfoOther;
            fromProtoMsg(message: _116.DefaultNodeInfoOtherProtoMsg): _116.DefaultNodeInfoOther;
            toProto(message: _116.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _116.DefaultNodeInfoOther): _116.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _121.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.ValidatorSet;
            fromPartial(object: Partial<_121.ValidatorSet>): _121.ValidatorSet;
            fromAmino(object: _121.ValidatorSetAmino): _121.ValidatorSet;
            toAmino(message: _121.ValidatorSet): _121.ValidatorSetAmino;
            fromAminoMsg(object: _121.ValidatorSetAminoMsg): _121.ValidatorSet;
            fromProtoMsg(message: _121.ValidatorSetProtoMsg): _121.ValidatorSet;
            toProto(message: _121.ValidatorSet): Uint8Array;
            toProtoMsg(message: _121.ValidatorSet): _121.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _121.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.Validator;
            fromPartial(object: Partial<_121.Validator>): _121.Validator;
            fromAmino(object: _121.ValidatorAmino): _121.Validator;
            toAmino(message: _121.Validator): _121.ValidatorAmino;
            fromAminoMsg(object: _121.ValidatorAminoMsg): _121.Validator;
            fromProtoMsg(message: _121.ValidatorProtoMsg): _121.Validator;
            toProto(message: _121.Validator): Uint8Array;
            toProtoMsg(message: _121.Validator): _121.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _121.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.SimpleValidator;
            fromPartial(object: Partial<_121.SimpleValidator>): _121.SimpleValidator;
            fromAmino(object: _121.SimpleValidatorAmino): _121.SimpleValidator;
            toAmino(message: _121.SimpleValidator): _121.SimpleValidatorAmino;
            fromAminoMsg(object: _121.SimpleValidatorAminoMsg): _121.SimpleValidator;
            fromProtoMsg(message: _121.SimpleValidatorProtoMsg): _121.SimpleValidator;
            toProto(message: _121.SimpleValidator): Uint8Array;
            toProtoMsg(message: _121.SimpleValidator): _121.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _120.BlockIDFlag;
        blockIDFlagToJSON(object: _120.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _120.SignedMsgType;
        signedMsgTypeToJSON(object: _120.SignedMsgType): string;
        BlockIDFlag: typeof _120.BlockIDFlag;
        BlockIDFlagSDKType: typeof _120.BlockIDFlag;
        BlockIDFlagAmino: typeof _120.BlockIDFlag;
        SignedMsgType: typeof _120.SignedMsgType;
        SignedMsgTypeSDKType: typeof _120.SignedMsgType;
        SignedMsgTypeAmino: typeof _120.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _120.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.PartSetHeader;
            fromPartial(object: Partial<_120.PartSetHeader>): _120.PartSetHeader;
            fromAmino(object: _120.PartSetHeaderAmino): _120.PartSetHeader;
            toAmino(message: _120.PartSetHeader): _120.PartSetHeaderAmino;
            fromAminoMsg(object: _120.PartSetHeaderAminoMsg): _120.PartSetHeader;
            fromProtoMsg(message: _120.PartSetHeaderProtoMsg): _120.PartSetHeader;
            toProto(message: _120.PartSetHeader): Uint8Array;
            toProtoMsg(message: _120.PartSetHeader): _120.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _120.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.Part;
            fromPartial(object: Partial<_120.Part>): _120.Part;
            fromAmino(object: _120.PartAmino): _120.Part;
            toAmino(message: _120.Part): _120.PartAmino;
            fromAminoMsg(object: _120.PartAminoMsg): _120.Part;
            fromProtoMsg(message: _120.PartProtoMsg): _120.Part;
            toProto(message: _120.Part): Uint8Array;
            toProtoMsg(message: _120.Part): _120.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _120.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.BlockID;
            fromPartial(object: Partial<_120.BlockID>): _120.BlockID;
            fromAmino(object: _120.BlockIDAmino): _120.BlockID;
            toAmino(message: _120.BlockID): _120.BlockIDAmino;
            fromAminoMsg(object: _120.BlockIDAminoMsg): _120.BlockID;
            fromProtoMsg(message: _120.BlockIDProtoMsg): _120.BlockID;
            toProto(message: _120.BlockID): Uint8Array;
            toProtoMsg(message: _120.BlockID): _120.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _120.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.Header;
            fromPartial(object: Partial<_120.Header>): _120.Header;
            fromAmino(object: _120.HeaderAmino): _120.Header;
            toAmino(message: _120.Header): _120.HeaderAmino;
            fromAminoMsg(object: _120.HeaderAminoMsg): _120.Header;
            fromProtoMsg(message: _120.HeaderProtoMsg): _120.Header;
            toProto(message: _120.Header): Uint8Array;
            toProtoMsg(message: _120.Header): _120.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _120.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.Data;
            fromPartial(object: Partial<_120.Data>): _120.Data;
            fromAmino(object: _120.DataAmino): _120.Data;
            toAmino(message: _120.Data): _120.DataAmino;
            fromAminoMsg(object: _120.DataAminoMsg): _120.Data;
            fromProtoMsg(message: _120.DataProtoMsg): _120.Data;
            toProto(message: _120.Data): Uint8Array;
            toProtoMsg(message: _120.Data): _120.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _120.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.Vote;
            fromPartial(object: Partial<_120.Vote>): _120.Vote;
            fromAmino(object: _120.VoteAmino): _120.Vote;
            toAmino(message: _120.Vote): _120.VoteAmino;
            fromAminoMsg(object: _120.VoteAminoMsg): _120.Vote;
            fromProtoMsg(message: _120.VoteProtoMsg): _120.Vote;
            toProto(message: _120.Vote): Uint8Array;
            toProtoMsg(message: _120.Vote): _120.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _120.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.Commit;
            fromPartial(object: Partial<_120.Commit>): _120.Commit;
            fromAmino(object: _120.CommitAmino): _120.Commit;
            toAmino(message: _120.Commit): _120.CommitAmino;
            fromAminoMsg(object: _120.CommitAminoMsg): _120.Commit;
            fromProtoMsg(message: _120.CommitProtoMsg): _120.Commit;
            toProto(message: _120.Commit): Uint8Array;
            toProtoMsg(message: _120.Commit): _120.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _120.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.CommitSig;
            fromPartial(object: Partial<_120.CommitSig>): _120.CommitSig;
            fromAmino(object: _120.CommitSigAmino): _120.CommitSig;
            toAmino(message: _120.CommitSig): _120.CommitSigAmino;
            fromAminoMsg(object: _120.CommitSigAminoMsg): _120.CommitSig;
            fromProtoMsg(message: _120.CommitSigProtoMsg): _120.CommitSig;
            toProto(message: _120.CommitSig): Uint8Array;
            toProtoMsg(message: _120.CommitSig): _120.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _120.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.Proposal;
            fromPartial(object: Partial<_120.Proposal>): _120.Proposal;
            fromAmino(object: _120.ProposalAmino): _120.Proposal;
            toAmino(message: _120.Proposal): _120.ProposalAmino;
            fromAminoMsg(object: _120.ProposalAminoMsg): _120.Proposal;
            fromProtoMsg(message: _120.ProposalProtoMsg): _120.Proposal;
            toProto(message: _120.Proposal): Uint8Array;
            toProtoMsg(message: _120.Proposal): _120.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _120.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.SignedHeader;
            fromPartial(object: Partial<_120.SignedHeader>): _120.SignedHeader;
            fromAmino(object: _120.SignedHeaderAmino): _120.SignedHeader;
            toAmino(message: _120.SignedHeader): _120.SignedHeaderAmino;
            fromAminoMsg(object: _120.SignedHeaderAminoMsg): _120.SignedHeader;
            fromProtoMsg(message: _120.SignedHeaderProtoMsg): _120.SignedHeader;
            toProto(message: _120.SignedHeader): Uint8Array;
            toProtoMsg(message: _120.SignedHeader): _120.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _120.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.LightBlock;
            fromPartial(object: Partial<_120.LightBlock>): _120.LightBlock;
            fromAmino(object: _120.LightBlockAmino): _120.LightBlock;
            toAmino(message: _120.LightBlock): _120.LightBlockAmino;
            fromAminoMsg(object: _120.LightBlockAminoMsg): _120.LightBlock;
            fromProtoMsg(message: _120.LightBlockProtoMsg): _120.LightBlock;
            toProto(message: _120.LightBlock): Uint8Array;
            toProtoMsg(message: _120.LightBlock): _120.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _120.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.BlockMeta;
            fromPartial(object: Partial<_120.BlockMeta>): _120.BlockMeta;
            fromAmino(object: _120.BlockMetaAmino): _120.BlockMeta;
            toAmino(message: _120.BlockMeta): _120.BlockMetaAmino;
            fromAminoMsg(object: _120.BlockMetaAminoMsg): _120.BlockMeta;
            fromProtoMsg(message: _120.BlockMetaProtoMsg): _120.BlockMeta;
            toProto(message: _120.BlockMeta): Uint8Array;
            toProtoMsg(message: _120.BlockMeta): _120.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _120.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.TxProof;
            fromPartial(object: Partial<_120.TxProof>): _120.TxProof;
            fromAmino(object: _120.TxProofAmino): _120.TxProof;
            toAmino(message: _120.TxProof): _120.TxProofAmino;
            fromAminoMsg(object: _120.TxProofAminoMsg): _120.TxProof;
            fromProtoMsg(message: _120.TxProofProtoMsg): _120.TxProof;
            toProto(message: _120.TxProof): Uint8Array;
            toProtoMsg(message: _120.TxProof): _120.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _119.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.ConsensusParams;
            fromPartial(object: Partial<_119.ConsensusParams>): _119.ConsensusParams;
            fromAmino(object: _119.ConsensusParamsAmino): _119.ConsensusParams;
            toAmino(message: _119.ConsensusParams): _119.ConsensusParamsAmino;
            fromAminoMsg(object: _119.ConsensusParamsAminoMsg): _119.ConsensusParams;
            fromProtoMsg(message: _119.ConsensusParamsProtoMsg): _119.ConsensusParams;
            toProto(message: _119.ConsensusParams): Uint8Array;
            toProtoMsg(message: _119.ConsensusParams): _119.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _119.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.BlockParams;
            fromPartial(object: Partial<_119.BlockParams>): _119.BlockParams;
            fromAmino(object: _119.BlockParamsAmino): _119.BlockParams;
            toAmino(message: _119.BlockParams): _119.BlockParamsAmino;
            fromAminoMsg(object: _119.BlockParamsAminoMsg): _119.BlockParams;
            fromProtoMsg(message: _119.BlockParamsProtoMsg): _119.BlockParams;
            toProto(message: _119.BlockParams): Uint8Array;
            toProtoMsg(message: _119.BlockParams): _119.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _119.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.EvidenceParams;
            fromPartial(object: Partial<_119.EvidenceParams>): _119.EvidenceParams;
            fromAmino(object: _119.EvidenceParamsAmino): _119.EvidenceParams;
            toAmino(message: _119.EvidenceParams): _119.EvidenceParamsAmino;
            fromAminoMsg(object: _119.EvidenceParamsAminoMsg): _119.EvidenceParams;
            fromProtoMsg(message: _119.EvidenceParamsProtoMsg): _119.EvidenceParams;
            toProto(message: _119.EvidenceParams): Uint8Array;
            toProtoMsg(message: _119.EvidenceParams): _119.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _119.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.ValidatorParams;
            fromPartial(object: Partial<_119.ValidatorParams>): _119.ValidatorParams;
            fromAmino(object: _119.ValidatorParamsAmino): _119.ValidatorParams;
            toAmino(message: _119.ValidatorParams): _119.ValidatorParamsAmino;
            fromAminoMsg(object: _119.ValidatorParamsAminoMsg): _119.ValidatorParams;
            fromProtoMsg(message: _119.ValidatorParamsProtoMsg): _119.ValidatorParams;
            toProto(message: _119.ValidatorParams): Uint8Array;
            toProtoMsg(message: _119.ValidatorParams): _119.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _119.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.VersionParams;
            fromPartial(object: Partial<_119.VersionParams>): _119.VersionParams;
            fromAmino(object: _119.VersionParamsAmino): _119.VersionParams;
            toAmino(message: _119.VersionParams): _119.VersionParamsAmino;
            fromAminoMsg(object: _119.VersionParamsAminoMsg): _119.VersionParams;
            fromProtoMsg(message: _119.VersionParamsProtoMsg): _119.VersionParams;
            toProto(message: _119.VersionParams): Uint8Array;
            toProtoMsg(message: _119.VersionParams): _119.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _119.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.HashedParams;
            fromPartial(object: Partial<_119.HashedParams>): _119.HashedParams;
            fromAmino(object: _119.HashedParamsAmino): _119.HashedParams;
            toAmino(message: _119.HashedParams): _119.HashedParamsAmino;
            fromAminoMsg(object: _119.HashedParamsAminoMsg): _119.HashedParams;
            fromProtoMsg(message: _119.HashedParamsProtoMsg): _119.HashedParams;
            toProto(message: _119.HashedParams): Uint8Array;
            toProtoMsg(message: _119.HashedParams): _119.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _118.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.Evidence;
            fromPartial(object: Partial<_118.Evidence>): _118.Evidence;
            fromAmino(object: _118.EvidenceAmino): _118.Evidence;
            toAmino(message: _118.Evidence): _118.EvidenceAmino;
            fromAminoMsg(object: _118.EvidenceAminoMsg): _118.Evidence;
            fromProtoMsg(message: _118.EvidenceProtoMsg): _118.Evidence;
            toProto(message: _118.Evidence): Uint8Array;
            toProtoMsg(message: _118.Evidence): _118.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _118.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.DuplicateVoteEvidence;
            fromPartial(object: Partial<_118.DuplicateVoteEvidence>): _118.DuplicateVoteEvidence;
            fromAmino(object: _118.DuplicateVoteEvidenceAmino): _118.DuplicateVoteEvidence;
            toAmino(message: _118.DuplicateVoteEvidence): _118.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _118.DuplicateVoteEvidenceAminoMsg): _118.DuplicateVoteEvidence;
            fromProtoMsg(message: _118.DuplicateVoteEvidenceProtoMsg): _118.DuplicateVoteEvidence;
            toProto(message: _118.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _118.DuplicateVoteEvidence): _118.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _118.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.LightClientAttackEvidence;
            fromPartial(object: Partial<_118.LightClientAttackEvidence>): _118.LightClientAttackEvidence;
            fromAmino(object: _118.LightClientAttackEvidenceAmino): _118.LightClientAttackEvidence;
            toAmino(message: _118.LightClientAttackEvidence): _118.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _118.LightClientAttackEvidenceAminoMsg): _118.LightClientAttackEvidence;
            fromProtoMsg(message: _118.LightClientAttackEvidenceProtoMsg): _118.LightClientAttackEvidence;
            toProto(message: _118.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _118.LightClientAttackEvidence): _118.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _118.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.EvidenceList;
            fromPartial(object: Partial<_118.EvidenceList>): _118.EvidenceList;
            fromAmino(object: _118.EvidenceListAmino): _118.EvidenceList;
            toAmino(message: _118.EvidenceList): _118.EvidenceListAmino;
            fromAminoMsg(object: _118.EvidenceListAminoMsg): _118.EvidenceList;
            fromProtoMsg(message: _118.EvidenceListProtoMsg): _118.EvidenceList;
            toProto(message: _118.EvidenceList): Uint8Array;
            toProtoMsg(message: _118.EvidenceList): _118.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _117.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.Block;
            fromPartial(object: Partial<_117.Block>): _117.Block;
            fromAmino(object: _117.BlockAmino): _117.Block;
            toAmino(message: _117.Block): _117.BlockAmino;
            fromAminoMsg(object: _117.BlockAminoMsg): _117.Block;
            fromProtoMsg(message: _117.BlockProtoMsg): _117.Block;
            toProto(message: _117.Block): Uint8Array;
            toProtoMsg(message: _117.Block): _117.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _122.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.App;
            fromPartial(object: Partial<_122.App>): _122.App;
            fromAmino(object: _122.AppAmino): _122.App;
            toAmino(message: _122.App): _122.AppAmino;
            fromAminoMsg(object: _122.AppAminoMsg): _122.App;
            fromProtoMsg(message: _122.AppProtoMsg): _122.App;
            toProto(message: _122.App): Uint8Array;
            toProtoMsg(message: _122.App): _122.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _122.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.Consensus;
            fromPartial(object: Partial<_122.Consensus>): _122.Consensus;
            fromAmino(object: _122.ConsensusAmino): _122.Consensus;
            toAmino(message: _122.Consensus): _122.ConsensusAmino;
            fromAminoMsg(object: _122.ConsensusAminoMsg): _122.Consensus;
            fromProtoMsg(message: _122.ConsensusProtoMsg): _122.Consensus;
            toProto(message: _122.Consensus): Uint8Array;
            toProtoMsg(message: _122.Consensus): _122.ConsensusProtoMsg;
        };
    };
}
