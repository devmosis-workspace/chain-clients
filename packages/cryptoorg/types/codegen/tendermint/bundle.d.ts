import * as _113 from "./abci/types";
import * as _114 from "./crypto/keys";
import * as _115 from "./crypto/proof";
import * as _116 from "./libs/bits/types";
import * as _117 from "./p2p/types";
import * as _118 from "./types/block";
import * as _119 from "./types/evidence";
import * as _120 from "./types/params";
import * as _121 from "./types/types";
import * as _122 from "./types/validator";
import * as _123 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _113.CheckTxType;
        checkTxTypeToJSON(object: _113.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _113.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _113.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _113.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _113.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _113.EvidenceType;
        evidenceTypeToJSON(object: _113.EvidenceType): string;
        CheckTxType: typeof _113.CheckTxType;
        CheckTxTypeSDKType: typeof _113.CheckTxType;
        CheckTxTypeAmino: typeof _113.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _113.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _113.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _113.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _113.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _113.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _113.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _113.EvidenceType;
        EvidenceTypeSDKType: typeof _113.EvidenceType;
        EvidenceTypeAmino: typeof _113.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _113.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Request;
            fromPartial(object: Partial<_113.Request>): _113.Request;
            fromAmino(object: _113.RequestAmino): _113.Request;
            toAmino(message: _113.Request): _113.RequestAmino;
            fromAminoMsg(object: _113.RequestAminoMsg): _113.Request;
            fromProtoMsg(message: _113.RequestProtoMsg): _113.Request;
            toProto(message: _113.Request): Uint8Array;
            toProtoMsg(message: _113.Request): _113.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _113.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestEcho;
            fromPartial(object: Partial<_113.RequestEcho>): _113.RequestEcho;
            fromAmino(object: _113.RequestEchoAmino): _113.RequestEcho;
            toAmino(message: _113.RequestEcho): _113.RequestEchoAmino;
            fromAminoMsg(object: _113.RequestEchoAminoMsg): _113.RequestEcho;
            fromProtoMsg(message: _113.RequestEchoProtoMsg): _113.RequestEcho;
            toProto(message: _113.RequestEcho): Uint8Array;
            toProtoMsg(message: _113.RequestEcho): _113.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _113.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _113.RequestFlush;
            fromPartial(_: Partial<_113.RequestFlush>): _113.RequestFlush;
            fromAmino(_: _113.RequestFlushAmino): _113.RequestFlush;
            toAmino(_: _113.RequestFlush): _113.RequestFlushAmino;
            fromAminoMsg(object: _113.RequestFlushAminoMsg): _113.RequestFlush;
            fromProtoMsg(message: _113.RequestFlushProtoMsg): _113.RequestFlush;
            toProto(message: _113.RequestFlush): Uint8Array;
            toProtoMsg(message: _113.RequestFlush): _113.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _113.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestInfo;
            fromPartial(object: Partial<_113.RequestInfo>): _113.RequestInfo;
            fromAmino(object: _113.RequestInfoAmino): _113.RequestInfo;
            toAmino(message: _113.RequestInfo): _113.RequestInfoAmino;
            fromAminoMsg(object: _113.RequestInfoAminoMsg): _113.RequestInfo;
            fromProtoMsg(message: _113.RequestInfoProtoMsg): _113.RequestInfo;
            toProto(message: _113.RequestInfo): Uint8Array;
            toProtoMsg(message: _113.RequestInfo): _113.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _113.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestSetOption;
            fromPartial(object: Partial<_113.RequestSetOption>): _113.RequestSetOption;
            fromAmino(object: _113.RequestSetOptionAmino): _113.RequestSetOption;
            toAmino(message: _113.RequestSetOption): _113.RequestSetOptionAmino;
            fromAminoMsg(object: _113.RequestSetOptionAminoMsg): _113.RequestSetOption;
            fromProtoMsg(message: _113.RequestSetOptionProtoMsg): _113.RequestSetOption;
            toProto(message: _113.RequestSetOption): Uint8Array;
            toProtoMsg(message: _113.RequestSetOption): _113.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _113.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestInitChain;
            fromPartial(object: Partial<_113.RequestInitChain>): _113.RequestInitChain;
            fromAmino(object: _113.RequestInitChainAmino): _113.RequestInitChain;
            toAmino(message: _113.RequestInitChain): _113.RequestInitChainAmino;
            fromAminoMsg(object: _113.RequestInitChainAminoMsg): _113.RequestInitChain;
            fromProtoMsg(message: _113.RequestInitChainProtoMsg): _113.RequestInitChain;
            toProto(message: _113.RequestInitChain): Uint8Array;
            toProtoMsg(message: _113.RequestInitChain): _113.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _113.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestQuery;
            fromPartial(object: Partial<_113.RequestQuery>): _113.RequestQuery;
            fromAmino(object: _113.RequestQueryAmino): _113.RequestQuery;
            toAmino(message: _113.RequestQuery): _113.RequestQueryAmino;
            fromAminoMsg(object: _113.RequestQueryAminoMsg): _113.RequestQuery;
            fromProtoMsg(message: _113.RequestQueryProtoMsg): _113.RequestQuery;
            toProto(message: _113.RequestQuery): Uint8Array;
            toProtoMsg(message: _113.RequestQuery): _113.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _113.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestBeginBlock;
            fromPartial(object: Partial<_113.RequestBeginBlock>): _113.RequestBeginBlock;
            fromAmino(object: _113.RequestBeginBlockAmino): _113.RequestBeginBlock;
            toAmino(message: _113.RequestBeginBlock): _113.RequestBeginBlockAmino;
            fromAminoMsg(object: _113.RequestBeginBlockAminoMsg): _113.RequestBeginBlock;
            fromProtoMsg(message: _113.RequestBeginBlockProtoMsg): _113.RequestBeginBlock;
            toProto(message: _113.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _113.RequestBeginBlock): _113.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _113.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestCheckTx;
            fromPartial(object: Partial<_113.RequestCheckTx>): _113.RequestCheckTx;
            fromAmino(object: _113.RequestCheckTxAmino): _113.RequestCheckTx;
            toAmino(message: _113.RequestCheckTx): _113.RequestCheckTxAmino;
            fromAminoMsg(object: _113.RequestCheckTxAminoMsg): _113.RequestCheckTx;
            fromProtoMsg(message: _113.RequestCheckTxProtoMsg): _113.RequestCheckTx;
            toProto(message: _113.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _113.RequestCheckTx): _113.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _113.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestDeliverTx;
            fromPartial(object: Partial<_113.RequestDeliverTx>): _113.RequestDeliverTx;
            fromAmino(object: _113.RequestDeliverTxAmino): _113.RequestDeliverTx;
            toAmino(message: _113.RequestDeliverTx): _113.RequestDeliverTxAmino;
            fromAminoMsg(object: _113.RequestDeliverTxAminoMsg): _113.RequestDeliverTx;
            fromProtoMsg(message: _113.RequestDeliverTxProtoMsg): _113.RequestDeliverTx;
            toProto(message: _113.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _113.RequestDeliverTx): _113.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _113.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestEndBlock;
            fromPartial(object: Partial<_113.RequestEndBlock>): _113.RequestEndBlock;
            fromAmino(object: _113.RequestEndBlockAmino): _113.RequestEndBlock;
            toAmino(message: _113.RequestEndBlock): _113.RequestEndBlockAmino;
            fromAminoMsg(object: _113.RequestEndBlockAminoMsg): _113.RequestEndBlock;
            fromProtoMsg(message: _113.RequestEndBlockProtoMsg): _113.RequestEndBlock;
            toProto(message: _113.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _113.RequestEndBlock): _113.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _113.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _113.RequestCommit;
            fromPartial(_: Partial<_113.RequestCommit>): _113.RequestCommit;
            fromAmino(_: _113.RequestCommitAmino): _113.RequestCommit;
            toAmino(_: _113.RequestCommit): _113.RequestCommitAmino;
            fromAminoMsg(object: _113.RequestCommitAminoMsg): _113.RequestCommit;
            fromProtoMsg(message: _113.RequestCommitProtoMsg): _113.RequestCommit;
            toProto(message: _113.RequestCommit): Uint8Array;
            toProtoMsg(message: _113.RequestCommit): _113.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _113.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _113.RequestListSnapshots;
            fromPartial(_: Partial<_113.RequestListSnapshots>): _113.RequestListSnapshots;
            fromAmino(_: _113.RequestListSnapshotsAmino): _113.RequestListSnapshots;
            toAmino(_: _113.RequestListSnapshots): _113.RequestListSnapshotsAmino;
            fromAminoMsg(object: _113.RequestListSnapshotsAminoMsg): _113.RequestListSnapshots;
            fromProtoMsg(message: _113.RequestListSnapshotsProtoMsg): _113.RequestListSnapshots;
            toProto(message: _113.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _113.RequestListSnapshots): _113.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _113.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestOfferSnapshot;
            fromPartial(object: Partial<_113.RequestOfferSnapshot>): _113.RequestOfferSnapshot;
            fromAmino(object: _113.RequestOfferSnapshotAmino): _113.RequestOfferSnapshot;
            toAmino(message: _113.RequestOfferSnapshot): _113.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _113.RequestOfferSnapshotAminoMsg): _113.RequestOfferSnapshot;
            fromProtoMsg(message: _113.RequestOfferSnapshotProtoMsg): _113.RequestOfferSnapshot;
            toProto(message: _113.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _113.RequestOfferSnapshot): _113.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _113.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_113.RequestLoadSnapshotChunk>): _113.RequestLoadSnapshotChunk;
            fromAmino(object: _113.RequestLoadSnapshotChunkAmino): _113.RequestLoadSnapshotChunk;
            toAmino(message: _113.RequestLoadSnapshotChunk): _113.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _113.RequestLoadSnapshotChunkAminoMsg): _113.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _113.RequestLoadSnapshotChunkProtoMsg): _113.RequestLoadSnapshotChunk;
            toProto(message: _113.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _113.RequestLoadSnapshotChunk): _113.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _113.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_113.RequestApplySnapshotChunk>): _113.RequestApplySnapshotChunk;
            fromAmino(object: _113.RequestApplySnapshotChunkAmino): _113.RequestApplySnapshotChunk;
            toAmino(message: _113.RequestApplySnapshotChunk): _113.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _113.RequestApplySnapshotChunkAminoMsg): _113.RequestApplySnapshotChunk;
            fromProtoMsg(message: _113.RequestApplySnapshotChunkProtoMsg): _113.RequestApplySnapshotChunk;
            toProto(message: _113.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _113.RequestApplySnapshotChunk): _113.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _113.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Response;
            fromPartial(object: Partial<_113.Response>): _113.Response;
            fromAmino(object: _113.ResponseAmino): _113.Response;
            toAmino(message: _113.Response): _113.ResponseAmino;
            fromAminoMsg(object: _113.ResponseAminoMsg): _113.Response;
            fromProtoMsg(message: _113.ResponseProtoMsg): _113.Response;
            toProto(message: _113.Response): Uint8Array;
            toProtoMsg(message: _113.Response): _113.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _113.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseException;
            fromPartial(object: Partial<_113.ResponseException>): _113.ResponseException;
            fromAmino(object: _113.ResponseExceptionAmino): _113.ResponseException;
            toAmino(message: _113.ResponseException): _113.ResponseExceptionAmino;
            fromAminoMsg(object: _113.ResponseExceptionAminoMsg): _113.ResponseException;
            fromProtoMsg(message: _113.ResponseExceptionProtoMsg): _113.ResponseException;
            toProto(message: _113.ResponseException): Uint8Array;
            toProtoMsg(message: _113.ResponseException): _113.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _113.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseEcho;
            fromPartial(object: Partial<_113.ResponseEcho>): _113.ResponseEcho;
            fromAmino(object: _113.ResponseEchoAmino): _113.ResponseEcho;
            toAmino(message: _113.ResponseEcho): _113.ResponseEchoAmino;
            fromAminoMsg(object: _113.ResponseEchoAminoMsg): _113.ResponseEcho;
            fromProtoMsg(message: _113.ResponseEchoProtoMsg): _113.ResponseEcho;
            toProto(message: _113.ResponseEcho): Uint8Array;
            toProtoMsg(message: _113.ResponseEcho): _113.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _113.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _113.ResponseFlush;
            fromPartial(_: Partial<_113.ResponseFlush>): _113.ResponseFlush;
            fromAmino(_: _113.ResponseFlushAmino): _113.ResponseFlush;
            toAmino(_: _113.ResponseFlush): _113.ResponseFlushAmino;
            fromAminoMsg(object: _113.ResponseFlushAminoMsg): _113.ResponseFlush;
            fromProtoMsg(message: _113.ResponseFlushProtoMsg): _113.ResponseFlush;
            toProto(message: _113.ResponseFlush): Uint8Array;
            toProtoMsg(message: _113.ResponseFlush): _113.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _113.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseInfo;
            fromPartial(object: Partial<_113.ResponseInfo>): _113.ResponseInfo;
            fromAmino(object: _113.ResponseInfoAmino): _113.ResponseInfo;
            toAmino(message: _113.ResponseInfo): _113.ResponseInfoAmino;
            fromAminoMsg(object: _113.ResponseInfoAminoMsg): _113.ResponseInfo;
            fromProtoMsg(message: _113.ResponseInfoProtoMsg): _113.ResponseInfo;
            toProto(message: _113.ResponseInfo): Uint8Array;
            toProtoMsg(message: _113.ResponseInfo): _113.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _113.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseSetOption;
            fromPartial(object: Partial<_113.ResponseSetOption>): _113.ResponseSetOption;
            fromAmino(object: _113.ResponseSetOptionAmino): _113.ResponseSetOption;
            toAmino(message: _113.ResponseSetOption): _113.ResponseSetOptionAmino;
            fromAminoMsg(object: _113.ResponseSetOptionAminoMsg): _113.ResponseSetOption;
            fromProtoMsg(message: _113.ResponseSetOptionProtoMsg): _113.ResponseSetOption;
            toProto(message: _113.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _113.ResponseSetOption): _113.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _113.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseInitChain;
            fromPartial(object: Partial<_113.ResponseInitChain>): _113.ResponseInitChain;
            fromAmino(object: _113.ResponseInitChainAmino): _113.ResponseInitChain;
            toAmino(message: _113.ResponseInitChain): _113.ResponseInitChainAmino;
            fromAminoMsg(object: _113.ResponseInitChainAminoMsg): _113.ResponseInitChain;
            fromProtoMsg(message: _113.ResponseInitChainProtoMsg): _113.ResponseInitChain;
            toProto(message: _113.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _113.ResponseInitChain): _113.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _113.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseQuery;
            fromPartial(object: Partial<_113.ResponseQuery>): _113.ResponseQuery;
            fromAmino(object: _113.ResponseQueryAmino): _113.ResponseQuery;
            toAmino(message: _113.ResponseQuery): _113.ResponseQueryAmino;
            fromAminoMsg(object: _113.ResponseQueryAminoMsg): _113.ResponseQuery;
            fromProtoMsg(message: _113.ResponseQueryProtoMsg): _113.ResponseQuery;
            toProto(message: _113.ResponseQuery): Uint8Array;
            toProtoMsg(message: _113.ResponseQuery): _113.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _113.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseBeginBlock;
            fromPartial(object: Partial<_113.ResponseBeginBlock>): _113.ResponseBeginBlock;
            fromAmino(object: _113.ResponseBeginBlockAmino): _113.ResponseBeginBlock;
            toAmino(message: _113.ResponseBeginBlock): _113.ResponseBeginBlockAmino;
            fromAminoMsg(object: _113.ResponseBeginBlockAminoMsg): _113.ResponseBeginBlock;
            fromProtoMsg(message: _113.ResponseBeginBlockProtoMsg): _113.ResponseBeginBlock;
            toProto(message: _113.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _113.ResponseBeginBlock): _113.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _113.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseCheckTx;
            fromPartial(object: Partial<_113.ResponseCheckTx>): _113.ResponseCheckTx;
            fromAmino(object: _113.ResponseCheckTxAmino): _113.ResponseCheckTx;
            toAmino(message: _113.ResponseCheckTx): _113.ResponseCheckTxAmino;
            fromAminoMsg(object: _113.ResponseCheckTxAminoMsg): _113.ResponseCheckTx;
            fromProtoMsg(message: _113.ResponseCheckTxProtoMsg): _113.ResponseCheckTx;
            toProto(message: _113.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _113.ResponseCheckTx): _113.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _113.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseDeliverTx;
            fromPartial(object: Partial<_113.ResponseDeliverTx>): _113.ResponseDeliverTx;
            fromAmino(object: _113.ResponseDeliverTxAmino): _113.ResponseDeliverTx;
            toAmino(message: _113.ResponseDeliverTx): _113.ResponseDeliverTxAmino;
            fromAminoMsg(object: _113.ResponseDeliverTxAminoMsg): _113.ResponseDeliverTx;
            fromProtoMsg(message: _113.ResponseDeliverTxProtoMsg): _113.ResponseDeliverTx;
            toProto(message: _113.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _113.ResponseDeliverTx): _113.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _113.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseEndBlock;
            fromPartial(object: Partial<_113.ResponseEndBlock>): _113.ResponseEndBlock;
            fromAmino(object: _113.ResponseEndBlockAmino): _113.ResponseEndBlock;
            toAmino(message: _113.ResponseEndBlock): _113.ResponseEndBlockAmino;
            fromAminoMsg(object: _113.ResponseEndBlockAminoMsg): _113.ResponseEndBlock;
            fromProtoMsg(message: _113.ResponseEndBlockProtoMsg): _113.ResponseEndBlock;
            toProto(message: _113.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _113.ResponseEndBlock): _113.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _113.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseCommit;
            fromPartial(object: Partial<_113.ResponseCommit>): _113.ResponseCommit;
            fromAmino(object: _113.ResponseCommitAmino): _113.ResponseCommit;
            toAmino(message: _113.ResponseCommit): _113.ResponseCommitAmino;
            fromAminoMsg(object: _113.ResponseCommitAminoMsg): _113.ResponseCommit;
            fromProtoMsg(message: _113.ResponseCommitProtoMsg): _113.ResponseCommit;
            toProto(message: _113.ResponseCommit): Uint8Array;
            toProtoMsg(message: _113.ResponseCommit): _113.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _113.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseListSnapshots;
            fromPartial(object: Partial<_113.ResponseListSnapshots>): _113.ResponseListSnapshots;
            fromAmino(object: _113.ResponseListSnapshotsAmino): _113.ResponseListSnapshots;
            toAmino(message: _113.ResponseListSnapshots): _113.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _113.ResponseListSnapshotsAminoMsg): _113.ResponseListSnapshots;
            fromProtoMsg(message: _113.ResponseListSnapshotsProtoMsg): _113.ResponseListSnapshots;
            toProto(message: _113.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _113.ResponseListSnapshots): _113.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _113.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseOfferSnapshot;
            fromPartial(object: Partial<_113.ResponseOfferSnapshot>): _113.ResponseOfferSnapshot;
            fromAmino(object: _113.ResponseOfferSnapshotAmino): _113.ResponseOfferSnapshot;
            toAmino(message: _113.ResponseOfferSnapshot): _113.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _113.ResponseOfferSnapshotAminoMsg): _113.ResponseOfferSnapshot;
            fromProtoMsg(message: _113.ResponseOfferSnapshotProtoMsg): _113.ResponseOfferSnapshot;
            toProto(message: _113.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _113.ResponseOfferSnapshot): _113.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _113.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_113.ResponseLoadSnapshotChunk>): _113.ResponseLoadSnapshotChunk;
            fromAmino(object: _113.ResponseLoadSnapshotChunkAmino): _113.ResponseLoadSnapshotChunk;
            toAmino(message: _113.ResponseLoadSnapshotChunk): _113.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _113.ResponseLoadSnapshotChunkAminoMsg): _113.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _113.ResponseLoadSnapshotChunkProtoMsg): _113.ResponseLoadSnapshotChunk;
            toProto(message: _113.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _113.ResponseLoadSnapshotChunk): _113.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _113.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_113.ResponseApplySnapshotChunk>): _113.ResponseApplySnapshotChunk;
            fromAmino(object: _113.ResponseApplySnapshotChunkAmino): _113.ResponseApplySnapshotChunk;
            toAmino(message: _113.ResponseApplySnapshotChunk): _113.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _113.ResponseApplySnapshotChunkAminoMsg): _113.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _113.ResponseApplySnapshotChunkProtoMsg): _113.ResponseApplySnapshotChunk;
            toProto(message: _113.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _113.ResponseApplySnapshotChunk): _113.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _113.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ConsensusParams;
            fromPartial(object: Partial<_113.ConsensusParams>): _113.ConsensusParams;
            fromAmino(object: _113.ConsensusParamsAmino): _113.ConsensusParams;
            toAmino(message: _113.ConsensusParams): _113.ConsensusParamsAmino;
            fromAminoMsg(object: _113.ConsensusParamsAminoMsg): _113.ConsensusParams;
            fromProtoMsg(message: _113.ConsensusParamsProtoMsg): _113.ConsensusParams;
            toProto(message: _113.ConsensusParams): Uint8Array;
            toProtoMsg(message: _113.ConsensusParams): _113.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _113.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.BlockParams;
            fromPartial(object: Partial<_113.BlockParams>): _113.BlockParams;
            fromAmino(object: _113.BlockParamsAmino): _113.BlockParams;
            toAmino(message: _113.BlockParams): _113.BlockParamsAmino;
            fromAminoMsg(object: _113.BlockParamsAminoMsg): _113.BlockParams;
            fromProtoMsg(message: _113.BlockParamsProtoMsg): _113.BlockParams;
            toProto(message: _113.BlockParams): Uint8Array;
            toProtoMsg(message: _113.BlockParams): _113.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _113.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.LastCommitInfo;
            fromPartial(object: Partial<_113.LastCommitInfo>): _113.LastCommitInfo;
            fromAmino(object: _113.LastCommitInfoAmino): _113.LastCommitInfo;
            toAmino(message: _113.LastCommitInfo): _113.LastCommitInfoAmino;
            fromAminoMsg(object: _113.LastCommitInfoAminoMsg): _113.LastCommitInfo;
            fromProtoMsg(message: _113.LastCommitInfoProtoMsg): _113.LastCommitInfo;
            toProto(message: _113.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _113.LastCommitInfo): _113.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _113.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Event;
            fromPartial(object: Partial<_113.Event>): _113.Event;
            fromAmino(object: _113.EventAmino): _113.Event;
            toAmino(message: _113.Event): _113.EventAmino;
            fromAminoMsg(object: _113.EventAminoMsg): _113.Event;
            fromProtoMsg(message: _113.EventProtoMsg): _113.Event;
            toProto(message: _113.Event): Uint8Array;
            toProtoMsg(message: _113.Event): _113.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _113.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.EventAttribute;
            fromPartial(object: Partial<_113.EventAttribute>): _113.EventAttribute;
            fromAmino(object: _113.EventAttributeAmino): _113.EventAttribute;
            toAmino(message: _113.EventAttribute): _113.EventAttributeAmino;
            fromAminoMsg(object: _113.EventAttributeAminoMsg): _113.EventAttribute;
            fromProtoMsg(message: _113.EventAttributeProtoMsg): _113.EventAttribute;
            toProto(message: _113.EventAttribute): Uint8Array;
            toProtoMsg(message: _113.EventAttribute): _113.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _113.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.TxResult;
            fromPartial(object: Partial<_113.TxResult>): _113.TxResult;
            fromAmino(object: _113.TxResultAmino): _113.TxResult;
            toAmino(message: _113.TxResult): _113.TxResultAmino;
            fromAminoMsg(object: _113.TxResultAminoMsg): _113.TxResult;
            fromProtoMsg(message: _113.TxResultProtoMsg): _113.TxResult;
            toProto(message: _113.TxResult): Uint8Array;
            toProtoMsg(message: _113.TxResult): _113.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _113.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Validator;
            fromPartial(object: Partial<_113.Validator>): _113.Validator;
            fromAmino(object: _113.ValidatorAmino): _113.Validator;
            toAmino(message: _113.Validator): _113.ValidatorAmino;
            fromAminoMsg(object: _113.ValidatorAminoMsg): _113.Validator;
            fromProtoMsg(message: _113.ValidatorProtoMsg): _113.Validator;
            toProto(message: _113.Validator): Uint8Array;
            toProtoMsg(message: _113.Validator): _113.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _113.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.ValidatorUpdate;
            fromPartial(object: Partial<_113.ValidatorUpdate>): _113.ValidatorUpdate;
            fromAmino(object: _113.ValidatorUpdateAmino): _113.ValidatorUpdate;
            toAmino(message: _113.ValidatorUpdate): _113.ValidatorUpdateAmino;
            fromAminoMsg(object: _113.ValidatorUpdateAminoMsg): _113.ValidatorUpdate;
            fromProtoMsg(message: _113.ValidatorUpdateProtoMsg): _113.ValidatorUpdate;
            toProto(message: _113.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _113.ValidatorUpdate): _113.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _113.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.VoteInfo;
            fromPartial(object: Partial<_113.VoteInfo>): _113.VoteInfo;
            fromAmino(object: _113.VoteInfoAmino): _113.VoteInfo;
            toAmino(message: _113.VoteInfo): _113.VoteInfoAmino;
            fromAminoMsg(object: _113.VoteInfoAminoMsg): _113.VoteInfo;
            fromProtoMsg(message: _113.VoteInfoProtoMsg): _113.VoteInfo;
            toProto(message: _113.VoteInfo): Uint8Array;
            toProtoMsg(message: _113.VoteInfo): _113.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _113.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Evidence;
            fromPartial(object: Partial<_113.Evidence>): _113.Evidence;
            fromAmino(object: _113.EvidenceAmino): _113.Evidence;
            toAmino(message: _113.Evidence): _113.EvidenceAmino;
            fromAminoMsg(object: _113.EvidenceAminoMsg): _113.Evidence;
            fromProtoMsg(message: _113.EvidenceProtoMsg): _113.Evidence;
            toProto(message: _113.Evidence): Uint8Array;
            toProtoMsg(message: _113.Evidence): _113.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _113.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Snapshot;
            fromPartial(object: Partial<_113.Snapshot>): _113.Snapshot;
            fromAmino(object: _113.SnapshotAmino): _113.Snapshot;
            toAmino(message: _113.Snapshot): _113.SnapshotAmino;
            fromAminoMsg(object: _113.SnapshotAminoMsg): _113.Snapshot;
            fromProtoMsg(message: _113.SnapshotProtoMsg): _113.Snapshot;
            toProto(message: _113.Snapshot): Uint8Array;
            toProtoMsg(message: _113.Snapshot): _113.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _115.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.Proof;
            fromPartial(object: Partial<_115.Proof>): _115.Proof;
            fromAmino(object: _115.ProofAmino): _115.Proof;
            toAmino(message: _115.Proof): _115.ProofAmino;
            fromAminoMsg(object: _115.ProofAminoMsg): _115.Proof;
            fromProtoMsg(message: _115.ProofProtoMsg): _115.Proof;
            toProto(message: _115.Proof): Uint8Array;
            toProtoMsg(message: _115.Proof): _115.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _115.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.ValueOp;
            fromPartial(object: Partial<_115.ValueOp>): _115.ValueOp;
            fromAmino(object: _115.ValueOpAmino): _115.ValueOp;
            toAmino(message: _115.ValueOp): _115.ValueOpAmino;
            fromAminoMsg(object: _115.ValueOpAminoMsg): _115.ValueOp;
            fromProtoMsg(message: _115.ValueOpProtoMsg): _115.ValueOp;
            toProto(message: _115.ValueOp): Uint8Array;
            toProtoMsg(message: _115.ValueOp): _115.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _115.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.DominoOp;
            fromPartial(object: Partial<_115.DominoOp>): _115.DominoOp;
            fromAmino(object: _115.DominoOpAmino): _115.DominoOp;
            toAmino(message: _115.DominoOp): _115.DominoOpAmino;
            fromAminoMsg(object: _115.DominoOpAminoMsg): _115.DominoOp;
            fromProtoMsg(message: _115.DominoOpProtoMsg): _115.DominoOp;
            toProto(message: _115.DominoOp): Uint8Array;
            toProtoMsg(message: _115.DominoOp): _115.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _115.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.ProofOp;
            fromPartial(object: Partial<_115.ProofOp>): _115.ProofOp;
            fromAmino(object: _115.ProofOpAmino): _115.ProofOp;
            toAmino(message: _115.ProofOp): _115.ProofOpAmino;
            fromAminoMsg(object: _115.ProofOpAminoMsg): _115.ProofOp;
            fromProtoMsg(message: _115.ProofOpProtoMsg): _115.ProofOp;
            toProto(message: _115.ProofOp): Uint8Array;
            toProtoMsg(message: _115.ProofOp): _115.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _115.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _115.ProofOps;
            fromPartial(object: Partial<_115.ProofOps>): _115.ProofOps;
            fromAmino(object: _115.ProofOpsAmino): _115.ProofOps;
            toAmino(message: _115.ProofOps): _115.ProofOpsAmino;
            fromAminoMsg(object: _115.ProofOpsAminoMsg): _115.ProofOps;
            fromProtoMsg(message: _115.ProofOpsProtoMsg): _115.ProofOps;
            toProto(message: _115.ProofOps): Uint8Array;
            toProtoMsg(message: _115.ProofOps): _115.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _114.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _114.PublicKey;
            fromPartial(object: Partial<_114.PublicKey>): _114.PublicKey;
            fromAmino(object: _114.PublicKeyAmino): _114.PublicKey;
            toAmino(message: _114.PublicKey): _114.PublicKeyAmino;
            fromAminoMsg(object: _114.PublicKeyAminoMsg): _114.PublicKey;
            fromProtoMsg(message: _114.PublicKeyProtoMsg): _114.PublicKey;
            toProto(message: _114.PublicKey): Uint8Array;
            toProtoMsg(message: _114.PublicKey): _114.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _116.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _116.BitArray;
                fromPartial(object: Partial<_116.BitArray>): _116.BitArray;
                fromAmino(object: _116.BitArrayAmino): _116.BitArray;
                toAmino(message: _116.BitArray): _116.BitArrayAmino;
                fromAminoMsg(object: _116.BitArrayAminoMsg): _116.BitArray;
                fromProtoMsg(message: _116.BitArrayProtoMsg): _116.BitArray;
                toProto(message: _116.BitArray): Uint8Array;
                toProtoMsg(message: _116.BitArray): _116.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _117.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.NetAddress;
            fromPartial(object: Partial<_117.NetAddress>): _117.NetAddress;
            fromAmino(object: _117.NetAddressAmino): _117.NetAddress;
            toAmino(message: _117.NetAddress): _117.NetAddressAmino;
            fromAminoMsg(object: _117.NetAddressAminoMsg): _117.NetAddress;
            fromProtoMsg(message: _117.NetAddressProtoMsg): _117.NetAddress;
            toProto(message: _117.NetAddress): Uint8Array;
            toProtoMsg(message: _117.NetAddress): _117.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _117.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.ProtocolVersion;
            fromPartial(object: Partial<_117.ProtocolVersion>): _117.ProtocolVersion;
            fromAmino(object: _117.ProtocolVersionAmino): _117.ProtocolVersion;
            toAmino(message: _117.ProtocolVersion): _117.ProtocolVersionAmino;
            fromAminoMsg(object: _117.ProtocolVersionAminoMsg): _117.ProtocolVersion;
            fromProtoMsg(message: _117.ProtocolVersionProtoMsg): _117.ProtocolVersion;
            toProto(message: _117.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _117.ProtocolVersion): _117.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _117.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.DefaultNodeInfo;
            fromPartial(object: Partial<_117.DefaultNodeInfo>): _117.DefaultNodeInfo;
            fromAmino(object: _117.DefaultNodeInfoAmino): _117.DefaultNodeInfo;
            toAmino(message: _117.DefaultNodeInfo): _117.DefaultNodeInfoAmino;
            fromAminoMsg(object: _117.DefaultNodeInfoAminoMsg): _117.DefaultNodeInfo;
            fromProtoMsg(message: _117.DefaultNodeInfoProtoMsg): _117.DefaultNodeInfo;
            toProto(message: _117.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _117.DefaultNodeInfo): _117.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _117.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _117.DefaultNodeInfoOther;
            fromPartial(object: Partial<_117.DefaultNodeInfoOther>): _117.DefaultNodeInfoOther;
            fromAmino(object: _117.DefaultNodeInfoOtherAmino): _117.DefaultNodeInfoOther;
            toAmino(message: _117.DefaultNodeInfoOther): _117.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _117.DefaultNodeInfoOtherAminoMsg): _117.DefaultNodeInfoOther;
            fromProtoMsg(message: _117.DefaultNodeInfoOtherProtoMsg): _117.DefaultNodeInfoOther;
            toProto(message: _117.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _117.DefaultNodeInfoOther): _117.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _122.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.ValidatorSet;
            fromPartial(object: Partial<_122.ValidatorSet>): _122.ValidatorSet;
            fromAmino(object: _122.ValidatorSetAmino): _122.ValidatorSet;
            toAmino(message: _122.ValidatorSet): _122.ValidatorSetAmino;
            fromAminoMsg(object: _122.ValidatorSetAminoMsg): _122.ValidatorSet;
            fromProtoMsg(message: _122.ValidatorSetProtoMsg): _122.ValidatorSet;
            toProto(message: _122.ValidatorSet): Uint8Array;
            toProtoMsg(message: _122.ValidatorSet): _122.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _122.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.Validator;
            fromPartial(object: Partial<_122.Validator>): _122.Validator;
            fromAmino(object: _122.ValidatorAmino): _122.Validator;
            toAmino(message: _122.Validator): _122.ValidatorAmino;
            fromAminoMsg(object: _122.ValidatorAminoMsg): _122.Validator;
            fromProtoMsg(message: _122.ValidatorProtoMsg): _122.Validator;
            toProto(message: _122.Validator): Uint8Array;
            toProtoMsg(message: _122.Validator): _122.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _122.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _122.SimpleValidator;
            fromPartial(object: Partial<_122.SimpleValidator>): _122.SimpleValidator;
            fromAmino(object: _122.SimpleValidatorAmino): _122.SimpleValidator;
            toAmino(message: _122.SimpleValidator): _122.SimpleValidatorAmino;
            fromAminoMsg(object: _122.SimpleValidatorAminoMsg): _122.SimpleValidator;
            fromProtoMsg(message: _122.SimpleValidatorProtoMsg): _122.SimpleValidator;
            toProto(message: _122.SimpleValidator): Uint8Array;
            toProtoMsg(message: _122.SimpleValidator): _122.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _121.BlockIDFlag;
        blockIDFlagToJSON(object: _121.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _121.SignedMsgType;
        signedMsgTypeToJSON(object: _121.SignedMsgType): string;
        BlockIDFlag: typeof _121.BlockIDFlag;
        BlockIDFlagSDKType: typeof _121.BlockIDFlag;
        BlockIDFlagAmino: typeof _121.BlockIDFlag;
        SignedMsgType: typeof _121.SignedMsgType;
        SignedMsgTypeSDKType: typeof _121.SignedMsgType;
        SignedMsgTypeAmino: typeof _121.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _121.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.PartSetHeader;
            fromPartial(object: Partial<_121.PartSetHeader>): _121.PartSetHeader;
            fromAmino(object: _121.PartSetHeaderAmino): _121.PartSetHeader;
            toAmino(message: _121.PartSetHeader): _121.PartSetHeaderAmino;
            fromAminoMsg(object: _121.PartSetHeaderAminoMsg): _121.PartSetHeader;
            fromProtoMsg(message: _121.PartSetHeaderProtoMsg): _121.PartSetHeader;
            toProto(message: _121.PartSetHeader): Uint8Array;
            toProtoMsg(message: _121.PartSetHeader): _121.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _121.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.Part;
            fromPartial(object: Partial<_121.Part>): _121.Part;
            fromAmino(object: _121.PartAmino): _121.Part;
            toAmino(message: _121.Part): _121.PartAmino;
            fromAminoMsg(object: _121.PartAminoMsg): _121.Part;
            fromProtoMsg(message: _121.PartProtoMsg): _121.Part;
            toProto(message: _121.Part): Uint8Array;
            toProtoMsg(message: _121.Part): _121.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _121.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.BlockID;
            fromPartial(object: Partial<_121.BlockID>): _121.BlockID;
            fromAmino(object: _121.BlockIDAmino): _121.BlockID;
            toAmino(message: _121.BlockID): _121.BlockIDAmino;
            fromAminoMsg(object: _121.BlockIDAminoMsg): _121.BlockID;
            fromProtoMsg(message: _121.BlockIDProtoMsg): _121.BlockID;
            toProto(message: _121.BlockID): Uint8Array;
            toProtoMsg(message: _121.BlockID): _121.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _121.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.Header;
            fromPartial(object: Partial<_121.Header>): _121.Header;
            fromAmino(object: _121.HeaderAmino): _121.Header;
            toAmino(message: _121.Header): _121.HeaderAmino;
            fromAminoMsg(object: _121.HeaderAminoMsg): _121.Header;
            fromProtoMsg(message: _121.HeaderProtoMsg): _121.Header;
            toProto(message: _121.Header): Uint8Array;
            toProtoMsg(message: _121.Header): _121.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _121.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.Data;
            fromPartial(object: Partial<_121.Data>): _121.Data;
            fromAmino(object: _121.DataAmino): _121.Data;
            toAmino(message: _121.Data): _121.DataAmino;
            fromAminoMsg(object: _121.DataAminoMsg): _121.Data;
            fromProtoMsg(message: _121.DataProtoMsg): _121.Data;
            toProto(message: _121.Data): Uint8Array;
            toProtoMsg(message: _121.Data): _121.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _121.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.Vote;
            fromPartial(object: Partial<_121.Vote>): _121.Vote;
            fromAmino(object: _121.VoteAmino): _121.Vote;
            toAmino(message: _121.Vote): _121.VoteAmino;
            fromAminoMsg(object: _121.VoteAminoMsg): _121.Vote;
            fromProtoMsg(message: _121.VoteProtoMsg): _121.Vote;
            toProto(message: _121.Vote): Uint8Array;
            toProtoMsg(message: _121.Vote): _121.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _121.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.Commit;
            fromPartial(object: Partial<_121.Commit>): _121.Commit;
            fromAmino(object: _121.CommitAmino): _121.Commit;
            toAmino(message: _121.Commit): _121.CommitAmino;
            fromAminoMsg(object: _121.CommitAminoMsg): _121.Commit;
            fromProtoMsg(message: _121.CommitProtoMsg): _121.Commit;
            toProto(message: _121.Commit): Uint8Array;
            toProtoMsg(message: _121.Commit): _121.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _121.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.CommitSig;
            fromPartial(object: Partial<_121.CommitSig>): _121.CommitSig;
            fromAmino(object: _121.CommitSigAmino): _121.CommitSig;
            toAmino(message: _121.CommitSig): _121.CommitSigAmino;
            fromAminoMsg(object: _121.CommitSigAminoMsg): _121.CommitSig;
            fromProtoMsg(message: _121.CommitSigProtoMsg): _121.CommitSig;
            toProto(message: _121.CommitSig): Uint8Array;
            toProtoMsg(message: _121.CommitSig): _121.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _121.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.Proposal;
            fromPartial(object: Partial<_121.Proposal>): _121.Proposal;
            fromAmino(object: _121.ProposalAmino): _121.Proposal;
            toAmino(message: _121.Proposal): _121.ProposalAmino;
            fromAminoMsg(object: _121.ProposalAminoMsg): _121.Proposal;
            fromProtoMsg(message: _121.ProposalProtoMsg): _121.Proposal;
            toProto(message: _121.Proposal): Uint8Array;
            toProtoMsg(message: _121.Proposal): _121.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _121.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.SignedHeader;
            fromPartial(object: Partial<_121.SignedHeader>): _121.SignedHeader;
            fromAmino(object: _121.SignedHeaderAmino): _121.SignedHeader;
            toAmino(message: _121.SignedHeader): _121.SignedHeaderAmino;
            fromAminoMsg(object: _121.SignedHeaderAminoMsg): _121.SignedHeader;
            fromProtoMsg(message: _121.SignedHeaderProtoMsg): _121.SignedHeader;
            toProto(message: _121.SignedHeader): Uint8Array;
            toProtoMsg(message: _121.SignedHeader): _121.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _121.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.LightBlock;
            fromPartial(object: Partial<_121.LightBlock>): _121.LightBlock;
            fromAmino(object: _121.LightBlockAmino): _121.LightBlock;
            toAmino(message: _121.LightBlock): _121.LightBlockAmino;
            fromAminoMsg(object: _121.LightBlockAminoMsg): _121.LightBlock;
            fromProtoMsg(message: _121.LightBlockProtoMsg): _121.LightBlock;
            toProto(message: _121.LightBlock): Uint8Array;
            toProtoMsg(message: _121.LightBlock): _121.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _121.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.BlockMeta;
            fromPartial(object: Partial<_121.BlockMeta>): _121.BlockMeta;
            fromAmino(object: _121.BlockMetaAmino): _121.BlockMeta;
            toAmino(message: _121.BlockMeta): _121.BlockMetaAmino;
            fromAminoMsg(object: _121.BlockMetaAminoMsg): _121.BlockMeta;
            fromProtoMsg(message: _121.BlockMetaProtoMsg): _121.BlockMeta;
            toProto(message: _121.BlockMeta): Uint8Array;
            toProtoMsg(message: _121.BlockMeta): _121.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _121.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _121.TxProof;
            fromPartial(object: Partial<_121.TxProof>): _121.TxProof;
            fromAmino(object: _121.TxProofAmino): _121.TxProof;
            toAmino(message: _121.TxProof): _121.TxProofAmino;
            fromAminoMsg(object: _121.TxProofAminoMsg): _121.TxProof;
            fromProtoMsg(message: _121.TxProofProtoMsg): _121.TxProof;
            toProto(message: _121.TxProof): Uint8Array;
            toProtoMsg(message: _121.TxProof): _121.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _120.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.ConsensusParams;
            fromPartial(object: Partial<_120.ConsensusParams>): _120.ConsensusParams;
            fromAmino(object: _120.ConsensusParamsAmino): _120.ConsensusParams;
            toAmino(message: _120.ConsensusParams): _120.ConsensusParamsAmino;
            fromAminoMsg(object: _120.ConsensusParamsAminoMsg): _120.ConsensusParams;
            fromProtoMsg(message: _120.ConsensusParamsProtoMsg): _120.ConsensusParams;
            toProto(message: _120.ConsensusParams): Uint8Array;
            toProtoMsg(message: _120.ConsensusParams): _120.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _120.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.BlockParams;
            fromPartial(object: Partial<_120.BlockParams>): _120.BlockParams;
            fromAmino(object: _120.BlockParamsAmino): _120.BlockParams;
            toAmino(message: _120.BlockParams): _120.BlockParamsAmino;
            fromAminoMsg(object: _120.BlockParamsAminoMsg): _120.BlockParams;
            fromProtoMsg(message: _120.BlockParamsProtoMsg): _120.BlockParams;
            toProto(message: _120.BlockParams): Uint8Array;
            toProtoMsg(message: _120.BlockParams): _120.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _120.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.EvidenceParams;
            fromPartial(object: Partial<_120.EvidenceParams>): _120.EvidenceParams;
            fromAmino(object: _120.EvidenceParamsAmino): _120.EvidenceParams;
            toAmino(message: _120.EvidenceParams): _120.EvidenceParamsAmino;
            fromAminoMsg(object: _120.EvidenceParamsAminoMsg): _120.EvidenceParams;
            fromProtoMsg(message: _120.EvidenceParamsProtoMsg): _120.EvidenceParams;
            toProto(message: _120.EvidenceParams): Uint8Array;
            toProtoMsg(message: _120.EvidenceParams): _120.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _120.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.ValidatorParams;
            fromPartial(object: Partial<_120.ValidatorParams>): _120.ValidatorParams;
            fromAmino(object: _120.ValidatorParamsAmino): _120.ValidatorParams;
            toAmino(message: _120.ValidatorParams): _120.ValidatorParamsAmino;
            fromAminoMsg(object: _120.ValidatorParamsAminoMsg): _120.ValidatorParams;
            fromProtoMsg(message: _120.ValidatorParamsProtoMsg): _120.ValidatorParams;
            toProto(message: _120.ValidatorParams): Uint8Array;
            toProtoMsg(message: _120.ValidatorParams): _120.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _120.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.VersionParams;
            fromPartial(object: Partial<_120.VersionParams>): _120.VersionParams;
            fromAmino(object: _120.VersionParamsAmino): _120.VersionParams;
            toAmino(message: _120.VersionParams): _120.VersionParamsAmino;
            fromAminoMsg(object: _120.VersionParamsAminoMsg): _120.VersionParams;
            fromProtoMsg(message: _120.VersionParamsProtoMsg): _120.VersionParams;
            toProto(message: _120.VersionParams): Uint8Array;
            toProtoMsg(message: _120.VersionParams): _120.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _120.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _120.HashedParams;
            fromPartial(object: Partial<_120.HashedParams>): _120.HashedParams;
            fromAmino(object: _120.HashedParamsAmino): _120.HashedParams;
            toAmino(message: _120.HashedParams): _120.HashedParamsAmino;
            fromAminoMsg(object: _120.HashedParamsAminoMsg): _120.HashedParams;
            fromProtoMsg(message: _120.HashedParamsProtoMsg): _120.HashedParams;
            toProto(message: _120.HashedParams): Uint8Array;
            toProtoMsg(message: _120.HashedParams): _120.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _119.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.Evidence;
            fromPartial(object: Partial<_119.Evidence>): _119.Evidence;
            fromAmino(object: _119.EvidenceAmino): _119.Evidence;
            toAmino(message: _119.Evidence): _119.EvidenceAmino;
            fromAminoMsg(object: _119.EvidenceAminoMsg): _119.Evidence;
            fromProtoMsg(message: _119.EvidenceProtoMsg): _119.Evidence;
            toProto(message: _119.Evidence): Uint8Array;
            toProtoMsg(message: _119.Evidence): _119.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _119.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.DuplicateVoteEvidence;
            fromPartial(object: Partial<_119.DuplicateVoteEvidence>): _119.DuplicateVoteEvidence;
            fromAmino(object: _119.DuplicateVoteEvidenceAmino): _119.DuplicateVoteEvidence;
            toAmino(message: _119.DuplicateVoteEvidence): _119.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _119.DuplicateVoteEvidenceAminoMsg): _119.DuplicateVoteEvidence;
            fromProtoMsg(message: _119.DuplicateVoteEvidenceProtoMsg): _119.DuplicateVoteEvidence;
            toProto(message: _119.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _119.DuplicateVoteEvidence): _119.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _119.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.LightClientAttackEvidence;
            fromPartial(object: Partial<_119.LightClientAttackEvidence>): _119.LightClientAttackEvidence;
            fromAmino(object: _119.LightClientAttackEvidenceAmino): _119.LightClientAttackEvidence;
            toAmino(message: _119.LightClientAttackEvidence): _119.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _119.LightClientAttackEvidenceAminoMsg): _119.LightClientAttackEvidence;
            fromProtoMsg(message: _119.LightClientAttackEvidenceProtoMsg): _119.LightClientAttackEvidence;
            toProto(message: _119.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _119.LightClientAttackEvidence): _119.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _119.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _119.EvidenceList;
            fromPartial(object: Partial<_119.EvidenceList>): _119.EvidenceList;
            fromAmino(object: _119.EvidenceListAmino): _119.EvidenceList;
            toAmino(message: _119.EvidenceList): _119.EvidenceListAmino;
            fromAminoMsg(object: _119.EvidenceListAminoMsg): _119.EvidenceList;
            fromProtoMsg(message: _119.EvidenceListProtoMsg): _119.EvidenceList;
            toProto(message: _119.EvidenceList): Uint8Array;
            toProtoMsg(message: _119.EvidenceList): _119.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _118.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _118.Block;
            fromPartial(object: Partial<_118.Block>): _118.Block;
            fromAmino(object: _118.BlockAmino): _118.Block;
            toAmino(message: _118.Block): _118.BlockAmino;
            fromAminoMsg(object: _118.BlockAminoMsg): _118.Block;
            fromProtoMsg(message: _118.BlockProtoMsg): _118.Block;
            toProto(message: _118.Block): Uint8Array;
            toProtoMsg(message: _118.Block): _118.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _123.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.App;
            fromPartial(object: Partial<_123.App>): _123.App;
            fromAmino(object: _123.AppAmino): _123.App;
            toAmino(message: _123.App): _123.AppAmino;
            fromAminoMsg(object: _123.AppAminoMsg): _123.App;
            fromProtoMsg(message: _123.AppProtoMsg): _123.App;
            toProto(message: _123.App): Uint8Array;
            toProtoMsg(message: _123.App): _123.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _123.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _123.Consensus;
            fromPartial(object: Partial<_123.Consensus>): _123.Consensus;
            fromAmino(object: _123.ConsensusAmino): _123.Consensus;
            toAmino(message: _123.Consensus): _123.ConsensusAmino;
            fromAminoMsg(object: _123.ConsensusAminoMsg): _123.Consensus;
            fromProtoMsg(message: _123.ConsensusProtoMsg): _123.Consensus;
            toProto(message: _123.Consensus): Uint8Array;
            toProtoMsg(message: _123.Consensus): _123.ConsensusProtoMsg;
        };
    };
}
