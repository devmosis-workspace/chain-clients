import * as _103 from "./abci/types";
import * as _104 from "./crypto/keys";
import * as _105 from "./crypto/proof";
import * as _106 from "./libs/bits/types";
import * as _107 from "./p2p/types";
import * as _108 from "./types/block";
import * as _109 from "./types/evidence";
import * as _110 from "./types/params";
import * as _111 from "./types/types";
import * as _112 from "./types/validator";
import * as _113 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _103.CheckTxType;
        checkTxTypeToJSON(object: _103.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _103.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _103.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _103.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _103.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _103.EvidenceType;
        evidenceTypeToJSON(object: _103.EvidenceType): string;
        CheckTxType: typeof _103.CheckTxType;
        CheckTxTypeSDKType: typeof _103.CheckTxType;
        CheckTxTypeAmino: typeof _103.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _103.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _103.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _103.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _103.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _103.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _103.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _103.EvidenceType;
        EvidenceTypeSDKType: typeof _103.EvidenceType;
        EvidenceTypeAmino: typeof _103.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _103.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Request;
            fromPartial(object: Partial<_103.Request>): _103.Request;
            fromAmino(object: _103.RequestAmino): _103.Request;
            toAmino(message: _103.Request): _103.RequestAmino;
            fromAminoMsg(object: _103.RequestAminoMsg): _103.Request;
            fromProtoMsg(message: _103.RequestProtoMsg): _103.Request;
            toProto(message: _103.Request): Uint8Array;
            toProtoMsg(message: _103.Request): _103.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _103.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestEcho;
            fromPartial(object: Partial<_103.RequestEcho>): _103.RequestEcho;
            fromAmino(object: _103.RequestEchoAmino): _103.RequestEcho;
            toAmino(message: _103.RequestEcho): _103.RequestEchoAmino;
            fromAminoMsg(object: _103.RequestEchoAminoMsg): _103.RequestEcho;
            fromProtoMsg(message: _103.RequestEchoProtoMsg): _103.RequestEcho;
            toProto(message: _103.RequestEcho): Uint8Array;
            toProtoMsg(message: _103.RequestEcho): _103.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _103.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _103.RequestFlush;
            fromPartial(_: Partial<_103.RequestFlush>): _103.RequestFlush;
            fromAmino(_: _103.RequestFlushAmino): _103.RequestFlush;
            toAmino(_: _103.RequestFlush): _103.RequestFlushAmino;
            fromAminoMsg(object: _103.RequestFlushAminoMsg): _103.RequestFlush;
            fromProtoMsg(message: _103.RequestFlushProtoMsg): _103.RequestFlush;
            toProto(message: _103.RequestFlush): Uint8Array;
            toProtoMsg(message: _103.RequestFlush): _103.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _103.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestInfo;
            fromPartial(object: Partial<_103.RequestInfo>): _103.RequestInfo;
            fromAmino(object: _103.RequestInfoAmino): _103.RequestInfo;
            toAmino(message: _103.RequestInfo): _103.RequestInfoAmino;
            fromAminoMsg(object: _103.RequestInfoAminoMsg): _103.RequestInfo;
            fromProtoMsg(message: _103.RequestInfoProtoMsg): _103.RequestInfo;
            toProto(message: _103.RequestInfo): Uint8Array;
            toProtoMsg(message: _103.RequestInfo): _103.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _103.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestSetOption;
            fromPartial(object: Partial<_103.RequestSetOption>): _103.RequestSetOption;
            fromAmino(object: _103.RequestSetOptionAmino): _103.RequestSetOption;
            toAmino(message: _103.RequestSetOption): _103.RequestSetOptionAmino;
            fromAminoMsg(object: _103.RequestSetOptionAminoMsg): _103.RequestSetOption;
            fromProtoMsg(message: _103.RequestSetOptionProtoMsg): _103.RequestSetOption;
            toProto(message: _103.RequestSetOption): Uint8Array;
            toProtoMsg(message: _103.RequestSetOption): _103.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _103.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestInitChain;
            fromPartial(object: Partial<_103.RequestInitChain>): _103.RequestInitChain;
            fromAmino(object: _103.RequestInitChainAmino): _103.RequestInitChain;
            toAmino(message: _103.RequestInitChain): _103.RequestInitChainAmino;
            fromAminoMsg(object: _103.RequestInitChainAminoMsg): _103.RequestInitChain;
            fromProtoMsg(message: _103.RequestInitChainProtoMsg): _103.RequestInitChain;
            toProto(message: _103.RequestInitChain): Uint8Array;
            toProtoMsg(message: _103.RequestInitChain): _103.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _103.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestQuery;
            fromPartial(object: Partial<_103.RequestQuery>): _103.RequestQuery;
            fromAmino(object: _103.RequestQueryAmino): _103.RequestQuery;
            toAmino(message: _103.RequestQuery): _103.RequestQueryAmino;
            fromAminoMsg(object: _103.RequestQueryAminoMsg): _103.RequestQuery;
            fromProtoMsg(message: _103.RequestQueryProtoMsg): _103.RequestQuery;
            toProto(message: _103.RequestQuery): Uint8Array;
            toProtoMsg(message: _103.RequestQuery): _103.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _103.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestBeginBlock;
            fromPartial(object: Partial<_103.RequestBeginBlock>): _103.RequestBeginBlock;
            fromAmino(object: _103.RequestBeginBlockAmino): _103.RequestBeginBlock;
            toAmino(message: _103.RequestBeginBlock): _103.RequestBeginBlockAmino;
            fromAminoMsg(object: _103.RequestBeginBlockAminoMsg): _103.RequestBeginBlock;
            fromProtoMsg(message: _103.RequestBeginBlockProtoMsg): _103.RequestBeginBlock;
            toProto(message: _103.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _103.RequestBeginBlock): _103.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _103.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestCheckTx;
            fromPartial(object: Partial<_103.RequestCheckTx>): _103.RequestCheckTx;
            fromAmino(object: _103.RequestCheckTxAmino): _103.RequestCheckTx;
            toAmino(message: _103.RequestCheckTx): _103.RequestCheckTxAmino;
            fromAminoMsg(object: _103.RequestCheckTxAminoMsg): _103.RequestCheckTx;
            fromProtoMsg(message: _103.RequestCheckTxProtoMsg): _103.RequestCheckTx;
            toProto(message: _103.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _103.RequestCheckTx): _103.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _103.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestDeliverTx;
            fromPartial(object: Partial<_103.RequestDeliverTx>): _103.RequestDeliverTx;
            fromAmino(object: _103.RequestDeliverTxAmino): _103.RequestDeliverTx;
            toAmino(message: _103.RequestDeliverTx): _103.RequestDeliverTxAmino;
            fromAminoMsg(object: _103.RequestDeliverTxAminoMsg): _103.RequestDeliverTx;
            fromProtoMsg(message: _103.RequestDeliverTxProtoMsg): _103.RequestDeliverTx;
            toProto(message: _103.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _103.RequestDeliverTx): _103.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _103.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestEndBlock;
            fromPartial(object: Partial<_103.RequestEndBlock>): _103.RequestEndBlock;
            fromAmino(object: _103.RequestEndBlockAmino): _103.RequestEndBlock;
            toAmino(message: _103.RequestEndBlock): _103.RequestEndBlockAmino;
            fromAminoMsg(object: _103.RequestEndBlockAminoMsg): _103.RequestEndBlock;
            fromProtoMsg(message: _103.RequestEndBlockProtoMsg): _103.RequestEndBlock;
            toProto(message: _103.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _103.RequestEndBlock): _103.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _103.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _103.RequestCommit;
            fromPartial(_: Partial<_103.RequestCommit>): _103.RequestCommit;
            fromAmino(_: _103.RequestCommitAmino): _103.RequestCommit;
            toAmino(_: _103.RequestCommit): _103.RequestCommitAmino;
            fromAminoMsg(object: _103.RequestCommitAminoMsg): _103.RequestCommit;
            fromProtoMsg(message: _103.RequestCommitProtoMsg): _103.RequestCommit;
            toProto(message: _103.RequestCommit): Uint8Array;
            toProtoMsg(message: _103.RequestCommit): _103.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _103.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _103.RequestListSnapshots;
            fromPartial(_: Partial<_103.RequestListSnapshots>): _103.RequestListSnapshots;
            fromAmino(_: _103.RequestListSnapshotsAmino): _103.RequestListSnapshots;
            toAmino(_: _103.RequestListSnapshots): _103.RequestListSnapshotsAmino;
            fromAminoMsg(object: _103.RequestListSnapshotsAminoMsg): _103.RequestListSnapshots;
            fromProtoMsg(message: _103.RequestListSnapshotsProtoMsg): _103.RequestListSnapshots;
            toProto(message: _103.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _103.RequestListSnapshots): _103.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _103.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestOfferSnapshot;
            fromPartial(object: Partial<_103.RequestOfferSnapshot>): _103.RequestOfferSnapshot;
            fromAmino(object: _103.RequestOfferSnapshotAmino): _103.RequestOfferSnapshot;
            toAmino(message: _103.RequestOfferSnapshot): _103.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _103.RequestOfferSnapshotAminoMsg): _103.RequestOfferSnapshot;
            fromProtoMsg(message: _103.RequestOfferSnapshotProtoMsg): _103.RequestOfferSnapshot;
            toProto(message: _103.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _103.RequestOfferSnapshot): _103.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _103.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_103.RequestLoadSnapshotChunk>): _103.RequestLoadSnapshotChunk;
            fromAmino(object: _103.RequestLoadSnapshotChunkAmino): _103.RequestLoadSnapshotChunk;
            toAmino(message: _103.RequestLoadSnapshotChunk): _103.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _103.RequestLoadSnapshotChunkAminoMsg): _103.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _103.RequestLoadSnapshotChunkProtoMsg): _103.RequestLoadSnapshotChunk;
            toProto(message: _103.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _103.RequestLoadSnapshotChunk): _103.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _103.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_103.RequestApplySnapshotChunk>): _103.RequestApplySnapshotChunk;
            fromAmino(object: _103.RequestApplySnapshotChunkAmino): _103.RequestApplySnapshotChunk;
            toAmino(message: _103.RequestApplySnapshotChunk): _103.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _103.RequestApplySnapshotChunkAminoMsg): _103.RequestApplySnapshotChunk;
            fromProtoMsg(message: _103.RequestApplySnapshotChunkProtoMsg): _103.RequestApplySnapshotChunk;
            toProto(message: _103.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _103.RequestApplySnapshotChunk): _103.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _103.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Response;
            fromPartial(object: Partial<_103.Response>): _103.Response;
            fromAmino(object: _103.ResponseAmino): _103.Response;
            toAmino(message: _103.Response): _103.ResponseAmino;
            fromAminoMsg(object: _103.ResponseAminoMsg): _103.Response;
            fromProtoMsg(message: _103.ResponseProtoMsg): _103.Response;
            toProto(message: _103.Response): Uint8Array;
            toProtoMsg(message: _103.Response): _103.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _103.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseException;
            fromPartial(object: Partial<_103.ResponseException>): _103.ResponseException;
            fromAmino(object: _103.ResponseExceptionAmino): _103.ResponseException;
            toAmino(message: _103.ResponseException): _103.ResponseExceptionAmino;
            fromAminoMsg(object: _103.ResponseExceptionAminoMsg): _103.ResponseException;
            fromProtoMsg(message: _103.ResponseExceptionProtoMsg): _103.ResponseException;
            toProto(message: _103.ResponseException): Uint8Array;
            toProtoMsg(message: _103.ResponseException): _103.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _103.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseEcho;
            fromPartial(object: Partial<_103.ResponseEcho>): _103.ResponseEcho;
            fromAmino(object: _103.ResponseEchoAmino): _103.ResponseEcho;
            toAmino(message: _103.ResponseEcho): _103.ResponseEchoAmino;
            fromAminoMsg(object: _103.ResponseEchoAminoMsg): _103.ResponseEcho;
            fromProtoMsg(message: _103.ResponseEchoProtoMsg): _103.ResponseEcho;
            toProto(message: _103.ResponseEcho): Uint8Array;
            toProtoMsg(message: _103.ResponseEcho): _103.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _103.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _103.ResponseFlush;
            fromPartial(_: Partial<_103.ResponseFlush>): _103.ResponseFlush;
            fromAmino(_: _103.ResponseFlushAmino): _103.ResponseFlush;
            toAmino(_: _103.ResponseFlush): _103.ResponseFlushAmino;
            fromAminoMsg(object: _103.ResponseFlushAminoMsg): _103.ResponseFlush;
            fromProtoMsg(message: _103.ResponseFlushProtoMsg): _103.ResponseFlush;
            toProto(message: _103.ResponseFlush): Uint8Array;
            toProtoMsg(message: _103.ResponseFlush): _103.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _103.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseInfo;
            fromPartial(object: Partial<_103.ResponseInfo>): _103.ResponseInfo;
            fromAmino(object: _103.ResponseInfoAmino): _103.ResponseInfo;
            toAmino(message: _103.ResponseInfo): _103.ResponseInfoAmino;
            fromAminoMsg(object: _103.ResponseInfoAminoMsg): _103.ResponseInfo;
            fromProtoMsg(message: _103.ResponseInfoProtoMsg): _103.ResponseInfo;
            toProto(message: _103.ResponseInfo): Uint8Array;
            toProtoMsg(message: _103.ResponseInfo): _103.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _103.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseSetOption;
            fromPartial(object: Partial<_103.ResponseSetOption>): _103.ResponseSetOption;
            fromAmino(object: _103.ResponseSetOptionAmino): _103.ResponseSetOption;
            toAmino(message: _103.ResponseSetOption): _103.ResponseSetOptionAmino;
            fromAminoMsg(object: _103.ResponseSetOptionAminoMsg): _103.ResponseSetOption;
            fromProtoMsg(message: _103.ResponseSetOptionProtoMsg): _103.ResponseSetOption;
            toProto(message: _103.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _103.ResponseSetOption): _103.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _103.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseInitChain;
            fromPartial(object: Partial<_103.ResponseInitChain>): _103.ResponseInitChain;
            fromAmino(object: _103.ResponseInitChainAmino): _103.ResponseInitChain;
            toAmino(message: _103.ResponseInitChain): _103.ResponseInitChainAmino;
            fromAminoMsg(object: _103.ResponseInitChainAminoMsg): _103.ResponseInitChain;
            fromProtoMsg(message: _103.ResponseInitChainProtoMsg): _103.ResponseInitChain;
            toProto(message: _103.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _103.ResponseInitChain): _103.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _103.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseQuery;
            fromPartial(object: Partial<_103.ResponseQuery>): _103.ResponseQuery;
            fromAmino(object: _103.ResponseQueryAmino): _103.ResponseQuery;
            toAmino(message: _103.ResponseQuery): _103.ResponseQueryAmino;
            fromAminoMsg(object: _103.ResponseQueryAminoMsg): _103.ResponseQuery;
            fromProtoMsg(message: _103.ResponseQueryProtoMsg): _103.ResponseQuery;
            toProto(message: _103.ResponseQuery): Uint8Array;
            toProtoMsg(message: _103.ResponseQuery): _103.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _103.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseBeginBlock;
            fromPartial(object: Partial<_103.ResponseBeginBlock>): _103.ResponseBeginBlock;
            fromAmino(object: _103.ResponseBeginBlockAmino): _103.ResponseBeginBlock;
            toAmino(message: _103.ResponseBeginBlock): _103.ResponseBeginBlockAmino;
            fromAminoMsg(object: _103.ResponseBeginBlockAminoMsg): _103.ResponseBeginBlock;
            fromProtoMsg(message: _103.ResponseBeginBlockProtoMsg): _103.ResponseBeginBlock;
            toProto(message: _103.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _103.ResponseBeginBlock): _103.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _103.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseCheckTx;
            fromPartial(object: Partial<_103.ResponseCheckTx>): _103.ResponseCheckTx;
            fromAmino(object: _103.ResponseCheckTxAmino): _103.ResponseCheckTx;
            toAmino(message: _103.ResponseCheckTx): _103.ResponseCheckTxAmino;
            fromAminoMsg(object: _103.ResponseCheckTxAminoMsg): _103.ResponseCheckTx;
            fromProtoMsg(message: _103.ResponseCheckTxProtoMsg): _103.ResponseCheckTx;
            toProto(message: _103.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _103.ResponseCheckTx): _103.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _103.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseDeliverTx;
            fromPartial(object: Partial<_103.ResponseDeliverTx>): _103.ResponseDeliverTx;
            fromAmino(object: _103.ResponseDeliverTxAmino): _103.ResponseDeliverTx;
            toAmino(message: _103.ResponseDeliverTx): _103.ResponseDeliverTxAmino;
            fromAminoMsg(object: _103.ResponseDeliverTxAminoMsg): _103.ResponseDeliverTx;
            fromProtoMsg(message: _103.ResponseDeliverTxProtoMsg): _103.ResponseDeliverTx;
            toProto(message: _103.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _103.ResponseDeliverTx): _103.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _103.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseEndBlock;
            fromPartial(object: Partial<_103.ResponseEndBlock>): _103.ResponseEndBlock;
            fromAmino(object: _103.ResponseEndBlockAmino): _103.ResponseEndBlock;
            toAmino(message: _103.ResponseEndBlock): _103.ResponseEndBlockAmino;
            fromAminoMsg(object: _103.ResponseEndBlockAminoMsg): _103.ResponseEndBlock;
            fromProtoMsg(message: _103.ResponseEndBlockProtoMsg): _103.ResponseEndBlock;
            toProto(message: _103.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _103.ResponseEndBlock): _103.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _103.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseCommit;
            fromPartial(object: Partial<_103.ResponseCommit>): _103.ResponseCommit;
            fromAmino(object: _103.ResponseCommitAmino): _103.ResponseCommit;
            toAmino(message: _103.ResponseCommit): _103.ResponseCommitAmino;
            fromAminoMsg(object: _103.ResponseCommitAminoMsg): _103.ResponseCommit;
            fromProtoMsg(message: _103.ResponseCommitProtoMsg): _103.ResponseCommit;
            toProto(message: _103.ResponseCommit): Uint8Array;
            toProtoMsg(message: _103.ResponseCommit): _103.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _103.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseListSnapshots;
            fromPartial(object: Partial<_103.ResponseListSnapshots>): _103.ResponseListSnapshots;
            fromAmino(object: _103.ResponseListSnapshotsAmino): _103.ResponseListSnapshots;
            toAmino(message: _103.ResponseListSnapshots): _103.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _103.ResponseListSnapshotsAminoMsg): _103.ResponseListSnapshots;
            fromProtoMsg(message: _103.ResponseListSnapshotsProtoMsg): _103.ResponseListSnapshots;
            toProto(message: _103.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _103.ResponseListSnapshots): _103.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _103.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseOfferSnapshot;
            fromPartial(object: Partial<_103.ResponseOfferSnapshot>): _103.ResponseOfferSnapshot;
            fromAmino(object: _103.ResponseOfferSnapshotAmino): _103.ResponseOfferSnapshot;
            toAmino(message: _103.ResponseOfferSnapshot): _103.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _103.ResponseOfferSnapshotAminoMsg): _103.ResponseOfferSnapshot;
            fromProtoMsg(message: _103.ResponseOfferSnapshotProtoMsg): _103.ResponseOfferSnapshot;
            toProto(message: _103.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _103.ResponseOfferSnapshot): _103.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _103.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_103.ResponseLoadSnapshotChunk>): _103.ResponseLoadSnapshotChunk;
            fromAmino(object: _103.ResponseLoadSnapshotChunkAmino): _103.ResponseLoadSnapshotChunk;
            toAmino(message: _103.ResponseLoadSnapshotChunk): _103.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _103.ResponseLoadSnapshotChunkAminoMsg): _103.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _103.ResponseLoadSnapshotChunkProtoMsg): _103.ResponseLoadSnapshotChunk;
            toProto(message: _103.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _103.ResponseLoadSnapshotChunk): _103.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _103.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_103.ResponseApplySnapshotChunk>): _103.ResponseApplySnapshotChunk;
            fromAmino(object: _103.ResponseApplySnapshotChunkAmino): _103.ResponseApplySnapshotChunk;
            toAmino(message: _103.ResponseApplySnapshotChunk): _103.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _103.ResponseApplySnapshotChunkAminoMsg): _103.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _103.ResponseApplySnapshotChunkProtoMsg): _103.ResponseApplySnapshotChunk;
            toProto(message: _103.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _103.ResponseApplySnapshotChunk): _103.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _103.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ConsensusParams;
            fromPartial(object: Partial<_103.ConsensusParams>): _103.ConsensusParams;
            fromAmino(object: _103.ConsensusParamsAmino): _103.ConsensusParams;
            toAmino(message: _103.ConsensusParams): _103.ConsensusParamsAmino;
            fromAminoMsg(object: _103.ConsensusParamsAminoMsg): _103.ConsensusParams;
            fromProtoMsg(message: _103.ConsensusParamsProtoMsg): _103.ConsensusParams;
            toProto(message: _103.ConsensusParams): Uint8Array;
            toProtoMsg(message: _103.ConsensusParams): _103.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _103.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.BlockParams;
            fromPartial(object: Partial<_103.BlockParams>): _103.BlockParams;
            fromAmino(object: _103.BlockParamsAmino): _103.BlockParams;
            toAmino(message: _103.BlockParams): _103.BlockParamsAmino;
            fromAminoMsg(object: _103.BlockParamsAminoMsg): _103.BlockParams;
            fromProtoMsg(message: _103.BlockParamsProtoMsg): _103.BlockParams;
            toProto(message: _103.BlockParams): Uint8Array;
            toProtoMsg(message: _103.BlockParams): _103.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _103.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.LastCommitInfo;
            fromPartial(object: Partial<_103.LastCommitInfo>): _103.LastCommitInfo;
            fromAmino(object: _103.LastCommitInfoAmino): _103.LastCommitInfo;
            toAmino(message: _103.LastCommitInfo): _103.LastCommitInfoAmino;
            fromAminoMsg(object: _103.LastCommitInfoAminoMsg): _103.LastCommitInfo;
            fromProtoMsg(message: _103.LastCommitInfoProtoMsg): _103.LastCommitInfo;
            toProto(message: _103.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _103.LastCommitInfo): _103.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _103.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Event;
            fromPartial(object: Partial<_103.Event>): _103.Event;
            fromAmino(object: _103.EventAmino): _103.Event;
            toAmino(message: _103.Event): _103.EventAmino;
            fromAminoMsg(object: _103.EventAminoMsg): _103.Event;
            fromProtoMsg(message: _103.EventProtoMsg): _103.Event;
            toProto(message: _103.Event): Uint8Array;
            toProtoMsg(message: _103.Event): _103.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _103.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.EventAttribute;
            fromPartial(object: Partial<_103.EventAttribute>): _103.EventAttribute;
            fromAmino(object: _103.EventAttributeAmino): _103.EventAttribute;
            toAmino(message: _103.EventAttribute): _103.EventAttributeAmino;
            fromAminoMsg(object: _103.EventAttributeAminoMsg): _103.EventAttribute;
            fromProtoMsg(message: _103.EventAttributeProtoMsg): _103.EventAttribute;
            toProto(message: _103.EventAttribute): Uint8Array;
            toProtoMsg(message: _103.EventAttribute): _103.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _103.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.TxResult;
            fromPartial(object: Partial<_103.TxResult>): _103.TxResult;
            fromAmino(object: _103.TxResultAmino): _103.TxResult;
            toAmino(message: _103.TxResult): _103.TxResultAmino;
            fromAminoMsg(object: _103.TxResultAminoMsg): _103.TxResult;
            fromProtoMsg(message: _103.TxResultProtoMsg): _103.TxResult;
            toProto(message: _103.TxResult): Uint8Array;
            toProtoMsg(message: _103.TxResult): _103.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _103.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Validator;
            fromPartial(object: Partial<_103.Validator>): _103.Validator;
            fromAmino(object: _103.ValidatorAmino): _103.Validator;
            toAmino(message: _103.Validator): _103.ValidatorAmino;
            fromAminoMsg(object: _103.ValidatorAminoMsg): _103.Validator;
            fromProtoMsg(message: _103.ValidatorProtoMsg): _103.Validator;
            toProto(message: _103.Validator): Uint8Array;
            toProtoMsg(message: _103.Validator): _103.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _103.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.ValidatorUpdate;
            fromPartial(object: Partial<_103.ValidatorUpdate>): _103.ValidatorUpdate;
            fromAmino(object: _103.ValidatorUpdateAmino): _103.ValidatorUpdate;
            toAmino(message: _103.ValidatorUpdate): _103.ValidatorUpdateAmino;
            fromAminoMsg(object: _103.ValidatorUpdateAminoMsg): _103.ValidatorUpdate;
            fromProtoMsg(message: _103.ValidatorUpdateProtoMsg): _103.ValidatorUpdate;
            toProto(message: _103.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _103.ValidatorUpdate): _103.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _103.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.VoteInfo;
            fromPartial(object: Partial<_103.VoteInfo>): _103.VoteInfo;
            fromAmino(object: _103.VoteInfoAmino): _103.VoteInfo;
            toAmino(message: _103.VoteInfo): _103.VoteInfoAmino;
            fromAminoMsg(object: _103.VoteInfoAminoMsg): _103.VoteInfo;
            fromProtoMsg(message: _103.VoteInfoProtoMsg): _103.VoteInfo;
            toProto(message: _103.VoteInfo): Uint8Array;
            toProtoMsg(message: _103.VoteInfo): _103.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _103.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Evidence;
            fromPartial(object: Partial<_103.Evidence>): _103.Evidence;
            fromAmino(object: _103.EvidenceAmino): _103.Evidence;
            toAmino(message: _103.Evidence): _103.EvidenceAmino;
            fromAminoMsg(object: _103.EvidenceAminoMsg): _103.Evidence;
            fromProtoMsg(message: _103.EvidenceProtoMsg): _103.Evidence;
            toProto(message: _103.Evidence): Uint8Array;
            toProtoMsg(message: _103.Evidence): _103.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _103.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _103.Snapshot;
            fromPartial(object: Partial<_103.Snapshot>): _103.Snapshot;
            fromAmino(object: _103.SnapshotAmino): _103.Snapshot;
            toAmino(message: _103.Snapshot): _103.SnapshotAmino;
            fromAminoMsg(object: _103.SnapshotAminoMsg): _103.Snapshot;
            fromProtoMsg(message: _103.SnapshotProtoMsg): _103.Snapshot;
            toProto(message: _103.Snapshot): Uint8Array;
            toProtoMsg(message: _103.Snapshot): _103.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _105.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _105.Proof;
            fromPartial(object: Partial<_105.Proof>): _105.Proof;
            fromAmino(object: _105.ProofAmino): _105.Proof;
            toAmino(message: _105.Proof): _105.ProofAmino;
            fromAminoMsg(object: _105.ProofAminoMsg): _105.Proof;
            fromProtoMsg(message: _105.ProofProtoMsg): _105.Proof;
            toProto(message: _105.Proof): Uint8Array;
            toProtoMsg(message: _105.Proof): _105.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _105.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _105.ValueOp;
            fromPartial(object: Partial<_105.ValueOp>): _105.ValueOp;
            fromAmino(object: _105.ValueOpAmino): _105.ValueOp;
            toAmino(message: _105.ValueOp): _105.ValueOpAmino;
            fromAminoMsg(object: _105.ValueOpAminoMsg): _105.ValueOp;
            fromProtoMsg(message: _105.ValueOpProtoMsg): _105.ValueOp;
            toProto(message: _105.ValueOp): Uint8Array;
            toProtoMsg(message: _105.ValueOp): _105.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _105.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _105.DominoOp;
            fromPartial(object: Partial<_105.DominoOp>): _105.DominoOp;
            fromAmino(object: _105.DominoOpAmino): _105.DominoOp;
            toAmino(message: _105.DominoOp): _105.DominoOpAmino;
            fromAminoMsg(object: _105.DominoOpAminoMsg): _105.DominoOp;
            fromProtoMsg(message: _105.DominoOpProtoMsg): _105.DominoOp;
            toProto(message: _105.DominoOp): Uint8Array;
            toProtoMsg(message: _105.DominoOp): _105.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _105.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _105.ProofOp;
            fromPartial(object: Partial<_105.ProofOp>): _105.ProofOp;
            fromAmino(object: _105.ProofOpAmino): _105.ProofOp;
            toAmino(message: _105.ProofOp): _105.ProofOpAmino;
            fromAminoMsg(object: _105.ProofOpAminoMsg): _105.ProofOp;
            fromProtoMsg(message: _105.ProofOpProtoMsg): _105.ProofOp;
            toProto(message: _105.ProofOp): Uint8Array;
            toProtoMsg(message: _105.ProofOp): _105.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _105.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _105.ProofOps;
            fromPartial(object: Partial<_105.ProofOps>): _105.ProofOps;
            fromAmino(object: _105.ProofOpsAmino): _105.ProofOps;
            toAmino(message: _105.ProofOps): _105.ProofOpsAmino;
            fromAminoMsg(object: _105.ProofOpsAminoMsg): _105.ProofOps;
            fromProtoMsg(message: _105.ProofOpsProtoMsg): _105.ProofOps;
            toProto(message: _105.ProofOps): Uint8Array;
            toProtoMsg(message: _105.ProofOps): _105.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _104.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _104.PublicKey;
            fromPartial(object: Partial<_104.PublicKey>): _104.PublicKey;
            fromAmino(object: _104.PublicKeyAmino): _104.PublicKey;
            toAmino(message: _104.PublicKey): _104.PublicKeyAmino;
            fromAminoMsg(object: _104.PublicKeyAminoMsg): _104.PublicKey;
            fromProtoMsg(message: _104.PublicKeyProtoMsg): _104.PublicKey;
            toProto(message: _104.PublicKey): Uint8Array;
            toProtoMsg(message: _104.PublicKey): _104.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _106.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _106.BitArray;
                fromPartial(object: Partial<_106.BitArray>): _106.BitArray;
                fromAmino(object: _106.BitArrayAmino): _106.BitArray;
                toAmino(message: _106.BitArray): _106.BitArrayAmino;
                fromAminoMsg(object: _106.BitArrayAminoMsg): _106.BitArray;
                fromProtoMsg(message: _106.BitArrayProtoMsg): _106.BitArray;
                toProto(message: _106.BitArray): Uint8Array;
                toProtoMsg(message: _106.BitArray): _106.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _107.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _107.NetAddress;
            fromPartial(object: Partial<_107.NetAddress>): _107.NetAddress;
            fromAmino(object: _107.NetAddressAmino): _107.NetAddress;
            toAmino(message: _107.NetAddress): _107.NetAddressAmino;
            fromAminoMsg(object: _107.NetAddressAminoMsg): _107.NetAddress;
            fromProtoMsg(message: _107.NetAddressProtoMsg): _107.NetAddress;
            toProto(message: _107.NetAddress): Uint8Array;
            toProtoMsg(message: _107.NetAddress): _107.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _107.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _107.ProtocolVersion;
            fromPartial(object: Partial<_107.ProtocolVersion>): _107.ProtocolVersion;
            fromAmino(object: _107.ProtocolVersionAmino): _107.ProtocolVersion;
            toAmino(message: _107.ProtocolVersion): _107.ProtocolVersionAmino;
            fromAminoMsg(object: _107.ProtocolVersionAminoMsg): _107.ProtocolVersion;
            fromProtoMsg(message: _107.ProtocolVersionProtoMsg): _107.ProtocolVersion;
            toProto(message: _107.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _107.ProtocolVersion): _107.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _107.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _107.DefaultNodeInfo;
            fromPartial(object: Partial<_107.DefaultNodeInfo>): _107.DefaultNodeInfo;
            fromAmino(object: _107.DefaultNodeInfoAmino): _107.DefaultNodeInfo;
            toAmino(message: _107.DefaultNodeInfo): _107.DefaultNodeInfoAmino;
            fromAminoMsg(object: _107.DefaultNodeInfoAminoMsg): _107.DefaultNodeInfo;
            fromProtoMsg(message: _107.DefaultNodeInfoProtoMsg): _107.DefaultNodeInfo;
            toProto(message: _107.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _107.DefaultNodeInfo): _107.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _107.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _107.DefaultNodeInfoOther;
            fromPartial(object: Partial<_107.DefaultNodeInfoOther>): _107.DefaultNodeInfoOther;
            fromAmino(object: _107.DefaultNodeInfoOtherAmino): _107.DefaultNodeInfoOther;
            toAmino(message: _107.DefaultNodeInfoOther): _107.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _107.DefaultNodeInfoOtherAminoMsg): _107.DefaultNodeInfoOther;
            fromProtoMsg(message: _107.DefaultNodeInfoOtherProtoMsg): _107.DefaultNodeInfoOther;
            toProto(message: _107.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _107.DefaultNodeInfoOther): _107.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _112.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.ValidatorSet;
            fromPartial(object: Partial<_112.ValidatorSet>): _112.ValidatorSet;
            fromAmino(object: _112.ValidatorSetAmino): _112.ValidatorSet;
            toAmino(message: _112.ValidatorSet): _112.ValidatorSetAmino;
            fromAminoMsg(object: _112.ValidatorSetAminoMsg): _112.ValidatorSet;
            fromProtoMsg(message: _112.ValidatorSetProtoMsg): _112.ValidatorSet;
            toProto(message: _112.ValidatorSet): Uint8Array;
            toProtoMsg(message: _112.ValidatorSet): _112.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _112.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.Validator;
            fromPartial(object: Partial<_112.Validator>): _112.Validator;
            fromAmino(object: _112.ValidatorAmino): _112.Validator;
            toAmino(message: _112.Validator): _112.ValidatorAmino;
            fromAminoMsg(object: _112.ValidatorAminoMsg): _112.Validator;
            fromProtoMsg(message: _112.ValidatorProtoMsg): _112.Validator;
            toProto(message: _112.Validator): Uint8Array;
            toProtoMsg(message: _112.Validator): _112.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _112.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _112.SimpleValidator;
            fromPartial(object: Partial<_112.SimpleValidator>): _112.SimpleValidator;
            fromAmino(object: _112.SimpleValidatorAmino): _112.SimpleValidator;
            toAmino(message: _112.SimpleValidator): _112.SimpleValidatorAmino;
            fromAminoMsg(object: _112.SimpleValidatorAminoMsg): _112.SimpleValidator;
            fromProtoMsg(message: _112.SimpleValidatorProtoMsg): _112.SimpleValidator;
            toProto(message: _112.SimpleValidator): Uint8Array;
            toProtoMsg(message: _112.SimpleValidator): _112.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _111.BlockIDFlag;
        blockIDFlagToJSON(object: _111.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _111.SignedMsgType;
        signedMsgTypeToJSON(object: _111.SignedMsgType): string;
        BlockIDFlag: typeof _111.BlockIDFlag;
        BlockIDFlagSDKType: typeof _111.BlockIDFlag;
        BlockIDFlagAmino: typeof _111.BlockIDFlag;
        SignedMsgType: typeof _111.SignedMsgType;
        SignedMsgTypeSDKType: typeof _111.SignedMsgType;
        SignedMsgTypeAmino: typeof _111.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _111.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.PartSetHeader;
            fromPartial(object: Partial<_111.PartSetHeader>): _111.PartSetHeader;
            fromAmino(object: _111.PartSetHeaderAmino): _111.PartSetHeader;
            toAmino(message: _111.PartSetHeader): _111.PartSetHeaderAmino;
            fromAminoMsg(object: _111.PartSetHeaderAminoMsg): _111.PartSetHeader;
            fromProtoMsg(message: _111.PartSetHeaderProtoMsg): _111.PartSetHeader;
            toProto(message: _111.PartSetHeader): Uint8Array;
            toProtoMsg(message: _111.PartSetHeader): _111.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _111.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.Part;
            fromPartial(object: Partial<_111.Part>): _111.Part;
            fromAmino(object: _111.PartAmino): _111.Part;
            toAmino(message: _111.Part): _111.PartAmino;
            fromAminoMsg(object: _111.PartAminoMsg): _111.Part;
            fromProtoMsg(message: _111.PartProtoMsg): _111.Part;
            toProto(message: _111.Part): Uint8Array;
            toProtoMsg(message: _111.Part): _111.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _111.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.BlockID;
            fromPartial(object: Partial<_111.BlockID>): _111.BlockID;
            fromAmino(object: _111.BlockIDAmino): _111.BlockID;
            toAmino(message: _111.BlockID): _111.BlockIDAmino;
            fromAminoMsg(object: _111.BlockIDAminoMsg): _111.BlockID;
            fromProtoMsg(message: _111.BlockIDProtoMsg): _111.BlockID;
            toProto(message: _111.BlockID): Uint8Array;
            toProtoMsg(message: _111.BlockID): _111.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _111.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.Header;
            fromPartial(object: Partial<_111.Header>): _111.Header;
            fromAmino(object: _111.HeaderAmino): _111.Header;
            toAmino(message: _111.Header): _111.HeaderAmino;
            fromAminoMsg(object: _111.HeaderAminoMsg): _111.Header;
            fromProtoMsg(message: _111.HeaderProtoMsg): _111.Header;
            toProto(message: _111.Header): Uint8Array;
            toProtoMsg(message: _111.Header): _111.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _111.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.Data;
            fromPartial(object: Partial<_111.Data>): _111.Data;
            fromAmino(object: _111.DataAmino): _111.Data;
            toAmino(message: _111.Data): _111.DataAmino;
            fromAminoMsg(object: _111.DataAminoMsg): _111.Data;
            fromProtoMsg(message: _111.DataProtoMsg): _111.Data;
            toProto(message: _111.Data): Uint8Array;
            toProtoMsg(message: _111.Data): _111.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _111.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.Vote;
            fromPartial(object: Partial<_111.Vote>): _111.Vote;
            fromAmino(object: _111.VoteAmino): _111.Vote;
            toAmino(message: _111.Vote): _111.VoteAmino;
            fromAminoMsg(object: _111.VoteAminoMsg): _111.Vote;
            fromProtoMsg(message: _111.VoteProtoMsg): _111.Vote;
            toProto(message: _111.Vote): Uint8Array;
            toProtoMsg(message: _111.Vote): _111.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _111.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.Commit;
            fromPartial(object: Partial<_111.Commit>): _111.Commit;
            fromAmino(object: _111.CommitAmino): _111.Commit;
            toAmino(message: _111.Commit): _111.CommitAmino;
            fromAminoMsg(object: _111.CommitAminoMsg): _111.Commit;
            fromProtoMsg(message: _111.CommitProtoMsg): _111.Commit;
            toProto(message: _111.Commit): Uint8Array;
            toProtoMsg(message: _111.Commit): _111.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _111.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.CommitSig;
            fromPartial(object: Partial<_111.CommitSig>): _111.CommitSig;
            fromAmino(object: _111.CommitSigAmino): _111.CommitSig;
            toAmino(message: _111.CommitSig): _111.CommitSigAmino;
            fromAminoMsg(object: _111.CommitSigAminoMsg): _111.CommitSig;
            fromProtoMsg(message: _111.CommitSigProtoMsg): _111.CommitSig;
            toProto(message: _111.CommitSig): Uint8Array;
            toProtoMsg(message: _111.CommitSig): _111.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _111.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.Proposal;
            fromPartial(object: Partial<_111.Proposal>): _111.Proposal;
            fromAmino(object: _111.ProposalAmino): _111.Proposal;
            toAmino(message: _111.Proposal): _111.ProposalAmino;
            fromAminoMsg(object: _111.ProposalAminoMsg): _111.Proposal;
            fromProtoMsg(message: _111.ProposalProtoMsg): _111.Proposal;
            toProto(message: _111.Proposal): Uint8Array;
            toProtoMsg(message: _111.Proposal): _111.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _111.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.SignedHeader;
            fromPartial(object: Partial<_111.SignedHeader>): _111.SignedHeader;
            fromAmino(object: _111.SignedHeaderAmino): _111.SignedHeader;
            toAmino(message: _111.SignedHeader): _111.SignedHeaderAmino;
            fromAminoMsg(object: _111.SignedHeaderAminoMsg): _111.SignedHeader;
            fromProtoMsg(message: _111.SignedHeaderProtoMsg): _111.SignedHeader;
            toProto(message: _111.SignedHeader): Uint8Array;
            toProtoMsg(message: _111.SignedHeader): _111.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _111.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.LightBlock;
            fromPartial(object: Partial<_111.LightBlock>): _111.LightBlock;
            fromAmino(object: _111.LightBlockAmino): _111.LightBlock;
            toAmino(message: _111.LightBlock): _111.LightBlockAmino;
            fromAminoMsg(object: _111.LightBlockAminoMsg): _111.LightBlock;
            fromProtoMsg(message: _111.LightBlockProtoMsg): _111.LightBlock;
            toProto(message: _111.LightBlock): Uint8Array;
            toProtoMsg(message: _111.LightBlock): _111.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _111.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.BlockMeta;
            fromPartial(object: Partial<_111.BlockMeta>): _111.BlockMeta;
            fromAmino(object: _111.BlockMetaAmino): _111.BlockMeta;
            toAmino(message: _111.BlockMeta): _111.BlockMetaAmino;
            fromAminoMsg(object: _111.BlockMetaAminoMsg): _111.BlockMeta;
            fromProtoMsg(message: _111.BlockMetaProtoMsg): _111.BlockMeta;
            toProto(message: _111.BlockMeta): Uint8Array;
            toProtoMsg(message: _111.BlockMeta): _111.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _111.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _111.TxProof;
            fromPartial(object: Partial<_111.TxProof>): _111.TxProof;
            fromAmino(object: _111.TxProofAmino): _111.TxProof;
            toAmino(message: _111.TxProof): _111.TxProofAmino;
            fromAminoMsg(object: _111.TxProofAminoMsg): _111.TxProof;
            fromProtoMsg(message: _111.TxProofProtoMsg): _111.TxProof;
            toProto(message: _111.TxProof): Uint8Array;
            toProtoMsg(message: _111.TxProof): _111.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _110.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ConsensusParams;
            fromPartial(object: Partial<_110.ConsensusParams>): _110.ConsensusParams;
            fromAmino(object: _110.ConsensusParamsAmino): _110.ConsensusParams;
            toAmino(message: _110.ConsensusParams): _110.ConsensusParamsAmino;
            fromAminoMsg(object: _110.ConsensusParamsAminoMsg): _110.ConsensusParams;
            fromProtoMsg(message: _110.ConsensusParamsProtoMsg): _110.ConsensusParams;
            toProto(message: _110.ConsensusParams): Uint8Array;
            toProtoMsg(message: _110.ConsensusParams): _110.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _110.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.BlockParams;
            fromPartial(object: Partial<_110.BlockParams>): _110.BlockParams;
            fromAmino(object: _110.BlockParamsAmino): _110.BlockParams;
            toAmino(message: _110.BlockParams): _110.BlockParamsAmino;
            fromAminoMsg(object: _110.BlockParamsAminoMsg): _110.BlockParams;
            fromProtoMsg(message: _110.BlockParamsProtoMsg): _110.BlockParams;
            toProto(message: _110.BlockParams): Uint8Array;
            toProtoMsg(message: _110.BlockParams): _110.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _110.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.EvidenceParams;
            fromPartial(object: Partial<_110.EvidenceParams>): _110.EvidenceParams;
            fromAmino(object: _110.EvidenceParamsAmino): _110.EvidenceParams;
            toAmino(message: _110.EvidenceParams): _110.EvidenceParamsAmino;
            fromAminoMsg(object: _110.EvidenceParamsAminoMsg): _110.EvidenceParams;
            fromProtoMsg(message: _110.EvidenceParamsProtoMsg): _110.EvidenceParams;
            toProto(message: _110.EvidenceParams): Uint8Array;
            toProtoMsg(message: _110.EvidenceParams): _110.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _110.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.ValidatorParams;
            fromPartial(object: Partial<_110.ValidatorParams>): _110.ValidatorParams;
            fromAmino(object: _110.ValidatorParamsAmino): _110.ValidatorParams;
            toAmino(message: _110.ValidatorParams): _110.ValidatorParamsAmino;
            fromAminoMsg(object: _110.ValidatorParamsAminoMsg): _110.ValidatorParams;
            fromProtoMsg(message: _110.ValidatorParamsProtoMsg): _110.ValidatorParams;
            toProto(message: _110.ValidatorParams): Uint8Array;
            toProtoMsg(message: _110.ValidatorParams): _110.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _110.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.VersionParams;
            fromPartial(object: Partial<_110.VersionParams>): _110.VersionParams;
            fromAmino(object: _110.VersionParamsAmino): _110.VersionParams;
            toAmino(message: _110.VersionParams): _110.VersionParamsAmino;
            fromAminoMsg(object: _110.VersionParamsAminoMsg): _110.VersionParams;
            fromProtoMsg(message: _110.VersionParamsProtoMsg): _110.VersionParams;
            toProto(message: _110.VersionParams): Uint8Array;
            toProtoMsg(message: _110.VersionParams): _110.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _110.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _110.HashedParams;
            fromPartial(object: Partial<_110.HashedParams>): _110.HashedParams;
            fromAmino(object: _110.HashedParamsAmino): _110.HashedParams;
            toAmino(message: _110.HashedParams): _110.HashedParamsAmino;
            fromAminoMsg(object: _110.HashedParamsAminoMsg): _110.HashedParams;
            fromProtoMsg(message: _110.HashedParamsProtoMsg): _110.HashedParams;
            toProto(message: _110.HashedParams): Uint8Array;
            toProtoMsg(message: _110.HashedParams): _110.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _109.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _109.Evidence;
            fromPartial(object: Partial<_109.Evidence>): _109.Evidence;
            fromAmino(object: _109.EvidenceAmino): _109.Evidence;
            toAmino(message: _109.Evidence): _109.EvidenceAmino;
            fromAminoMsg(object: _109.EvidenceAminoMsg): _109.Evidence;
            fromProtoMsg(message: _109.EvidenceProtoMsg): _109.Evidence;
            toProto(message: _109.Evidence): Uint8Array;
            toProtoMsg(message: _109.Evidence): _109.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _109.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _109.DuplicateVoteEvidence;
            fromPartial(object: Partial<_109.DuplicateVoteEvidence>): _109.DuplicateVoteEvidence;
            fromAmino(object: _109.DuplicateVoteEvidenceAmino): _109.DuplicateVoteEvidence;
            toAmino(message: _109.DuplicateVoteEvidence): _109.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _109.DuplicateVoteEvidenceAminoMsg): _109.DuplicateVoteEvidence;
            fromProtoMsg(message: _109.DuplicateVoteEvidenceProtoMsg): _109.DuplicateVoteEvidence;
            toProto(message: _109.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _109.DuplicateVoteEvidence): _109.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _109.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _109.LightClientAttackEvidence;
            fromPartial(object: Partial<_109.LightClientAttackEvidence>): _109.LightClientAttackEvidence;
            fromAmino(object: _109.LightClientAttackEvidenceAmino): _109.LightClientAttackEvidence;
            toAmino(message: _109.LightClientAttackEvidence): _109.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _109.LightClientAttackEvidenceAminoMsg): _109.LightClientAttackEvidence;
            fromProtoMsg(message: _109.LightClientAttackEvidenceProtoMsg): _109.LightClientAttackEvidence;
            toProto(message: _109.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _109.LightClientAttackEvidence): _109.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _109.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _109.EvidenceList;
            fromPartial(object: Partial<_109.EvidenceList>): _109.EvidenceList;
            fromAmino(object: _109.EvidenceListAmino): _109.EvidenceList;
            toAmino(message: _109.EvidenceList): _109.EvidenceListAmino;
            fromAminoMsg(object: _109.EvidenceListAminoMsg): _109.EvidenceList;
            fromProtoMsg(message: _109.EvidenceListProtoMsg): _109.EvidenceList;
            toProto(message: _109.EvidenceList): Uint8Array;
            toProtoMsg(message: _109.EvidenceList): _109.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _108.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _108.Block;
            fromPartial(object: Partial<_108.Block>): _108.Block;
            fromAmino(object: _108.BlockAmino): _108.Block;
            toAmino(message: _108.Block): _108.BlockAmino;
            fromAminoMsg(object: _108.BlockAminoMsg): _108.Block;
            fromProtoMsg(message: _108.BlockProtoMsg): _108.Block;
            toProto(message: _108.Block): Uint8Array;
            toProtoMsg(message: _108.Block): _108.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _113.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.App;
            fromPartial(object: Partial<_113.App>): _113.App;
            fromAmino(object: _113.AppAmino): _113.App;
            toAmino(message: _113.App): _113.AppAmino;
            fromAminoMsg(object: _113.AppAminoMsg): _113.App;
            fromProtoMsg(message: _113.AppProtoMsg): _113.App;
            toProto(message: _113.App): Uint8Array;
            toProtoMsg(message: _113.App): _113.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _113.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _113.Consensus;
            fromPartial(object: Partial<_113.Consensus>): _113.Consensus;
            fromAmino(object: _113.ConsensusAmino): _113.Consensus;
            toAmino(message: _113.Consensus): _113.ConsensusAmino;
            fromAminoMsg(object: _113.ConsensusAminoMsg): _113.Consensus;
            fromProtoMsg(message: _113.ConsensusProtoMsg): _113.Consensus;
            toProto(message: _113.Consensus): Uint8Array;
            toProtoMsg(message: _113.Consensus): _113.ConsensusProtoMsg;
        };
    };
}
