import * as _135 from "./abci/types";
import * as _136 from "./crypto/keys";
import * as _137 from "./crypto/proof";
import * as _138 from "./libs/bits/types";
import * as _139 from "./p2p/types";
import * as _140 from "./types/block";
import * as _141 from "./types/evidence";
import * as _142 from "./types/params";
import * as _143 from "./types/types";
import * as _144 from "./types/validator";
import * as _145 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _135.CheckTxType;
        checkTxTypeToJSON(object: _135.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _135.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _135.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _135.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _135.ResponseApplySnapshotChunk_Result): string;
        responseProcessProposal_ProposalStatusFromJSON(object: any): _135.ResponseProcessProposal_ProposalStatus;
        responseProcessProposal_ProposalStatusToJSON(object: _135.ResponseProcessProposal_ProposalStatus): string;
        misbehaviorTypeFromJSON(object: any): _135.MisbehaviorType;
        misbehaviorTypeToJSON(object: _135.MisbehaviorType): string;
        CheckTxType: typeof _135.CheckTxType;
        CheckTxTypeSDKType: typeof _135.CheckTxType;
        CheckTxTypeAmino: typeof _135.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _135.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _135.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _135.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _135.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _135.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _135.ResponseApplySnapshotChunk_Result;
        ResponseProcessProposal_ProposalStatus: typeof _135.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusSDKType: typeof _135.ResponseProcessProposal_ProposalStatus;
        ResponseProcessProposal_ProposalStatusAmino: typeof _135.ResponseProcessProposal_ProposalStatus;
        MisbehaviorType: typeof _135.MisbehaviorType;
        MisbehaviorTypeSDKType: typeof _135.MisbehaviorType;
        MisbehaviorTypeAmino: typeof _135.MisbehaviorType;
        Request: {
            typeUrl: string;
            encode(message: _135.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.Request;
            fromPartial(object: Partial<_135.Request>): _135.Request;
            fromAmino(object: _135.RequestAmino): _135.Request;
            toAmino(message: _135.Request): _135.RequestAmino;
            fromAminoMsg(object: _135.RequestAminoMsg): _135.Request;
            fromProtoMsg(message: _135.RequestProtoMsg): _135.Request;
            toProto(message: _135.Request): Uint8Array;
            toProtoMsg(message: _135.Request): _135.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _135.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestEcho;
            fromPartial(object: Partial<_135.RequestEcho>): _135.RequestEcho;
            fromAmino(object: _135.RequestEchoAmino): _135.RequestEcho;
            toAmino(message: _135.RequestEcho): _135.RequestEchoAmino;
            fromAminoMsg(object: _135.RequestEchoAminoMsg): _135.RequestEcho;
            fromProtoMsg(message: _135.RequestEchoProtoMsg): _135.RequestEcho;
            toProto(message: _135.RequestEcho): Uint8Array;
            toProtoMsg(message: _135.RequestEcho): _135.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _135.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _135.RequestFlush;
            fromPartial(_: Partial<_135.RequestFlush>): _135.RequestFlush;
            fromAmino(_: _135.RequestFlushAmino): _135.RequestFlush;
            toAmino(_: _135.RequestFlush): _135.RequestFlushAmino;
            fromAminoMsg(object: _135.RequestFlushAminoMsg): _135.RequestFlush;
            fromProtoMsg(message: _135.RequestFlushProtoMsg): _135.RequestFlush;
            toProto(message: _135.RequestFlush): Uint8Array;
            toProtoMsg(message: _135.RequestFlush): _135.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _135.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestInfo;
            fromPartial(object: Partial<_135.RequestInfo>): _135.RequestInfo;
            fromAmino(object: _135.RequestInfoAmino): _135.RequestInfo;
            toAmino(message: _135.RequestInfo): _135.RequestInfoAmino;
            fromAminoMsg(object: _135.RequestInfoAminoMsg): _135.RequestInfo;
            fromProtoMsg(message: _135.RequestInfoProtoMsg): _135.RequestInfo;
            toProto(message: _135.RequestInfo): Uint8Array;
            toProtoMsg(message: _135.RequestInfo): _135.RequestInfoProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _135.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestInitChain;
            fromPartial(object: Partial<_135.RequestInitChain>): _135.RequestInitChain;
            fromAmino(object: _135.RequestInitChainAmino): _135.RequestInitChain;
            toAmino(message: _135.RequestInitChain): _135.RequestInitChainAmino;
            fromAminoMsg(object: _135.RequestInitChainAminoMsg): _135.RequestInitChain;
            fromProtoMsg(message: _135.RequestInitChainProtoMsg): _135.RequestInitChain;
            toProto(message: _135.RequestInitChain): Uint8Array;
            toProtoMsg(message: _135.RequestInitChain): _135.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _135.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestQuery;
            fromPartial(object: Partial<_135.RequestQuery>): _135.RequestQuery;
            fromAmino(object: _135.RequestQueryAmino): _135.RequestQuery;
            toAmino(message: _135.RequestQuery): _135.RequestQueryAmino;
            fromAminoMsg(object: _135.RequestQueryAminoMsg): _135.RequestQuery;
            fromProtoMsg(message: _135.RequestQueryProtoMsg): _135.RequestQuery;
            toProto(message: _135.RequestQuery): Uint8Array;
            toProtoMsg(message: _135.RequestQuery): _135.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _135.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestBeginBlock;
            fromPartial(object: Partial<_135.RequestBeginBlock>): _135.RequestBeginBlock;
            fromAmino(object: _135.RequestBeginBlockAmino): _135.RequestBeginBlock;
            toAmino(message: _135.RequestBeginBlock): _135.RequestBeginBlockAmino;
            fromAminoMsg(object: _135.RequestBeginBlockAminoMsg): _135.RequestBeginBlock;
            fromProtoMsg(message: _135.RequestBeginBlockProtoMsg): _135.RequestBeginBlock;
            toProto(message: _135.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _135.RequestBeginBlock): _135.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _135.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestCheckTx;
            fromPartial(object: Partial<_135.RequestCheckTx>): _135.RequestCheckTx;
            fromAmino(object: _135.RequestCheckTxAmino): _135.RequestCheckTx;
            toAmino(message: _135.RequestCheckTx): _135.RequestCheckTxAmino;
            fromAminoMsg(object: _135.RequestCheckTxAminoMsg): _135.RequestCheckTx;
            fromProtoMsg(message: _135.RequestCheckTxProtoMsg): _135.RequestCheckTx;
            toProto(message: _135.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _135.RequestCheckTx): _135.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _135.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestDeliverTx;
            fromPartial(object: Partial<_135.RequestDeliverTx>): _135.RequestDeliverTx;
            fromAmino(object: _135.RequestDeliverTxAmino): _135.RequestDeliverTx;
            toAmino(message: _135.RequestDeliverTx): _135.RequestDeliverTxAmino;
            fromAminoMsg(object: _135.RequestDeliverTxAminoMsg): _135.RequestDeliverTx;
            fromProtoMsg(message: _135.RequestDeliverTxProtoMsg): _135.RequestDeliverTx;
            toProto(message: _135.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _135.RequestDeliverTx): _135.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _135.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestEndBlock;
            fromPartial(object: Partial<_135.RequestEndBlock>): _135.RequestEndBlock;
            fromAmino(object: _135.RequestEndBlockAmino): _135.RequestEndBlock;
            toAmino(message: _135.RequestEndBlock): _135.RequestEndBlockAmino;
            fromAminoMsg(object: _135.RequestEndBlockAminoMsg): _135.RequestEndBlock;
            fromProtoMsg(message: _135.RequestEndBlockProtoMsg): _135.RequestEndBlock;
            toProto(message: _135.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _135.RequestEndBlock): _135.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _135.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _135.RequestCommit;
            fromPartial(_: Partial<_135.RequestCommit>): _135.RequestCommit;
            fromAmino(_: _135.RequestCommitAmino): _135.RequestCommit;
            toAmino(_: _135.RequestCommit): _135.RequestCommitAmino;
            fromAminoMsg(object: _135.RequestCommitAminoMsg): _135.RequestCommit;
            fromProtoMsg(message: _135.RequestCommitProtoMsg): _135.RequestCommit;
            toProto(message: _135.RequestCommit): Uint8Array;
            toProtoMsg(message: _135.RequestCommit): _135.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _135.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _135.RequestListSnapshots;
            fromPartial(_: Partial<_135.RequestListSnapshots>): _135.RequestListSnapshots;
            fromAmino(_: _135.RequestListSnapshotsAmino): _135.RequestListSnapshots;
            toAmino(_: _135.RequestListSnapshots): _135.RequestListSnapshotsAmino;
            fromAminoMsg(object: _135.RequestListSnapshotsAminoMsg): _135.RequestListSnapshots;
            fromProtoMsg(message: _135.RequestListSnapshotsProtoMsg): _135.RequestListSnapshots;
            toProto(message: _135.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _135.RequestListSnapshots): _135.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _135.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestOfferSnapshot;
            fromPartial(object: Partial<_135.RequestOfferSnapshot>): _135.RequestOfferSnapshot;
            fromAmino(object: _135.RequestOfferSnapshotAmino): _135.RequestOfferSnapshot;
            toAmino(message: _135.RequestOfferSnapshot): _135.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _135.RequestOfferSnapshotAminoMsg): _135.RequestOfferSnapshot;
            fromProtoMsg(message: _135.RequestOfferSnapshotProtoMsg): _135.RequestOfferSnapshot;
            toProto(message: _135.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _135.RequestOfferSnapshot): _135.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _135.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_135.RequestLoadSnapshotChunk>): _135.RequestLoadSnapshotChunk;
            fromAmino(object: _135.RequestLoadSnapshotChunkAmino): _135.RequestLoadSnapshotChunk;
            toAmino(message: _135.RequestLoadSnapshotChunk): _135.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _135.RequestLoadSnapshotChunkAminoMsg): _135.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _135.RequestLoadSnapshotChunkProtoMsg): _135.RequestLoadSnapshotChunk;
            toProto(message: _135.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _135.RequestLoadSnapshotChunk): _135.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _135.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_135.RequestApplySnapshotChunk>): _135.RequestApplySnapshotChunk;
            fromAmino(object: _135.RequestApplySnapshotChunkAmino): _135.RequestApplySnapshotChunk;
            toAmino(message: _135.RequestApplySnapshotChunk): _135.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _135.RequestApplySnapshotChunkAminoMsg): _135.RequestApplySnapshotChunk;
            fromProtoMsg(message: _135.RequestApplySnapshotChunkProtoMsg): _135.RequestApplySnapshotChunk;
            toProto(message: _135.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _135.RequestApplySnapshotChunk): _135.RequestApplySnapshotChunkProtoMsg;
        };
        RequestPrepareProposal: {
            typeUrl: string;
            encode(message: _135.RequestPrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestPrepareProposal;
            fromPartial(object: Partial<_135.RequestPrepareProposal>): _135.RequestPrepareProposal;
            fromAmino(object: _135.RequestPrepareProposalAmino): _135.RequestPrepareProposal;
            toAmino(message: _135.RequestPrepareProposal): _135.RequestPrepareProposalAmino;
            fromAminoMsg(object: _135.RequestPrepareProposalAminoMsg): _135.RequestPrepareProposal;
            fromProtoMsg(message: _135.RequestPrepareProposalProtoMsg): _135.RequestPrepareProposal;
            toProto(message: _135.RequestPrepareProposal): Uint8Array;
            toProtoMsg(message: _135.RequestPrepareProposal): _135.RequestPrepareProposalProtoMsg;
        };
        RequestProcessProposal: {
            typeUrl: string;
            encode(message: _135.RequestProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.RequestProcessProposal;
            fromPartial(object: Partial<_135.RequestProcessProposal>): _135.RequestProcessProposal;
            fromAmino(object: _135.RequestProcessProposalAmino): _135.RequestProcessProposal;
            toAmino(message: _135.RequestProcessProposal): _135.RequestProcessProposalAmino;
            fromAminoMsg(object: _135.RequestProcessProposalAminoMsg): _135.RequestProcessProposal;
            fromProtoMsg(message: _135.RequestProcessProposalProtoMsg): _135.RequestProcessProposal;
            toProto(message: _135.RequestProcessProposal): Uint8Array;
            toProtoMsg(message: _135.RequestProcessProposal): _135.RequestProcessProposalProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _135.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.Response;
            fromPartial(object: Partial<_135.Response>): _135.Response;
            fromAmino(object: _135.ResponseAmino): _135.Response;
            toAmino(message: _135.Response): _135.ResponseAmino;
            fromAminoMsg(object: _135.ResponseAminoMsg): _135.Response;
            fromProtoMsg(message: _135.ResponseProtoMsg): _135.Response;
            toProto(message: _135.Response): Uint8Array;
            toProtoMsg(message: _135.Response): _135.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _135.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseException;
            fromPartial(object: Partial<_135.ResponseException>): _135.ResponseException;
            fromAmino(object: _135.ResponseExceptionAmino): _135.ResponseException;
            toAmino(message: _135.ResponseException): _135.ResponseExceptionAmino;
            fromAminoMsg(object: _135.ResponseExceptionAminoMsg): _135.ResponseException;
            fromProtoMsg(message: _135.ResponseExceptionProtoMsg): _135.ResponseException;
            toProto(message: _135.ResponseException): Uint8Array;
            toProtoMsg(message: _135.ResponseException): _135.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _135.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseEcho;
            fromPartial(object: Partial<_135.ResponseEcho>): _135.ResponseEcho;
            fromAmino(object: _135.ResponseEchoAmino): _135.ResponseEcho;
            toAmino(message: _135.ResponseEcho): _135.ResponseEchoAmino;
            fromAminoMsg(object: _135.ResponseEchoAminoMsg): _135.ResponseEcho;
            fromProtoMsg(message: _135.ResponseEchoProtoMsg): _135.ResponseEcho;
            toProto(message: _135.ResponseEcho): Uint8Array;
            toProtoMsg(message: _135.ResponseEcho): _135.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _135.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _135.ResponseFlush;
            fromPartial(_: Partial<_135.ResponseFlush>): _135.ResponseFlush;
            fromAmino(_: _135.ResponseFlushAmino): _135.ResponseFlush;
            toAmino(_: _135.ResponseFlush): _135.ResponseFlushAmino;
            fromAminoMsg(object: _135.ResponseFlushAminoMsg): _135.ResponseFlush;
            fromProtoMsg(message: _135.ResponseFlushProtoMsg): _135.ResponseFlush;
            toProto(message: _135.ResponseFlush): Uint8Array;
            toProtoMsg(message: _135.ResponseFlush): _135.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _135.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseInfo;
            fromPartial(object: Partial<_135.ResponseInfo>): _135.ResponseInfo;
            fromAmino(object: _135.ResponseInfoAmino): _135.ResponseInfo;
            toAmino(message: _135.ResponseInfo): _135.ResponseInfoAmino;
            fromAminoMsg(object: _135.ResponseInfoAminoMsg): _135.ResponseInfo;
            fromProtoMsg(message: _135.ResponseInfoProtoMsg): _135.ResponseInfo;
            toProto(message: _135.ResponseInfo): Uint8Array;
            toProtoMsg(message: _135.ResponseInfo): _135.ResponseInfoProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _135.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseInitChain;
            fromPartial(object: Partial<_135.ResponseInitChain>): _135.ResponseInitChain;
            fromAmino(object: _135.ResponseInitChainAmino): _135.ResponseInitChain;
            toAmino(message: _135.ResponseInitChain): _135.ResponseInitChainAmino;
            fromAminoMsg(object: _135.ResponseInitChainAminoMsg): _135.ResponseInitChain;
            fromProtoMsg(message: _135.ResponseInitChainProtoMsg): _135.ResponseInitChain;
            toProto(message: _135.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _135.ResponseInitChain): _135.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _135.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseQuery;
            fromPartial(object: Partial<_135.ResponseQuery>): _135.ResponseQuery;
            fromAmino(object: _135.ResponseQueryAmino): _135.ResponseQuery;
            toAmino(message: _135.ResponseQuery): _135.ResponseQueryAmino;
            fromAminoMsg(object: _135.ResponseQueryAminoMsg): _135.ResponseQuery;
            fromProtoMsg(message: _135.ResponseQueryProtoMsg): _135.ResponseQuery;
            toProto(message: _135.ResponseQuery): Uint8Array;
            toProtoMsg(message: _135.ResponseQuery): _135.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _135.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseBeginBlock;
            fromPartial(object: Partial<_135.ResponseBeginBlock>): _135.ResponseBeginBlock;
            fromAmino(object: _135.ResponseBeginBlockAmino): _135.ResponseBeginBlock;
            toAmino(message: _135.ResponseBeginBlock): _135.ResponseBeginBlockAmino;
            fromAminoMsg(object: _135.ResponseBeginBlockAminoMsg): _135.ResponseBeginBlock;
            fromProtoMsg(message: _135.ResponseBeginBlockProtoMsg): _135.ResponseBeginBlock;
            toProto(message: _135.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _135.ResponseBeginBlock): _135.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _135.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseCheckTx;
            fromPartial(object: Partial<_135.ResponseCheckTx>): _135.ResponseCheckTx;
            fromAmino(object: _135.ResponseCheckTxAmino): _135.ResponseCheckTx;
            toAmino(message: _135.ResponseCheckTx): _135.ResponseCheckTxAmino;
            fromAminoMsg(object: _135.ResponseCheckTxAminoMsg): _135.ResponseCheckTx;
            fromProtoMsg(message: _135.ResponseCheckTxProtoMsg): _135.ResponseCheckTx;
            toProto(message: _135.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _135.ResponseCheckTx): _135.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _135.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseDeliverTx;
            fromPartial(object: Partial<_135.ResponseDeliverTx>): _135.ResponseDeliverTx;
            fromAmino(object: _135.ResponseDeliverTxAmino): _135.ResponseDeliverTx;
            toAmino(message: _135.ResponseDeliverTx): _135.ResponseDeliverTxAmino;
            fromAminoMsg(object: _135.ResponseDeliverTxAminoMsg): _135.ResponseDeliverTx;
            fromProtoMsg(message: _135.ResponseDeliverTxProtoMsg): _135.ResponseDeliverTx;
            toProto(message: _135.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _135.ResponseDeliverTx): _135.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _135.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseEndBlock;
            fromPartial(object: Partial<_135.ResponseEndBlock>): _135.ResponseEndBlock;
            fromAmino(object: _135.ResponseEndBlockAmino): _135.ResponseEndBlock;
            toAmino(message: _135.ResponseEndBlock): _135.ResponseEndBlockAmino;
            fromAminoMsg(object: _135.ResponseEndBlockAminoMsg): _135.ResponseEndBlock;
            fromProtoMsg(message: _135.ResponseEndBlockProtoMsg): _135.ResponseEndBlock;
            toProto(message: _135.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _135.ResponseEndBlock): _135.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _135.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseCommit;
            fromPartial(object: Partial<_135.ResponseCommit>): _135.ResponseCommit;
            fromAmino(object: _135.ResponseCommitAmino): _135.ResponseCommit;
            toAmino(message: _135.ResponseCommit): _135.ResponseCommitAmino;
            fromAminoMsg(object: _135.ResponseCommitAminoMsg): _135.ResponseCommit;
            fromProtoMsg(message: _135.ResponseCommitProtoMsg): _135.ResponseCommit;
            toProto(message: _135.ResponseCommit): Uint8Array;
            toProtoMsg(message: _135.ResponseCommit): _135.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _135.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseListSnapshots;
            fromPartial(object: Partial<_135.ResponseListSnapshots>): _135.ResponseListSnapshots;
            fromAmino(object: _135.ResponseListSnapshotsAmino): _135.ResponseListSnapshots;
            toAmino(message: _135.ResponseListSnapshots): _135.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _135.ResponseListSnapshotsAminoMsg): _135.ResponseListSnapshots;
            fromProtoMsg(message: _135.ResponseListSnapshotsProtoMsg): _135.ResponseListSnapshots;
            toProto(message: _135.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _135.ResponseListSnapshots): _135.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _135.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseOfferSnapshot;
            fromPartial(object: Partial<_135.ResponseOfferSnapshot>): _135.ResponseOfferSnapshot;
            fromAmino(object: _135.ResponseOfferSnapshotAmino): _135.ResponseOfferSnapshot;
            toAmino(message: _135.ResponseOfferSnapshot): _135.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _135.ResponseOfferSnapshotAminoMsg): _135.ResponseOfferSnapshot;
            fromProtoMsg(message: _135.ResponseOfferSnapshotProtoMsg): _135.ResponseOfferSnapshot;
            toProto(message: _135.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _135.ResponseOfferSnapshot): _135.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _135.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_135.ResponseLoadSnapshotChunk>): _135.ResponseLoadSnapshotChunk;
            fromAmino(object: _135.ResponseLoadSnapshotChunkAmino): _135.ResponseLoadSnapshotChunk;
            toAmino(message: _135.ResponseLoadSnapshotChunk): _135.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _135.ResponseLoadSnapshotChunkAminoMsg): _135.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _135.ResponseLoadSnapshotChunkProtoMsg): _135.ResponseLoadSnapshotChunk;
            toProto(message: _135.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _135.ResponseLoadSnapshotChunk): _135.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _135.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_135.ResponseApplySnapshotChunk>): _135.ResponseApplySnapshotChunk;
            fromAmino(object: _135.ResponseApplySnapshotChunkAmino): _135.ResponseApplySnapshotChunk;
            toAmino(message: _135.ResponseApplySnapshotChunk): _135.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _135.ResponseApplySnapshotChunkAminoMsg): _135.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _135.ResponseApplySnapshotChunkProtoMsg): _135.ResponseApplySnapshotChunk;
            toProto(message: _135.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _135.ResponseApplySnapshotChunk): _135.ResponseApplySnapshotChunkProtoMsg;
        };
        ResponsePrepareProposal: {
            typeUrl: string;
            encode(message: _135.ResponsePrepareProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponsePrepareProposal;
            fromPartial(object: Partial<_135.ResponsePrepareProposal>): _135.ResponsePrepareProposal;
            fromAmino(object: _135.ResponsePrepareProposalAmino): _135.ResponsePrepareProposal;
            toAmino(message: _135.ResponsePrepareProposal): _135.ResponsePrepareProposalAmino;
            fromAminoMsg(object: _135.ResponsePrepareProposalAminoMsg): _135.ResponsePrepareProposal;
            fromProtoMsg(message: _135.ResponsePrepareProposalProtoMsg): _135.ResponsePrepareProposal;
            toProto(message: _135.ResponsePrepareProposal): Uint8Array;
            toProtoMsg(message: _135.ResponsePrepareProposal): _135.ResponsePrepareProposalProtoMsg;
        };
        ResponseProcessProposal: {
            typeUrl: string;
            encode(message: _135.ResponseProcessProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ResponseProcessProposal;
            fromPartial(object: Partial<_135.ResponseProcessProposal>): _135.ResponseProcessProposal;
            fromAmino(object: _135.ResponseProcessProposalAmino): _135.ResponseProcessProposal;
            toAmino(message: _135.ResponseProcessProposal): _135.ResponseProcessProposalAmino;
            fromAminoMsg(object: _135.ResponseProcessProposalAminoMsg): _135.ResponseProcessProposal;
            fromProtoMsg(message: _135.ResponseProcessProposalProtoMsg): _135.ResponseProcessProposal;
            toProto(message: _135.ResponseProcessProposal): Uint8Array;
            toProtoMsg(message: _135.ResponseProcessProposal): _135.ResponseProcessProposalProtoMsg;
        };
        CommitInfo: {
            typeUrl: string;
            encode(message: _135.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.CommitInfo;
            fromPartial(object: Partial<_135.CommitInfo>): _135.CommitInfo;
            fromAmino(object: _135.CommitInfoAmino): _135.CommitInfo;
            toAmino(message: _135.CommitInfo): _135.CommitInfoAmino;
            fromAminoMsg(object: _135.CommitInfoAminoMsg): _135.CommitInfo;
            fromProtoMsg(message: _135.CommitInfoProtoMsg): _135.CommitInfo;
            toProto(message: _135.CommitInfo): Uint8Array;
            toProtoMsg(message: _135.CommitInfo): _135.CommitInfoProtoMsg;
        };
        ExtendedCommitInfo: {
            typeUrl: string;
            encode(message: _135.ExtendedCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ExtendedCommitInfo;
            fromPartial(object: Partial<_135.ExtendedCommitInfo>): _135.ExtendedCommitInfo;
            fromAmino(object: _135.ExtendedCommitInfoAmino): _135.ExtendedCommitInfo;
            toAmino(message: _135.ExtendedCommitInfo): _135.ExtendedCommitInfoAmino;
            fromAminoMsg(object: _135.ExtendedCommitInfoAminoMsg): _135.ExtendedCommitInfo;
            fromProtoMsg(message: _135.ExtendedCommitInfoProtoMsg): _135.ExtendedCommitInfo;
            toProto(message: _135.ExtendedCommitInfo): Uint8Array;
            toProtoMsg(message: _135.ExtendedCommitInfo): _135.ExtendedCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _135.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.Event;
            fromPartial(object: Partial<_135.Event>): _135.Event;
            fromAmino(object: _135.EventAmino): _135.Event;
            toAmino(message: _135.Event): _135.EventAmino;
            fromAminoMsg(object: _135.EventAminoMsg): _135.Event;
            fromProtoMsg(message: _135.EventProtoMsg): _135.Event;
            toProto(message: _135.Event): Uint8Array;
            toProtoMsg(message: _135.Event): _135.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _135.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.EventAttribute;
            fromPartial(object: Partial<_135.EventAttribute>): _135.EventAttribute;
            fromAmino(object: _135.EventAttributeAmino): _135.EventAttribute;
            toAmino(message: _135.EventAttribute): _135.EventAttributeAmino;
            fromAminoMsg(object: _135.EventAttributeAminoMsg): _135.EventAttribute;
            fromProtoMsg(message: _135.EventAttributeProtoMsg): _135.EventAttribute;
            toProto(message: _135.EventAttribute): Uint8Array;
            toProtoMsg(message: _135.EventAttribute): _135.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _135.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.TxResult;
            fromPartial(object: Partial<_135.TxResult>): _135.TxResult;
            fromAmino(object: _135.TxResultAmino): _135.TxResult;
            toAmino(message: _135.TxResult): _135.TxResultAmino;
            fromAminoMsg(object: _135.TxResultAminoMsg): _135.TxResult;
            fromProtoMsg(message: _135.TxResultProtoMsg): _135.TxResult;
            toProto(message: _135.TxResult): Uint8Array;
            toProtoMsg(message: _135.TxResult): _135.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _135.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.Validator;
            fromPartial(object: Partial<_135.Validator>): _135.Validator;
            fromAmino(object: _135.ValidatorAmino): _135.Validator;
            toAmino(message: _135.Validator): _135.ValidatorAmino;
            fromAminoMsg(object: _135.ValidatorAminoMsg): _135.Validator;
            fromProtoMsg(message: _135.ValidatorProtoMsg): _135.Validator;
            toProto(message: _135.Validator): Uint8Array;
            toProtoMsg(message: _135.Validator): _135.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _135.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ValidatorUpdate;
            fromPartial(object: Partial<_135.ValidatorUpdate>): _135.ValidatorUpdate;
            fromAmino(object: _135.ValidatorUpdateAmino): _135.ValidatorUpdate;
            toAmino(message: _135.ValidatorUpdate): _135.ValidatorUpdateAmino;
            fromAminoMsg(object: _135.ValidatorUpdateAminoMsg): _135.ValidatorUpdate;
            fromProtoMsg(message: _135.ValidatorUpdateProtoMsg): _135.ValidatorUpdate;
            toProto(message: _135.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _135.ValidatorUpdate): _135.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _135.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.VoteInfo;
            fromPartial(object: Partial<_135.VoteInfo>): _135.VoteInfo;
            fromAmino(object: _135.VoteInfoAmino): _135.VoteInfo;
            toAmino(message: _135.VoteInfo): _135.VoteInfoAmino;
            fromAminoMsg(object: _135.VoteInfoAminoMsg): _135.VoteInfo;
            fromProtoMsg(message: _135.VoteInfoProtoMsg): _135.VoteInfo;
            toProto(message: _135.VoteInfo): Uint8Array;
            toProtoMsg(message: _135.VoteInfo): _135.VoteInfoProtoMsg;
        };
        ExtendedVoteInfo: {
            typeUrl: string;
            encode(message: _135.ExtendedVoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.ExtendedVoteInfo;
            fromPartial(object: Partial<_135.ExtendedVoteInfo>): _135.ExtendedVoteInfo;
            fromAmino(object: _135.ExtendedVoteInfoAmino): _135.ExtendedVoteInfo;
            toAmino(message: _135.ExtendedVoteInfo): _135.ExtendedVoteInfoAmino;
            fromAminoMsg(object: _135.ExtendedVoteInfoAminoMsg): _135.ExtendedVoteInfo;
            fromProtoMsg(message: _135.ExtendedVoteInfoProtoMsg): _135.ExtendedVoteInfo;
            toProto(message: _135.ExtendedVoteInfo): Uint8Array;
            toProtoMsg(message: _135.ExtendedVoteInfo): _135.ExtendedVoteInfoProtoMsg;
        };
        Misbehavior: {
            typeUrl: string;
            encode(message: _135.Misbehavior, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.Misbehavior;
            fromPartial(object: Partial<_135.Misbehavior>): _135.Misbehavior;
            fromAmino(object: _135.MisbehaviorAmino): _135.Misbehavior;
            toAmino(message: _135.Misbehavior): _135.MisbehaviorAmino;
            fromAminoMsg(object: _135.MisbehaviorAminoMsg): _135.Misbehavior;
            fromProtoMsg(message: _135.MisbehaviorProtoMsg): _135.Misbehavior;
            toProto(message: _135.Misbehavior): Uint8Array;
            toProtoMsg(message: _135.Misbehavior): _135.MisbehaviorProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _135.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _135.Snapshot;
            fromPartial(object: Partial<_135.Snapshot>): _135.Snapshot;
            fromAmino(object: _135.SnapshotAmino): _135.Snapshot;
            toAmino(message: _135.Snapshot): _135.SnapshotAmino;
            fromAminoMsg(object: _135.SnapshotAminoMsg): _135.Snapshot;
            fromProtoMsg(message: _135.SnapshotProtoMsg): _135.Snapshot;
            toProto(message: _135.Snapshot): Uint8Array;
            toProtoMsg(message: _135.Snapshot): _135.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _137.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.Proof;
            fromPartial(object: Partial<_137.Proof>): _137.Proof;
            fromAmino(object: _137.ProofAmino): _137.Proof;
            toAmino(message: _137.Proof): _137.ProofAmino;
            fromAminoMsg(object: _137.ProofAminoMsg): _137.Proof;
            fromProtoMsg(message: _137.ProofProtoMsg): _137.Proof;
            toProto(message: _137.Proof): Uint8Array;
            toProtoMsg(message: _137.Proof): _137.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _137.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.ValueOp;
            fromPartial(object: Partial<_137.ValueOp>): _137.ValueOp;
            fromAmino(object: _137.ValueOpAmino): _137.ValueOp;
            toAmino(message: _137.ValueOp): _137.ValueOpAmino;
            fromAminoMsg(object: _137.ValueOpAminoMsg): _137.ValueOp;
            fromProtoMsg(message: _137.ValueOpProtoMsg): _137.ValueOp;
            toProto(message: _137.ValueOp): Uint8Array;
            toProtoMsg(message: _137.ValueOp): _137.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _137.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.DominoOp;
            fromPartial(object: Partial<_137.DominoOp>): _137.DominoOp;
            fromAmino(object: _137.DominoOpAmino): _137.DominoOp;
            toAmino(message: _137.DominoOp): _137.DominoOpAmino;
            fromAminoMsg(object: _137.DominoOpAminoMsg): _137.DominoOp;
            fromProtoMsg(message: _137.DominoOpProtoMsg): _137.DominoOp;
            toProto(message: _137.DominoOp): Uint8Array;
            toProtoMsg(message: _137.DominoOp): _137.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _137.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.ProofOp;
            fromPartial(object: Partial<_137.ProofOp>): _137.ProofOp;
            fromAmino(object: _137.ProofOpAmino): _137.ProofOp;
            toAmino(message: _137.ProofOp): _137.ProofOpAmino;
            fromAminoMsg(object: _137.ProofOpAminoMsg): _137.ProofOp;
            fromProtoMsg(message: _137.ProofOpProtoMsg): _137.ProofOp;
            toProto(message: _137.ProofOp): Uint8Array;
            toProtoMsg(message: _137.ProofOp): _137.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _137.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _137.ProofOps;
            fromPartial(object: Partial<_137.ProofOps>): _137.ProofOps;
            fromAmino(object: _137.ProofOpsAmino): _137.ProofOps;
            toAmino(message: _137.ProofOps): _137.ProofOpsAmino;
            fromAminoMsg(object: _137.ProofOpsAminoMsg): _137.ProofOps;
            fromProtoMsg(message: _137.ProofOpsProtoMsg): _137.ProofOps;
            toProto(message: _137.ProofOps): Uint8Array;
            toProtoMsg(message: _137.ProofOps): _137.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _136.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _136.PublicKey;
            fromPartial(object: Partial<_136.PublicKey>): _136.PublicKey;
            fromAmino(object: _136.PublicKeyAmino): _136.PublicKey;
            toAmino(message: _136.PublicKey): _136.PublicKeyAmino;
            fromAminoMsg(object: _136.PublicKeyAminoMsg): _136.PublicKey;
            fromProtoMsg(message: _136.PublicKeyProtoMsg): _136.PublicKey;
            toProto(message: _136.PublicKey): Uint8Array;
            toProtoMsg(message: _136.PublicKey): _136.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _138.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _138.BitArray;
                fromPartial(object: Partial<_138.BitArray>): _138.BitArray;
                fromAmino(object: _138.BitArrayAmino): _138.BitArray;
                toAmino(message: _138.BitArray): _138.BitArrayAmino;
                fromAminoMsg(object: _138.BitArrayAminoMsg): _138.BitArray;
                fromProtoMsg(message: _138.BitArrayProtoMsg): _138.BitArray;
                toProto(message: _138.BitArray): Uint8Array;
                toProtoMsg(message: _138.BitArray): _138.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _139.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _139.NetAddress;
            fromPartial(object: Partial<_139.NetAddress>): _139.NetAddress;
            fromAmino(object: _139.NetAddressAmino): _139.NetAddress;
            toAmino(message: _139.NetAddress): _139.NetAddressAmino;
            fromAminoMsg(object: _139.NetAddressAminoMsg): _139.NetAddress;
            fromProtoMsg(message: _139.NetAddressProtoMsg): _139.NetAddress;
            toProto(message: _139.NetAddress): Uint8Array;
            toProtoMsg(message: _139.NetAddress): _139.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _139.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _139.ProtocolVersion;
            fromPartial(object: Partial<_139.ProtocolVersion>): _139.ProtocolVersion;
            fromAmino(object: _139.ProtocolVersionAmino): _139.ProtocolVersion;
            toAmino(message: _139.ProtocolVersion): _139.ProtocolVersionAmino;
            fromAminoMsg(object: _139.ProtocolVersionAminoMsg): _139.ProtocolVersion;
            fromProtoMsg(message: _139.ProtocolVersionProtoMsg): _139.ProtocolVersion;
            toProto(message: _139.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _139.ProtocolVersion): _139.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _139.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _139.DefaultNodeInfo;
            fromPartial(object: Partial<_139.DefaultNodeInfo>): _139.DefaultNodeInfo;
            fromAmino(object: _139.DefaultNodeInfoAmino): _139.DefaultNodeInfo;
            toAmino(message: _139.DefaultNodeInfo): _139.DefaultNodeInfoAmino;
            fromAminoMsg(object: _139.DefaultNodeInfoAminoMsg): _139.DefaultNodeInfo;
            fromProtoMsg(message: _139.DefaultNodeInfoProtoMsg): _139.DefaultNodeInfo;
            toProto(message: _139.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _139.DefaultNodeInfo): _139.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _139.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _139.DefaultNodeInfoOther;
            fromPartial(object: Partial<_139.DefaultNodeInfoOther>): _139.DefaultNodeInfoOther;
            fromAmino(object: _139.DefaultNodeInfoOtherAmino): _139.DefaultNodeInfoOther;
            toAmino(message: _139.DefaultNodeInfoOther): _139.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _139.DefaultNodeInfoOtherAminoMsg): _139.DefaultNodeInfoOther;
            fromProtoMsg(message: _139.DefaultNodeInfoOtherProtoMsg): _139.DefaultNodeInfoOther;
            toProto(message: _139.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _139.DefaultNodeInfoOther): _139.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _144.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.ValidatorSet;
            fromPartial(object: Partial<_144.ValidatorSet>): _144.ValidatorSet;
            fromAmino(object: _144.ValidatorSetAmino): _144.ValidatorSet;
            toAmino(message: _144.ValidatorSet): _144.ValidatorSetAmino;
            fromAminoMsg(object: _144.ValidatorSetAminoMsg): _144.ValidatorSet;
            fromProtoMsg(message: _144.ValidatorSetProtoMsg): _144.ValidatorSet;
            toProto(message: _144.ValidatorSet): Uint8Array;
            toProtoMsg(message: _144.ValidatorSet): _144.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _144.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.Validator;
            fromPartial(object: Partial<_144.Validator>): _144.Validator;
            fromAmino(object: _144.ValidatorAmino): _144.Validator;
            toAmino(message: _144.Validator): _144.ValidatorAmino;
            fromAminoMsg(object: _144.ValidatorAminoMsg): _144.Validator;
            fromProtoMsg(message: _144.ValidatorProtoMsg): _144.Validator;
            toProto(message: _144.Validator): Uint8Array;
            toProtoMsg(message: _144.Validator): _144.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _144.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _144.SimpleValidator;
            fromPartial(object: Partial<_144.SimpleValidator>): _144.SimpleValidator;
            fromAmino(object: _144.SimpleValidatorAmino): _144.SimpleValidator;
            toAmino(message: _144.SimpleValidator): _144.SimpleValidatorAmino;
            fromAminoMsg(object: _144.SimpleValidatorAminoMsg): _144.SimpleValidator;
            fromProtoMsg(message: _144.SimpleValidatorProtoMsg): _144.SimpleValidator;
            toProto(message: _144.SimpleValidator): Uint8Array;
            toProtoMsg(message: _144.SimpleValidator): _144.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _143.BlockIDFlag;
        blockIDFlagToJSON(object: _143.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _143.SignedMsgType;
        signedMsgTypeToJSON(object: _143.SignedMsgType): string;
        BlockIDFlag: typeof _143.BlockIDFlag;
        BlockIDFlagSDKType: typeof _143.BlockIDFlag;
        BlockIDFlagAmino: typeof _143.BlockIDFlag;
        SignedMsgType: typeof _143.SignedMsgType;
        SignedMsgTypeSDKType: typeof _143.SignedMsgType;
        SignedMsgTypeAmino: typeof _143.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _143.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.PartSetHeader;
            fromPartial(object: Partial<_143.PartSetHeader>): _143.PartSetHeader;
            fromAmino(object: _143.PartSetHeaderAmino): _143.PartSetHeader;
            toAmino(message: _143.PartSetHeader): _143.PartSetHeaderAmino;
            fromAminoMsg(object: _143.PartSetHeaderAminoMsg): _143.PartSetHeader;
            fromProtoMsg(message: _143.PartSetHeaderProtoMsg): _143.PartSetHeader;
            toProto(message: _143.PartSetHeader): Uint8Array;
            toProtoMsg(message: _143.PartSetHeader): _143.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _143.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.Part;
            fromPartial(object: Partial<_143.Part>): _143.Part;
            fromAmino(object: _143.PartAmino): _143.Part;
            toAmino(message: _143.Part): _143.PartAmino;
            fromAminoMsg(object: _143.PartAminoMsg): _143.Part;
            fromProtoMsg(message: _143.PartProtoMsg): _143.Part;
            toProto(message: _143.Part): Uint8Array;
            toProtoMsg(message: _143.Part): _143.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _143.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.BlockID;
            fromPartial(object: Partial<_143.BlockID>): _143.BlockID;
            fromAmino(object: _143.BlockIDAmino): _143.BlockID;
            toAmino(message: _143.BlockID): _143.BlockIDAmino;
            fromAminoMsg(object: _143.BlockIDAminoMsg): _143.BlockID;
            fromProtoMsg(message: _143.BlockIDProtoMsg): _143.BlockID;
            toProto(message: _143.BlockID): Uint8Array;
            toProtoMsg(message: _143.BlockID): _143.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _143.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.Header;
            fromPartial(object: Partial<_143.Header>): _143.Header;
            fromAmino(object: _143.HeaderAmino): _143.Header;
            toAmino(message: _143.Header): _143.HeaderAmino;
            fromAminoMsg(object: _143.HeaderAminoMsg): _143.Header;
            fromProtoMsg(message: _143.HeaderProtoMsg): _143.Header;
            toProto(message: _143.Header): Uint8Array;
            toProtoMsg(message: _143.Header): _143.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _143.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.Data;
            fromPartial(object: Partial<_143.Data>): _143.Data;
            fromAmino(object: _143.DataAmino): _143.Data;
            toAmino(message: _143.Data): _143.DataAmino;
            fromAminoMsg(object: _143.DataAminoMsg): _143.Data;
            fromProtoMsg(message: _143.DataProtoMsg): _143.Data;
            toProto(message: _143.Data): Uint8Array;
            toProtoMsg(message: _143.Data): _143.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _143.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.Vote;
            fromPartial(object: Partial<_143.Vote>): _143.Vote;
            fromAmino(object: _143.VoteAmino): _143.Vote;
            toAmino(message: _143.Vote): _143.VoteAmino;
            fromAminoMsg(object: _143.VoteAminoMsg): _143.Vote;
            fromProtoMsg(message: _143.VoteProtoMsg): _143.Vote;
            toProto(message: _143.Vote): Uint8Array;
            toProtoMsg(message: _143.Vote): _143.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _143.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.Commit;
            fromPartial(object: Partial<_143.Commit>): _143.Commit;
            fromAmino(object: _143.CommitAmino): _143.Commit;
            toAmino(message: _143.Commit): _143.CommitAmino;
            fromAminoMsg(object: _143.CommitAminoMsg): _143.Commit;
            fromProtoMsg(message: _143.CommitProtoMsg): _143.Commit;
            toProto(message: _143.Commit): Uint8Array;
            toProtoMsg(message: _143.Commit): _143.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _143.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.CommitSig;
            fromPartial(object: Partial<_143.CommitSig>): _143.CommitSig;
            fromAmino(object: _143.CommitSigAmino): _143.CommitSig;
            toAmino(message: _143.CommitSig): _143.CommitSigAmino;
            fromAminoMsg(object: _143.CommitSigAminoMsg): _143.CommitSig;
            fromProtoMsg(message: _143.CommitSigProtoMsg): _143.CommitSig;
            toProto(message: _143.CommitSig): Uint8Array;
            toProtoMsg(message: _143.CommitSig): _143.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _143.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.Proposal;
            fromPartial(object: Partial<_143.Proposal>): _143.Proposal;
            fromAmino(object: _143.ProposalAmino): _143.Proposal;
            toAmino(message: _143.Proposal): _143.ProposalAmino;
            fromAminoMsg(object: _143.ProposalAminoMsg): _143.Proposal;
            fromProtoMsg(message: _143.ProposalProtoMsg): _143.Proposal;
            toProto(message: _143.Proposal): Uint8Array;
            toProtoMsg(message: _143.Proposal): _143.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _143.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.SignedHeader;
            fromPartial(object: Partial<_143.SignedHeader>): _143.SignedHeader;
            fromAmino(object: _143.SignedHeaderAmino): _143.SignedHeader;
            toAmino(message: _143.SignedHeader): _143.SignedHeaderAmino;
            fromAminoMsg(object: _143.SignedHeaderAminoMsg): _143.SignedHeader;
            fromProtoMsg(message: _143.SignedHeaderProtoMsg): _143.SignedHeader;
            toProto(message: _143.SignedHeader): Uint8Array;
            toProtoMsg(message: _143.SignedHeader): _143.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _143.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.LightBlock;
            fromPartial(object: Partial<_143.LightBlock>): _143.LightBlock;
            fromAmino(object: _143.LightBlockAmino): _143.LightBlock;
            toAmino(message: _143.LightBlock): _143.LightBlockAmino;
            fromAminoMsg(object: _143.LightBlockAminoMsg): _143.LightBlock;
            fromProtoMsg(message: _143.LightBlockProtoMsg): _143.LightBlock;
            toProto(message: _143.LightBlock): Uint8Array;
            toProtoMsg(message: _143.LightBlock): _143.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _143.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.BlockMeta;
            fromPartial(object: Partial<_143.BlockMeta>): _143.BlockMeta;
            fromAmino(object: _143.BlockMetaAmino): _143.BlockMeta;
            toAmino(message: _143.BlockMeta): _143.BlockMetaAmino;
            fromAminoMsg(object: _143.BlockMetaAminoMsg): _143.BlockMeta;
            fromProtoMsg(message: _143.BlockMetaProtoMsg): _143.BlockMeta;
            toProto(message: _143.BlockMeta): Uint8Array;
            toProtoMsg(message: _143.BlockMeta): _143.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _143.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _143.TxProof;
            fromPartial(object: Partial<_143.TxProof>): _143.TxProof;
            fromAmino(object: _143.TxProofAmino): _143.TxProof;
            toAmino(message: _143.TxProof): _143.TxProofAmino;
            fromAminoMsg(object: _143.TxProofAminoMsg): _143.TxProof;
            fromProtoMsg(message: _143.TxProofProtoMsg): _143.TxProof;
            toProto(message: _143.TxProof): Uint8Array;
            toProtoMsg(message: _143.TxProof): _143.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _142.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.ConsensusParams;
            fromPartial(object: Partial<_142.ConsensusParams>): _142.ConsensusParams;
            fromAmino(object: _142.ConsensusParamsAmino): _142.ConsensusParams;
            toAmino(message: _142.ConsensusParams): _142.ConsensusParamsAmino;
            fromAminoMsg(object: _142.ConsensusParamsAminoMsg): _142.ConsensusParams;
            fromProtoMsg(message: _142.ConsensusParamsProtoMsg): _142.ConsensusParams;
            toProto(message: _142.ConsensusParams): Uint8Array;
            toProtoMsg(message: _142.ConsensusParams): _142.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _142.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.BlockParams;
            fromPartial(object: Partial<_142.BlockParams>): _142.BlockParams;
            fromAmino(object: _142.BlockParamsAmino): _142.BlockParams;
            toAmino(message: _142.BlockParams): _142.BlockParamsAmino;
            fromAminoMsg(object: _142.BlockParamsAminoMsg): _142.BlockParams;
            fromProtoMsg(message: _142.BlockParamsProtoMsg): _142.BlockParams;
            toProto(message: _142.BlockParams): Uint8Array;
            toProtoMsg(message: _142.BlockParams): _142.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _142.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.EvidenceParams;
            fromPartial(object: Partial<_142.EvidenceParams>): _142.EvidenceParams;
            fromAmino(object: _142.EvidenceParamsAmino): _142.EvidenceParams;
            toAmino(message: _142.EvidenceParams): _142.EvidenceParamsAmino;
            fromAminoMsg(object: _142.EvidenceParamsAminoMsg): _142.EvidenceParams;
            fromProtoMsg(message: _142.EvidenceParamsProtoMsg): _142.EvidenceParams;
            toProto(message: _142.EvidenceParams): Uint8Array;
            toProtoMsg(message: _142.EvidenceParams): _142.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _142.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.ValidatorParams;
            fromPartial(object: Partial<_142.ValidatorParams>): _142.ValidatorParams;
            fromAmino(object: _142.ValidatorParamsAmino): _142.ValidatorParams;
            toAmino(message: _142.ValidatorParams): _142.ValidatorParamsAmino;
            fromAminoMsg(object: _142.ValidatorParamsAminoMsg): _142.ValidatorParams;
            fromProtoMsg(message: _142.ValidatorParamsProtoMsg): _142.ValidatorParams;
            toProto(message: _142.ValidatorParams): Uint8Array;
            toProtoMsg(message: _142.ValidatorParams): _142.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _142.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.VersionParams;
            fromPartial(object: Partial<_142.VersionParams>): _142.VersionParams;
            fromAmino(object: _142.VersionParamsAmino): _142.VersionParams;
            toAmino(message: _142.VersionParams): _142.VersionParamsAmino;
            fromAminoMsg(object: _142.VersionParamsAminoMsg): _142.VersionParams;
            fromProtoMsg(message: _142.VersionParamsProtoMsg): _142.VersionParams;
            toProto(message: _142.VersionParams): Uint8Array;
            toProtoMsg(message: _142.VersionParams): _142.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _142.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _142.HashedParams;
            fromPartial(object: Partial<_142.HashedParams>): _142.HashedParams;
            fromAmino(object: _142.HashedParamsAmino): _142.HashedParams;
            toAmino(message: _142.HashedParams): _142.HashedParamsAmino;
            fromAminoMsg(object: _142.HashedParamsAminoMsg): _142.HashedParams;
            fromProtoMsg(message: _142.HashedParamsProtoMsg): _142.HashedParams;
            toProto(message: _142.HashedParams): Uint8Array;
            toProtoMsg(message: _142.HashedParams): _142.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _141.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _141.Evidence;
            fromPartial(object: Partial<_141.Evidence>): _141.Evidence;
            fromAmino(object: _141.EvidenceAmino): _141.Evidence;
            toAmino(message: _141.Evidence): _141.EvidenceAmino;
            fromAminoMsg(object: _141.EvidenceAminoMsg): _141.Evidence;
            fromProtoMsg(message: _141.EvidenceProtoMsg): _141.Evidence;
            toProto(message: _141.Evidence): Uint8Array;
            toProtoMsg(message: _141.Evidence): _141.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _141.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _141.DuplicateVoteEvidence;
            fromPartial(object: Partial<_141.DuplicateVoteEvidence>): _141.DuplicateVoteEvidence;
            fromAmino(object: _141.DuplicateVoteEvidenceAmino): _141.DuplicateVoteEvidence;
            toAmino(message: _141.DuplicateVoteEvidence): _141.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _141.DuplicateVoteEvidenceAminoMsg): _141.DuplicateVoteEvidence;
            fromProtoMsg(message: _141.DuplicateVoteEvidenceProtoMsg): _141.DuplicateVoteEvidence;
            toProto(message: _141.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _141.DuplicateVoteEvidence): _141.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _141.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _141.LightClientAttackEvidence;
            fromPartial(object: Partial<_141.LightClientAttackEvidence>): _141.LightClientAttackEvidence;
            fromAmino(object: _141.LightClientAttackEvidenceAmino): _141.LightClientAttackEvidence;
            toAmino(message: _141.LightClientAttackEvidence): _141.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _141.LightClientAttackEvidenceAminoMsg): _141.LightClientAttackEvidence;
            fromProtoMsg(message: _141.LightClientAttackEvidenceProtoMsg): _141.LightClientAttackEvidence;
            toProto(message: _141.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _141.LightClientAttackEvidence): _141.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _141.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _141.EvidenceList;
            fromPartial(object: Partial<_141.EvidenceList>): _141.EvidenceList;
            fromAmino(object: _141.EvidenceListAmino): _141.EvidenceList;
            toAmino(message: _141.EvidenceList): _141.EvidenceListAmino;
            fromAminoMsg(object: _141.EvidenceListAminoMsg): _141.EvidenceList;
            fromProtoMsg(message: _141.EvidenceListProtoMsg): _141.EvidenceList;
            toProto(message: _141.EvidenceList): Uint8Array;
            toProtoMsg(message: _141.EvidenceList): _141.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _140.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _140.Block;
            fromPartial(object: Partial<_140.Block>): _140.Block;
            fromAmino(object: _140.BlockAmino): _140.Block;
            toAmino(message: _140.Block): _140.BlockAmino;
            fromAminoMsg(object: _140.BlockAminoMsg): _140.Block;
            fromProtoMsg(message: _140.BlockProtoMsg): _140.Block;
            toProto(message: _140.Block): Uint8Array;
            toProtoMsg(message: _140.Block): _140.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _145.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _145.App;
            fromPartial(object: Partial<_145.App>): _145.App;
            fromAmino(object: _145.AppAmino): _145.App;
            toAmino(message: _145.App): _145.AppAmino;
            fromAminoMsg(object: _145.AppAminoMsg): _145.App;
            fromProtoMsg(message: _145.AppProtoMsg): _145.App;
            toProto(message: _145.App): Uint8Array;
            toProtoMsg(message: _145.App): _145.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _145.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _145.Consensus;
            fromPartial(object: Partial<_145.Consensus>): _145.Consensus;
            fromAmino(object: _145.ConsensusAmino): _145.Consensus;
            toAmino(message: _145.Consensus): _145.ConsensusAmino;
            fromAminoMsg(object: _145.ConsensusAminoMsg): _145.Consensus;
            fromProtoMsg(message: _145.ConsensusProtoMsg): _145.Consensus;
            toProto(message: _145.Consensus): Uint8Array;
            toProtoMsg(message: _145.Consensus): _145.ConsensusProtoMsg;
        };
    };
}
