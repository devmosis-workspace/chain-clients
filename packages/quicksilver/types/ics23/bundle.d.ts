import * as _152 from "../confio/proofs";
export declare const ics23: {
    hashOpFromJSON(object: any): _152.HashOp;
    hashOpToJSON(object: _152.HashOp): string;
    lengthOpFromJSON(object: any): _152.LengthOp;
    lengthOpToJSON(object: _152.LengthOp): string;
    HashOp: typeof _152.HashOp;
    HashOpSDKType: typeof _152.HashOp;
    HashOpAmino: typeof _152.HashOp;
    LengthOp: typeof _152.LengthOp;
    LengthOpSDKType: typeof _152.LengthOp;
    LengthOpAmino: typeof _152.LengthOp;
    ExistenceProof: {
        typeUrl: string;
        encode(message: _152.ExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.ExistenceProof;
        fromPartial(object: Partial<_152.ExistenceProof>): _152.ExistenceProof;
        fromAmino(object: _152.ExistenceProofAmino): _152.ExistenceProof;
        toAmino(message: _152.ExistenceProof): _152.ExistenceProofAmino;
        fromAminoMsg(object: _152.ExistenceProofAminoMsg): _152.ExistenceProof;
        fromProtoMsg(message: _152.ExistenceProofProtoMsg): _152.ExistenceProof;
        toProto(message: _152.ExistenceProof): Uint8Array;
        toProtoMsg(message: _152.ExistenceProof): _152.ExistenceProofProtoMsg;
    };
    NonExistenceProof: {
        typeUrl: string;
        encode(message: _152.NonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.NonExistenceProof;
        fromPartial(object: Partial<_152.NonExistenceProof>): _152.NonExistenceProof;
        fromAmino(object: _152.NonExistenceProofAmino): _152.NonExistenceProof;
        toAmino(message: _152.NonExistenceProof): _152.NonExistenceProofAmino;
        fromAminoMsg(object: _152.NonExistenceProofAminoMsg): _152.NonExistenceProof;
        fromProtoMsg(message: _152.NonExistenceProofProtoMsg): _152.NonExistenceProof;
        toProto(message: _152.NonExistenceProof): Uint8Array;
        toProtoMsg(message: _152.NonExistenceProof): _152.NonExistenceProofProtoMsg;
    };
    CommitmentProof: {
        typeUrl: string;
        encode(message: _152.CommitmentProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.CommitmentProof;
        fromPartial(object: Partial<_152.CommitmentProof>): _152.CommitmentProof;
        fromAmino(object: _152.CommitmentProofAmino): _152.CommitmentProof;
        toAmino(message: _152.CommitmentProof): _152.CommitmentProofAmino;
        fromAminoMsg(object: _152.CommitmentProofAminoMsg): _152.CommitmentProof;
        fromProtoMsg(message: _152.CommitmentProofProtoMsg): _152.CommitmentProof;
        toProto(message: _152.CommitmentProof): Uint8Array;
        toProtoMsg(message: _152.CommitmentProof): _152.CommitmentProofProtoMsg;
    };
    LeafOp: {
        typeUrl: string;
        encode(message: _152.LeafOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.LeafOp;
        fromPartial(object: Partial<_152.LeafOp>): _152.LeafOp;
        fromAmino(object: _152.LeafOpAmino): _152.LeafOp;
        toAmino(message: _152.LeafOp): _152.LeafOpAmino;
        fromAminoMsg(object: _152.LeafOpAminoMsg): _152.LeafOp;
        fromProtoMsg(message: _152.LeafOpProtoMsg): _152.LeafOp;
        toProto(message: _152.LeafOp): Uint8Array;
        toProtoMsg(message: _152.LeafOp): _152.LeafOpProtoMsg;
    };
    InnerOp: {
        typeUrl: string;
        encode(message: _152.InnerOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.InnerOp;
        fromPartial(object: Partial<_152.InnerOp>): _152.InnerOp;
        fromAmino(object: _152.InnerOpAmino): _152.InnerOp;
        toAmino(message: _152.InnerOp): _152.InnerOpAmino;
        fromAminoMsg(object: _152.InnerOpAminoMsg): _152.InnerOp;
        fromProtoMsg(message: _152.InnerOpProtoMsg): _152.InnerOp;
        toProto(message: _152.InnerOp): Uint8Array;
        toProtoMsg(message: _152.InnerOp): _152.InnerOpProtoMsg;
    };
    ProofSpec: {
        typeUrl: string;
        encode(message: _152.ProofSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.ProofSpec;
        fromPartial(object: Partial<_152.ProofSpec>): _152.ProofSpec;
        fromAmino(object: _152.ProofSpecAmino): _152.ProofSpec;
        toAmino(message: _152.ProofSpec): _152.ProofSpecAmino;
        fromAminoMsg(object: _152.ProofSpecAminoMsg): _152.ProofSpec;
        fromProtoMsg(message: _152.ProofSpecProtoMsg): _152.ProofSpec;
        toProto(message: _152.ProofSpec): Uint8Array;
        toProtoMsg(message: _152.ProofSpec): _152.ProofSpecProtoMsg;
    };
    InnerSpec: {
        typeUrl: string;
        encode(message: _152.InnerSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.InnerSpec;
        fromPartial(object: Partial<_152.InnerSpec>): _152.InnerSpec;
        fromAmino(object: _152.InnerSpecAmino): _152.InnerSpec;
        toAmino(message: _152.InnerSpec): _152.InnerSpecAmino;
        fromAminoMsg(object: _152.InnerSpecAminoMsg): _152.InnerSpec;
        fromProtoMsg(message: _152.InnerSpecProtoMsg): _152.InnerSpec;
        toProto(message: _152.InnerSpec): Uint8Array;
        toProtoMsg(message: _152.InnerSpec): _152.InnerSpecProtoMsg;
    };
    BatchProof: {
        typeUrl: string;
        encode(message: _152.BatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.BatchProof;
        fromPartial(object: Partial<_152.BatchProof>): _152.BatchProof;
        fromAmino(object: _152.BatchProofAmino): _152.BatchProof;
        toAmino(message: _152.BatchProof): _152.BatchProofAmino;
        fromAminoMsg(object: _152.BatchProofAminoMsg): _152.BatchProof;
        fromProtoMsg(message: _152.BatchProofProtoMsg): _152.BatchProof;
        toProto(message: _152.BatchProof): Uint8Array;
        toProtoMsg(message: _152.BatchProof): _152.BatchProofProtoMsg;
    };
    BatchEntry: {
        typeUrl: string;
        encode(message: _152.BatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.BatchEntry;
        fromPartial(object: Partial<_152.BatchEntry>): _152.BatchEntry;
        fromAmino(object: _152.BatchEntryAmino): _152.BatchEntry;
        toAmino(message: _152.BatchEntry): _152.BatchEntryAmino;
        fromAminoMsg(object: _152.BatchEntryAminoMsg): _152.BatchEntry;
        fromProtoMsg(message: _152.BatchEntryProtoMsg): _152.BatchEntry;
        toProto(message: _152.BatchEntry): Uint8Array;
        toProtoMsg(message: _152.BatchEntry): _152.BatchEntryProtoMsg;
    };
    CompressedBatchProof: {
        typeUrl: string;
        encode(message: _152.CompressedBatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.CompressedBatchProof;
        fromPartial(object: Partial<_152.CompressedBatchProof>): _152.CompressedBatchProof;
        fromAmino(object: _152.CompressedBatchProofAmino): _152.CompressedBatchProof;
        toAmino(message: _152.CompressedBatchProof): _152.CompressedBatchProofAmino;
        fromAminoMsg(object: _152.CompressedBatchProofAminoMsg): _152.CompressedBatchProof;
        fromProtoMsg(message: _152.CompressedBatchProofProtoMsg): _152.CompressedBatchProof;
        toProto(message: _152.CompressedBatchProof): Uint8Array;
        toProtoMsg(message: _152.CompressedBatchProof): _152.CompressedBatchProofProtoMsg;
    };
    CompressedBatchEntry: {
        typeUrl: string;
        encode(message: _152.CompressedBatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.CompressedBatchEntry;
        fromPartial(object: Partial<_152.CompressedBatchEntry>): _152.CompressedBatchEntry;
        fromAmino(object: _152.CompressedBatchEntryAmino): _152.CompressedBatchEntry;
        toAmino(message: _152.CompressedBatchEntry): _152.CompressedBatchEntryAmino;
        fromAminoMsg(object: _152.CompressedBatchEntryAminoMsg): _152.CompressedBatchEntry;
        fromProtoMsg(message: _152.CompressedBatchEntryProtoMsg): _152.CompressedBatchEntry;
        toProto(message: _152.CompressedBatchEntry): Uint8Array;
        toProtoMsg(message: _152.CompressedBatchEntry): _152.CompressedBatchEntryProtoMsg;
    };
    CompressedExistenceProof: {
        typeUrl: string;
        encode(message: _152.CompressedExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.CompressedExistenceProof;
        fromPartial(object: Partial<_152.CompressedExistenceProof>): _152.CompressedExistenceProof;
        fromAmino(object: _152.CompressedExistenceProofAmino): _152.CompressedExistenceProof;
        toAmino(message: _152.CompressedExistenceProof): _152.CompressedExistenceProofAmino;
        fromAminoMsg(object: _152.CompressedExistenceProofAminoMsg): _152.CompressedExistenceProof;
        fromProtoMsg(message: _152.CompressedExistenceProofProtoMsg): _152.CompressedExistenceProof;
        toProto(message: _152.CompressedExistenceProof): Uint8Array;
        toProtoMsg(message: _152.CompressedExistenceProof): _152.CompressedExistenceProofProtoMsg;
    };
    CompressedNonExistenceProof: {
        typeUrl: string;
        encode(message: _152.CompressedNonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
        fromJSON(object: any): _152.CompressedNonExistenceProof;
        fromPartial(object: Partial<_152.CompressedNonExistenceProof>): _152.CompressedNonExistenceProof;
        fromAmino(object: _152.CompressedNonExistenceProofAmino): _152.CompressedNonExistenceProof;
        toAmino(message: _152.CompressedNonExistenceProof): _152.CompressedNonExistenceProofAmino;
        fromAminoMsg(object: _152.CompressedNonExistenceProofAminoMsg): _152.CompressedNonExistenceProof;
        fromProtoMsg(message: _152.CompressedNonExistenceProofProtoMsg): _152.CompressedNonExistenceProof;
        toProto(message: _152.CompressedNonExistenceProof): Uint8Array;
        toProtoMsg(message: _152.CompressedNonExistenceProof): _152.CompressedNonExistenceProofProtoMsg;
    };
};
