import * as _160 from "./abci/types";
import * as _161 from "./crypto/keys";
import * as _162 from "./crypto/proof";
import * as _163 from "./libs/bits/types";
import * as _164 from "./p2p/types";
import * as _165 from "./types/block";
import * as _166 from "./types/evidence";
import * as _167 from "./types/params";
import * as _168 from "./types/types";
import * as _169 from "./types/validator";
import * as _170 from "./version/types";
export declare namespace tendermint {
    const abci: {
        checkTxTypeFromJSON(object: any): _160.CheckTxType;
        checkTxTypeToJSON(object: _160.CheckTxType): string;
        responseOfferSnapshot_ResultFromJSON(object: any): _160.ResponseOfferSnapshot_Result;
        responseOfferSnapshot_ResultToJSON(object: _160.ResponseOfferSnapshot_Result): string;
        responseApplySnapshotChunk_ResultFromJSON(object: any): _160.ResponseApplySnapshotChunk_Result;
        responseApplySnapshotChunk_ResultToJSON(object: _160.ResponseApplySnapshotChunk_Result): string;
        evidenceTypeFromJSON(object: any): _160.EvidenceType;
        evidenceTypeToJSON(object: _160.EvidenceType): string;
        CheckTxType: typeof _160.CheckTxType;
        CheckTxTypeSDKType: typeof _160.CheckTxType;
        CheckTxTypeAmino: typeof _160.CheckTxType;
        ResponseOfferSnapshot_Result: typeof _160.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultSDKType: typeof _160.ResponseOfferSnapshot_Result;
        ResponseOfferSnapshot_ResultAmino: typeof _160.ResponseOfferSnapshot_Result;
        ResponseApplySnapshotChunk_Result: typeof _160.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultSDKType: typeof _160.ResponseApplySnapshotChunk_Result;
        ResponseApplySnapshotChunk_ResultAmino: typeof _160.ResponseApplySnapshotChunk_Result;
        EvidenceType: typeof _160.EvidenceType;
        EvidenceTypeSDKType: typeof _160.EvidenceType;
        EvidenceTypeAmino: typeof _160.EvidenceType;
        Request: {
            typeUrl: string;
            encode(message: _160.Request, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.Request;
            fromPartial(object: Partial<_160.Request>): _160.Request;
            fromAmino(object: _160.RequestAmino): _160.Request;
            toAmino(message: _160.Request): _160.RequestAmino;
            fromAminoMsg(object: _160.RequestAminoMsg): _160.Request;
            fromProtoMsg(message: _160.RequestProtoMsg): _160.Request;
            toProto(message: _160.Request): Uint8Array;
            toProtoMsg(message: _160.Request): _160.RequestProtoMsg;
        };
        RequestEcho: {
            typeUrl: string;
            encode(message: _160.RequestEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestEcho;
            fromPartial(object: Partial<_160.RequestEcho>): _160.RequestEcho;
            fromAmino(object: _160.RequestEchoAmino): _160.RequestEcho;
            toAmino(message: _160.RequestEcho): _160.RequestEchoAmino;
            fromAminoMsg(object: _160.RequestEchoAminoMsg): _160.RequestEcho;
            fromProtoMsg(message: _160.RequestEchoProtoMsg): _160.RequestEcho;
            toProto(message: _160.RequestEcho): Uint8Array;
            toProtoMsg(message: _160.RequestEcho): _160.RequestEchoProtoMsg;
        };
        RequestFlush: {
            typeUrl: string;
            encode(_: _160.RequestFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _160.RequestFlush;
            fromPartial(_: Partial<_160.RequestFlush>): _160.RequestFlush;
            fromAmino(_: _160.RequestFlushAmino): _160.RequestFlush;
            toAmino(_: _160.RequestFlush): _160.RequestFlushAmino;
            fromAminoMsg(object: _160.RequestFlushAminoMsg): _160.RequestFlush;
            fromProtoMsg(message: _160.RequestFlushProtoMsg): _160.RequestFlush;
            toProto(message: _160.RequestFlush): Uint8Array;
            toProtoMsg(message: _160.RequestFlush): _160.RequestFlushProtoMsg;
        };
        RequestInfo: {
            typeUrl: string;
            encode(message: _160.RequestInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestInfo;
            fromPartial(object: Partial<_160.RequestInfo>): _160.RequestInfo;
            fromAmino(object: _160.RequestInfoAmino): _160.RequestInfo;
            toAmino(message: _160.RequestInfo): _160.RequestInfoAmino;
            fromAminoMsg(object: _160.RequestInfoAminoMsg): _160.RequestInfo;
            fromProtoMsg(message: _160.RequestInfoProtoMsg): _160.RequestInfo;
            toProto(message: _160.RequestInfo): Uint8Array;
            toProtoMsg(message: _160.RequestInfo): _160.RequestInfoProtoMsg;
        };
        RequestSetOption: {
            typeUrl: string;
            encode(message: _160.RequestSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestSetOption;
            fromPartial(object: Partial<_160.RequestSetOption>): _160.RequestSetOption;
            fromAmino(object: _160.RequestSetOptionAmino): _160.RequestSetOption;
            toAmino(message: _160.RequestSetOption): _160.RequestSetOptionAmino;
            fromAminoMsg(object: _160.RequestSetOptionAminoMsg): _160.RequestSetOption;
            fromProtoMsg(message: _160.RequestSetOptionProtoMsg): _160.RequestSetOption;
            toProto(message: _160.RequestSetOption): Uint8Array;
            toProtoMsg(message: _160.RequestSetOption): _160.RequestSetOptionProtoMsg;
        };
        RequestInitChain: {
            typeUrl: string;
            encode(message: _160.RequestInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestInitChain;
            fromPartial(object: Partial<_160.RequestInitChain>): _160.RequestInitChain;
            fromAmino(object: _160.RequestInitChainAmino): _160.RequestInitChain;
            toAmino(message: _160.RequestInitChain): _160.RequestInitChainAmino;
            fromAminoMsg(object: _160.RequestInitChainAminoMsg): _160.RequestInitChain;
            fromProtoMsg(message: _160.RequestInitChainProtoMsg): _160.RequestInitChain;
            toProto(message: _160.RequestInitChain): Uint8Array;
            toProtoMsg(message: _160.RequestInitChain): _160.RequestInitChainProtoMsg;
        };
        RequestQuery: {
            typeUrl: string;
            encode(message: _160.RequestQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestQuery;
            fromPartial(object: Partial<_160.RequestQuery>): _160.RequestQuery;
            fromAmino(object: _160.RequestQueryAmino): _160.RequestQuery;
            toAmino(message: _160.RequestQuery): _160.RequestQueryAmino;
            fromAminoMsg(object: _160.RequestQueryAminoMsg): _160.RequestQuery;
            fromProtoMsg(message: _160.RequestQueryProtoMsg): _160.RequestQuery;
            toProto(message: _160.RequestQuery): Uint8Array;
            toProtoMsg(message: _160.RequestQuery): _160.RequestQueryProtoMsg;
        };
        RequestBeginBlock: {
            typeUrl: string;
            encode(message: _160.RequestBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestBeginBlock;
            fromPartial(object: Partial<_160.RequestBeginBlock>): _160.RequestBeginBlock;
            fromAmino(object: _160.RequestBeginBlockAmino): _160.RequestBeginBlock;
            toAmino(message: _160.RequestBeginBlock): _160.RequestBeginBlockAmino;
            fromAminoMsg(object: _160.RequestBeginBlockAminoMsg): _160.RequestBeginBlock;
            fromProtoMsg(message: _160.RequestBeginBlockProtoMsg): _160.RequestBeginBlock;
            toProto(message: _160.RequestBeginBlock): Uint8Array;
            toProtoMsg(message: _160.RequestBeginBlock): _160.RequestBeginBlockProtoMsg;
        };
        RequestCheckTx: {
            typeUrl: string;
            encode(message: _160.RequestCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestCheckTx;
            fromPartial(object: Partial<_160.RequestCheckTx>): _160.RequestCheckTx;
            fromAmino(object: _160.RequestCheckTxAmino): _160.RequestCheckTx;
            toAmino(message: _160.RequestCheckTx): _160.RequestCheckTxAmino;
            fromAminoMsg(object: _160.RequestCheckTxAminoMsg): _160.RequestCheckTx;
            fromProtoMsg(message: _160.RequestCheckTxProtoMsg): _160.RequestCheckTx;
            toProto(message: _160.RequestCheckTx): Uint8Array;
            toProtoMsg(message: _160.RequestCheckTx): _160.RequestCheckTxProtoMsg;
        };
        RequestDeliverTx: {
            typeUrl: string;
            encode(message: _160.RequestDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestDeliverTx;
            fromPartial(object: Partial<_160.RequestDeliverTx>): _160.RequestDeliverTx;
            fromAmino(object: _160.RequestDeliverTxAmino): _160.RequestDeliverTx;
            toAmino(message: _160.RequestDeliverTx): _160.RequestDeliverTxAmino;
            fromAminoMsg(object: _160.RequestDeliverTxAminoMsg): _160.RequestDeliverTx;
            fromProtoMsg(message: _160.RequestDeliverTxProtoMsg): _160.RequestDeliverTx;
            toProto(message: _160.RequestDeliverTx): Uint8Array;
            toProtoMsg(message: _160.RequestDeliverTx): _160.RequestDeliverTxProtoMsg;
        };
        RequestEndBlock: {
            typeUrl: string;
            encode(message: _160.RequestEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestEndBlock;
            fromPartial(object: Partial<_160.RequestEndBlock>): _160.RequestEndBlock;
            fromAmino(object: _160.RequestEndBlockAmino): _160.RequestEndBlock;
            toAmino(message: _160.RequestEndBlock): _160.RequestEndBlockAmino;
            fromAminoMsg(object: _160.RequestEndBlockAminoMsg): _160.RequestEndBlock;
            fromProtoMsg(message: _160.RequestEndBlockProtoMsg): _160.RequestEndBlock;
            toProto(message: _160.RequestEndBlock): Uint8Array;
            toProtoMsg(message: _160.RequestEndBlock): _160.RequestEndBlockProtoMsg;
        };
        RequestCommit: {
            typeUrl: string;
            encode(_: _160.RequestCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _160.RequestCommit;
            fromPartial(_: Partial<_160.RequestCommit>): _160.RequestCommit;
            fromAmino(_: _160.RequestCommitAmino): _160.RequestCommit;
            toAmino(_: _160.RequestCommit): _160.RequestCommitAmino;
            fromAminoMsg(object: _160.RequestCommitAminoMsg): _160.RequestCommit;
            fromProtoMsg(message: _160.RequestCommitProtoMsg): _160.RequestCommit;
            toProto(message: _160.RequestCommit): Uint8Array;
            toProtoMsg(message: _160.RequestCommit): _160.RequestCommitProtoMsg;
        };
        RequestListSnapshots: {
            typeUrl: string;
            encode(_: _160.RequestListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _160.RequestListSnapshots;
            fromPartial(_: Partial<_160.RequestListSnapshots>): _160.RequestListSnapshots;
            fromAmino(_: _160.RequestListSnapshotsAmino): _160.RequestListSnapshots;
            toAmino(_: _160.RequestListSnapshots): _160.RequestListSnapshotsAmino;
            fromAminoMsg(object: _160.RequestListSnapshotsAminoMsg): _160.RequestListSnapshots;
            fromProtoMsg(message: _160.RequestListSnapshotsProtoMsg): _160.RequestListSnapshots;
            toProto(message: _160.RequestListSnapshots): Uint8Array;
            toProtoMsg(message: _160.RequestListSnapshots): _160.RequestListSnapshotsProtoMsg;
        };
        RequestOfferSnapshot: {
            typeUrl: string;
            encode(message: _160.RequestOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestOfferSnapshot;
            fromPartial(object: Partial<_160.RequestOfferSnapshot>): _160.RequestOfferSnapshot;
            fromAmino(object: _160.RequestOfferSnapshotAmino): _160.RequestOfferSnapshot;
            toAmino(message: _160.RequestOfferSnapshot): _160.RequestOfferSnapshotAmino;
            fromAminoMsg(object: _160.RequestOfferSnapshotAminoMsg): _160.RequestOfferSnapshot;
            fromProtoMsg(message: _160.RequestOfferSnapshotProtoMsg): _160.RequestOfferSnapshot;
            toProto(message: _160.RequestOfferSnapshot): Uint8Array;
            toProtoMsg(message: _160.RequestOfferSnapshot): _160.RequestOfferSnapshotProtoMsg;
        };
        RequestLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _160.RequestLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestLoadSnapshotChunk;
            fromPartial(object: Partial<_160.RequestLoadSnapshotChunk>): _160.RequestLoadSnapshotChunk;
            fromAmino(object: _160.RequestLoadSnapshotChunkAmino): _160.RequestLoadSnapshotChunk;
            toAmino(message: _160.RequestLoadSnapshotChunk): _160.RequestLoadSnapshotChunkAmino;
            fromAminoMsg(object: _160.RequestLoadSnapshotChunkAminoMsg): _160.RequestLoadSnapshotChunk;
            fromProtoMsg(message: _160.RequestLoadSnapshotChunkProtoMsg): _160.RequestLoadSnapshotChunk;
            toProto(message: _160.RequestLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _160.RequestLoadSnapshotChunk): _160.RequestLoadSnapshotChunkProtoMsg;
        };
        RequestApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _160.RequestApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.RequestApplySnapshotChunk;
            fromPartial(object: Partial<_160.RequestApplySnapshotChunk>): _160.RequestApplySnapshotChunk;
            fromAmino(object: _160.RequestApplySnapshotChunkAmino): _160.RequestApplySnapshotChunk;
            toAmino(message: _160.RequestApplySnapshotChunk): _160.RequestApplySnapshotChunkAmino;
            fromAminoMsg(object: _160.RequestApplySnapshotChunkAminoMsg): _160.RequestApplySnapshotChunk;
            fromProtoMsg(message: _160.RequestApplySnapshotChunkProtoMsg): _160.RequestApplySnapshotChunk;
            toProto(message: _160.RequestApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _160.RequestApplySnapshotChunk): _160.RequestApplySnapshotChunkProtoMsg;
        };
        Response: {
            typeUrl: string;
            encode(message: _160.Response, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.Response;
            fromPartial(object: Partial<_160.Response>): _160.Response;
            fromAmino(object: _160.ResponseAmino): _160.Response;
            toAmino(message: _160.Response): _160.ResponseAmino;
            fromAminoMsg(object: _160.ResponseAminoMsg): _160.Response;
            fromProtoMsg(message: _160.ResponseProtoMsg): _160.Response;
            toProto(message: _160.Response): Uint8Array;
            toProtoMsg(message: _160.Response): _160.ResponseProtoMsg;
        };
        ResponseException: {
            typeUrl: string;
            encode(message: _160.ResponseException, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseException;
            fromPartial(object: Partial<_160.ResponseException>): _160.ResponseException;
            fromAmino(object: _160.ResponseExceptionAmino): _160.ResponseException;
            toAmino(message: _160.ResponseException): _160.ResponseExceptionAmino;
            fromAminoMsg(object: _160.ResponseExceptionAminoMsg): _160.ResponseException;
            fromProtoMsg(message: _160.ResponseExceptionProtoMsg): _160.ResponseException;
            toProto(message: _160.ResponseException): Uint8Array;
            toProtoMsg(message: _160.ResponseException): _160.ResponseExceptionProtoMsg;
        };
        ResponseEcho: {
            typeUrl: string;
            encode(message: _160.ResponseEcho, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseEcho;
            fromPartial(object: Partial<_160.ResponseEcho>): _160.ResponseEcho;
            fromAmino(object: _160.ResponseEchoAmino): _160.ResponseEcho;
            toAmino(message: _160.ResponseEcho): _160.ResponseEchoAmino;
            fromAminoMsg(object: _160.ResponseEchoAminoMsg): _160.ResponseEcho;
            fromProtoMsg(message: _160.ResponseEchoProtoMsg): _160.ResponseEcho;
            toProto(message: _160.ResponseEcho): Uint8Array;
            toProtoMsg(message: _160.ResponseEcho): _160.ResponseEchoProtoMsg;
        };
        ResponseFlush: {
            typeUrl: string;
            encode(_: _160.ResponseFlush, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(_: any): _160.ResponseFlush;
            fromPartial(_: Partial<_160.ResponseFlush>): _160.ResponseFlush;
            fromAmino(_: _160.ResponseFlushAmino): _160.ResponseFlush;
            toAmino(_: _160.ResponseFlush): _160.ResponseFlushAmino;
            fromAminoMsg(object: _160.ResponseFlushAminoMsg): _160.ResponseFlush;
            fromProtoMsg(message: _160.ResponseFlushProtoMsg): _160.ResponseFlush;
            toProto(message: _160.ResponseFlush): Uint8Array;
            toProtoMsg(message: _160.ResponseFlush): _160.ResponseFlushProtoMsg;
        };
        ResponseInfo: {
            typeUrl: string;
            encode(message: _160.ResponseInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseInfo;
            fromPartial(object: Partial<_160.ResponseInfo>): _160.ResponseInfo;
            fromAmino(object: _160.ResponseInfoAmino): _160.ResponseInfo;
            toAmino(message: _160.ResponseInfo): _160.ResponseInfoAmino;
            fromAminoMsg(object: _160.ResponseInfoAminoMsg): _160.ResponseInfo;
            fromProtoMsg(message: _160.ResponseInfoProtoMsg): _160.ResponseInfo;
            toProto(message: _160.ResponseInfo): Uint8Array;
            toProtoMsg(message: _160.ResponseInfo): _160.ResponseInfoProtoMsg;
        };
        ResponseSetOption: {
            typeUrl: string;
            encode(message: _160.ResponseSetOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseSetOption;
            fromPartial(object: Partial<_160.ResponseSetOption>): _160.ResponseSetOption;
            fromAmino(object: _160.ResponseSetOptionAmino): _160.ResponseSetOption;
            toAmino(message: _160.ResponseSetOption): _160.ResponseSetOptionAmino;
            fromAminoMsg(object: _160.ResponseSetOptionAminoMsg): _160.ResponseSetOption;
            fromProtoMsg(message: _160.ResponseSetOptionProtoMsg): _160.ResponseSetOption;
            toProto(message: _160.ResponseSetOption): Uint8Array;
            toProtoMsg(message: _160.ResponseSetOption): _160.ResponseSetOptionProtoMsg;
        };
        ResponseInitChain: {
            typeUrl: string;
            encode(message: _160.ResponseInitChain, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseInitChain;
            fromPartial(object: Partial<_160.ResponseInitChain>): _160.ResponseInitChain;
            fromAmino(object: _160.ResponseInitChainAmino): _160.ResponseInitChain;
            toAmino(message: _160.ResponseInitChain): _160.ResponseInitChainAmino;
            fromAminoMsg(object: _160.ResponseInitChainAminoMsg): _160.ResponseInitChain;
            fromProtoMsg(message: _160.ResponseInitChainProtoMsg): _160.ResponseInitChain;
            toProto(message: _160.ResponseInitChain): Uint8Array;
            toProtoMsg(message: _160.ResponseInitChain): _160.ResponseInitChainProtoMsg;
        };
        ResponseQuery: {
            typeUrl: string;
            encode(message: _160.ResponseQuery, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseQuery;
            fromPartial(object: Partial<_160.ResponseQuery>): _160.ResponseQuery;
            fromAmino(object: _160.ResponseQueryAmino): _160.ResponseQuery;
            toAmino(message: _160.ResponseQuery): _160.ResponseQueryAmino;
            fromAminoMsg(object: _160.ResponseQueryAminoMsg): _160.ResponseQuery;
            fromProtoMsg(message: _160.ResponseQueryProtoMsg): _160.ResponseQuery;
            toProto(message: _160.ResponseQuery): Uint8Array;
            toProtoMsg(message: _160.ResponseQuery): _160.ResponseQueryProtoMsg;
        };
        ResponseBeginBlock: {
            typeUrl: string;
            encode(message: _160.ResponseBeginBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseBeginBlock;
            fromPartial(object: Partial<_160.ResponseBeginBlock>): _160.ResponseBeginBlock;
            fromAmino(object: _160.ResponseBeginBlockAmino): _160.ResponseBeginBlock;
            toAmino(message: _160.ResponseBeginBlock): _160.ResponseBeginBlockAmino;
            fromAminoMsg(object: _160.ResponseBeginBlockAminoMsg): _160.ResponseBeginBlock;
            fromProtoMsg(message: _160.ResponseBeginBlockProtoMsg): _160.ResponseBeginBlock;
            toProto(message: _160.ResponseBeginBlock): Uint8Array;
            toProtoMsg(message: _160.ResponseBeginBlock): _160.ResponseBeginBlockProtoMsg;
        };
        ResponseCheckTx: {
            typeUrl: string;
            encode(message: _160.ResponseCheckTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseCheckTx;
            fromPartial(object: Partial<_160.ResponseCheckTx>): _160.ResponseCheckTx;
            fromAmino(object: _160.ResponseCheckTxAmino): _160.ResponseCheckTx;
            toAmino(message: _160.ResponseCheckTx): _160.ResponseCheckTxAmino;
            fromAminoMsg(object: _160.ResponseCheckTxAminoMsg): _160.ResponseCheckTx;
            fromProtoMsg(message: _160.ResponseCheckTxProtoMsg): _160.ResponseCheckTx;
            toProto(message: _160.ResponseCheckTx): Uint8Array;
            toProtoMsg(message: _160.ResponseCheckTx): _160.ResponseCheckTxProtoMsg;
        };
        ResponseDeliverTx: {
            typeUrl: string;
            encode(message: _160.ResponseDeliverTx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseDeliverTx;
            fromPartial(object: Partial<_160.ResponseDeliverTx>): _160.ResponseDeliverTx;
            fromAmino(object: _160.ResponseDeliverTxAmino): _160.ResponseDeliverTx;
            toAmino(message: _160.ResponseDeliverTx): _160.ResponseDeliverTxAmino;
            fromAminoMsg(object: _160.ResponseDeliverTxAminoMsg): _160.ResponseDeliverTx;
            fromProtoMsg(message: _160.ResponseDeliverTxProtoMsg): _160.ResponseDeliverTx;
            toProto(message: _160.ResponseDeliverTx): Uint8Array;
            toProtoMsg(message: _160.ResponseDeliverTx): _160.ResponseDeliverTxProtoMsg;
        };
        ResponseEndBlock: {
            typeUrl: string;
            encode(message: _160.ResponseEndBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseEndBlock;
            fromPartial(object: Partial<_160.ResponseEndBlock>): _160.ResponseEndBlock;
            fromAmino(object: _160.ResponseEndBlockAmino): _160.ResponseEndBlock;
            toAmino(message: _160.ResponseEndBlock): _160.ResponseEndBlockAmino;
            fromAminoMsg(object: _160.ResponseEndBlockAminoMsg): _160.ResponseEndBlock;
            fromProtoMsg(message: _160.ResponseEndBlockProtoMsg): _160.ResponseEndBlock;
            toProto(message: _160.ResponseEndBlock): Uint8Array;
            toProtoMsg(message: _160.ResponseEndBlock): _160.ResponseEndBlockProtoMsg;
        };
        ResponseCommit: {
            typeUrl: string;
            encode(message: _160.ResponseCommit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseCommit;
            fromPartial(object: Partial<_160.ResponseCommit>): _160.ResponseCommit;
            fromAmino(object: _160.ResponseCommitAmino): _160.ResponseCommit;
            toAmino(message: _160.ResponseCommit): _160.ResponseCommitAmino;
            fromAminoMsg(object: _160.ResponseCommitAminoMsg): _160.ResponseCommit;
            fromProtoMsg(message: _160.ResponseCommitProtoMsg): _160.ResponseCommit;
            toProto(message: _160.ResponseCommit): Uint8Array;
            toProtoMsg(message: _160.ResponseCommit): _160.ResponseCommitProtoMsg;
        };
        ResponseListSnapshots: {
            typeUrl: string;
            encode(message: _160.ResponseListSnapshots, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseListSnapshots;
            fromPartial(object: Partial<_160.ResponseListSnapshots>): _160.ResponseListSnapshots;
            fromAmino(object: _160.ResponseListSnapshotsAmino): _160.ResponseListSnapshots;
            toAmino(message: _160.ResponseListSnapshots): _160.ResponseListSnapshotsAmino;
            fromAminoMsg(object: _160.ResponseListSnapshotsAminoMsg): _160.ResponseListSnapshots;
            fromProtoMsg(message: _160.ResponseListSnapshotsProtoMsg): _160.ResponseListSnapshots;
            toProto(message: _160.ResponseListSnapshots): Uint8Array;
            toProtoMsg(message: _160.ResponseListSnapshots): _160.ResponseListSnapshotsProtoMsg;
        };
        ResponseOfferSnapshot: {
            typeUrl: string;
            encode(message: _160.ResponseOfferSnapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseOfferSnapshot;
            fromPartial(object: Partial<_160.ResponseOfferSnapshot>): _160.ResponseOfferSnapshot;
            fromAmino(object: _160.ResponseOfferSnapshotAmino): _160.ResponseOfferSnapshot;
            toAmino(message: _160.ResponseOfferSnapshot): _160.ResponseOfferSnapshotAmino;
            fromAminoMsg(object: _160.ResponseOfferSnapshotAminoMsg): _160.ResponseOfferSnapshot;
            fromProtoMsg(message: _160.ResponseOfferSnapshotProtoMsg): _160.ResponseOfferSnapshot;
            toProto(message: _160.ResponseOfferSnapshot): Uint8Array;
            toProtoMsg(message: _160.ResponseOfferSnapshot): _160.ResponseOfferSnapshotProtoMsg;
        };
        ResponseLoadSnapshotChunk: {
            typeUrl: string;
            encode(message: _160.ResponseLoadSnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseLoadSnapshotChunk;
            fromPartial(object: Partial<_160.ResponseLoadSnapshotChunk>): _160.ResponseLoadSnapshotChunk;
            fromAmino(object: _160.ResponseLoadSnapshotChunkAmino): _160.ResponseLoadSnapshotChunk;
            toAmino(message: _160.ResponseLoadSnapshotChunk): _160.ResponseLoadSnapshotChunkAmino;
            fromAminoMsg(object: _160.ResponseLoadSnapshotChunkAminoMsg): _160.ResponseLoadSnapshotChunk;
            fromProtoMsg(message: _160.ResponseLoadSnapshotChunkProtoMsg): _160.ResponseLoadSnapshotChunk;
            toProto(message: _160.ResponseLoadSnapshotChunk): Uint8Array;
            toProtoMsg(message: _160.ResponseLoadSnapshotChunk): _160.ResponseLoadSnapshotChunkProtoMsg;
        };
        ResponseApplySnapshotChunk: {
            typeUrl: string;
            encode(message: _160.ResponseApplySnapshotChunk, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ResponseApplySnapshotChunk;
            fromPartial(object: Partial<_160.ResponseApplySnapshotChunk>): _160.ResponseApplySnapshotChunk;
            fromAmino(object: _160.ResponseApplySnapshotChunkAmino): _160.ResponseApplySnapshotChunk;
            toAmino(message: _160.ResponseApplySnapshotChunk): _160.ResponseApplySnapshotChunkAmino;
            fromAminoMsg(object: _160.ResponseApplySnapshotChunkAminoMsg): _160.ResponseApplySnapshotChunk;
            fromProtoMsg(message: _160.ResponseApplySnapshotChunkProtoMsg): _160.ResponseApplySnapshotChunk;
            toProto(message: _160.ResponseApplySnapshotChunk): Uint8Array;
            toProtoMsg(message: _160.ResponseApplySnapshotChunk): _160.ResponseApplySnapshotChunkProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _160.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ConsensusParams;
            fromPartial(object: Partial<_160.ConsensusParams>): _160.ConsensusParams;
            fromAmino(object: _160.ConsensusParamsAmino): _160.ConsensusParams;
            toAmino(message: _160.ConsensusParams): _160.ConsensusParamsAmino;
            fromAminoMsg(object: _160.ConsensusParamsAminoMsg): _160.ConsensusParams;
            fromProtoMsg(message: _160.ConsensusParamsProtoMsg): _160.ConsensusParams;
            toProto(message: _160.ConsensusParams): Uint8Array;
            toProtoMsg(message: _160.ConsensusParams): _160.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _160.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.BlockParams;
            fromPartial(object: Partial<_160.BlockParams>): _160.BlockParams;
            fromAmino(object: _160.BlockParamsAmino): _160.BlockParams;
            toAmino(message: _160.BlockParams): _160.BlockParamsAmino;
            fromAminoMsg(object: _160.BlockParamsAminoMsg): _160.BlockParams;
            fromProtoMsg(message: _160.BlockParamsProtoMsg): _160.BlockParams;
            toProto(message: _160.BlockParams): Uint8Array;
            toProtoMsg(message: _160.BlockParams): _160.BlockParamsProtoMsg;
        };
        LastCommitInfo: {
            typeUrl: string;
            encode(message: _160.LastCommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.LastCommitInfo;
            fromPartial(object: Partial<_160.LastCommitInfo>): _160.LastCommitInfo;
            fromAmino(object: _160.LastCommitInfoAmino): _160.LastCommitInfo;
            toAmino(message: _160.LastCommitInfo): _160.LastCommitInfoAmino;
            fromAminoMsg(object: _160.LastCommitInfoAminoMsg): _160.LastCommitInfo;
            fromProtoMsg(message: _160.LastCommitInfoProtoMsg): _160.LastCommitInfo;
            toProto(message: _160.LastCommitInfo): Uint8Array;
            toProtoMsg(message: _160.LastCommitInfo): _160.LastCommitInfoProtoMsg;
        };
        Event: {
            typeUrl: string;
            encode(message: _160.Event, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.Event;
            fromPartial(object: Partial<_160.Event>): _160.Event;
            fromAmino(object: _160.EventAmino): _160.Event;
            toAmino(message: _160.Event): _160.EventAmino;
            fromAminoMsg(object: _160.EventAminoMsg): _160.Event;
            fromProtoMsg(message: _160.EventProtoMsg): _160.Event;
            toProto(message: _160.Event): Uint8Array;
            toProtoMsg(message: _160.Event): _160.EventProtoMsg;
        };
        EventAttribute: {
            typeUrl: string;
            encode(message: _160.EventAttribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.EventAttribute;
            fromPartial(object: Partial<_160.EventAttribute>): _160.EventAttribute;
            fromAmino(object: _160.EventAttributeAmino): _160.EventAttribute;
            toAmino(message: _160.EventAttribute): _160.EventAttributeAmino;
            fromAminoMsg(object: _160.EventAttributeAminoMsg): _160.EventAttribute;
            fromProtoMsg(message: _160.EventAttributeProtoMsg): _160.EventAttribute;
            toProto(message: _160.EventAttribute): Uint8Array;
            toProtoMsg(message: _160.EventAttribute): _160.EventAttributeProtoMsg;
        };
        TxResult: {
            typeUrl: string;
            encode(message: _160.TxResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.TxResult;
            fromPartial(object: Partial<_160.TxResult>): _160.TxResult;
            fromAmino(object: _160.TxResultAmino): _160.TxResult;
            toAmino(message: _160.TxResult): _160.TxResultAmino;
            fromAminoMsg(object: _160.TxResultAminoMsg): _160.TxResult;
            fromProtoMsg(message: _160.TxResultProtoMsg): _160.TxResult;
            toProto(message: _160.TxResult): Uint8Array;
            toProtoMsg(message: _160.TxResult): _160.TxResultProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _160.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.Validator;
            fromPartial(object: Partial<_160.Validator>): _160.Validator;
            fromAmino(object: _160.ValidatorAmino): _160.Validator;
            toAmino(message: _160.Validator): _160.ValidatorAmino;
            fromAminoMsg(object: _160.ValidatorAminoMsg): _160.Validator;
            fromProtoMsg(message: _160.ValidatorProtoMsg): _160.Validator;
            toProto(message: _160.Validator): Uint8Array;
            toProtoMsg(message: _160.Validator): _160.ValidatorProtoMsg;
        };
        ValidatorUpdate: {
            typeUrl: string;
            encode(message: _160.ValidatorUpdate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.ValidatorUpdate;
            fromPartial(object: Partial<_160.ValidatorUpdate>): _160.ValidatorUpdate;
            fromAmino(object: _160.ValidatorUpdateAmino): _160.ValidatorUpdate;
            toAmino(message: _160.ValidatorUpdate): _160.ValidatorUpdateAmino;
            fromAminoMsg(object: _160.ValidatorUpdateAminoMsg): _160.ValidatorUpdate;
            fromProtoMsg(message: _160.ValidatorUpdateProtoMsg): _160.ValidatorUpdate;
            toProto(message: _160.ValidatorUpdate): Uint8Array;
            toProtoMsg(message: _160.ValidatorUpdate): _160.ValidatorUpdateProtoMsg;
        };
        VoteInfo: {
            typeUrl: string;
            encode(message: _160.VoteInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.VoteInfo;
            fromPartial(object: Partial<_160.VoteInfo>): _160.VoteInfo;
            fromAmino(object: _160.VoteInfoAmino): _160.VoteInfo;
            toAmino(message: _160.VoteInfo): _160.VoteInfoAmino;
            fromAminoMsg(object: _160.VoteInfoAminoMsg): _160.VoteInfo;
            fromProtoMsg(message: _160.VoteInfoProtoMsg): _160.VoteInfo;
            toProto(message: _160.VoteInfo): Uint8Array;
            toProtoMsg(message: _160.VoteInfo): _160.VoteInfoProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _160.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.Evidence;
            fromPartial(object: Partial<_160.Evidence>): _160.Evidence;
            fromAmino(object: _160.EvidenceAmino): _160.Evidence;
            toAmino(message: _160.Evidence): _160.EvidenceAmino;
            fromAminoMsg(object: _160.EvidenceAminoMsg): _160.Evidence;
            fromProtoMsg(message: _160.EvidenceProtoMsg): _160.Evidence;
            toProto(message: _160.Evidence): Uint8Array;
            toProtoMsg(message: _160.Evidence): _160.EvidenceProtoMsg;
        };
        Snapshot: {
            typeUrl: string;
            encode(message: _160.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _160.Snapshot;
            fromPartial(object: Partial<_160.Snapshot>): _160.Snapshot;
            fromAmino(object: _160.SnapshotAmino): _160.Snapshot;
            toAmino(message: _160.Snapshot): _160.SnapshotAmino;
            fromAminoMsg(object: _160.SnapshotAminoMsg): _160.Snapshot;
            fromProtoMsg(message: _160.SnapshotProtoMsg): _160.Snapshot;
            toProto(message: _160.Snapshot): Uint8Array;
            toProtoMsg(message: _160.Snapshot): _160.SnapshotProtoMsg;
        };
    };
    const crypto: {
        Proof: {
            typeUrl: string;
            encode(message: _162.Proof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _162.Proof;
            fromPartial(object: Partial<_162.Proof>): _162.Proof;
            fromAmino(object: _162.ProofAmino): _162.Proof;
            toAmino(message: _162.Proof): _162.ProofAmino;
            fromAminoMsg(object: _162.ProofAminoMsg): _162.Proof;
            fromProtoMsg(message: _162.ProofProtoMsg): _162.Proof;
            toProto(message: _162.Proof): Uint8Array;
            toProtoMsg(message: _162.Proof): _162.ProofProtoMsg;
        };
        ValueOp: {
            typeUrl: string;
            encode(message: _162.ValueOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _162.ValueOp;
            fromPartial(object: Partial<_162.ValueOp>): _162.ValueOp;
            fromAmino(object: _162.ValueOpAmino): _162.ValueOp;
            toAmino(message: _162.ValueOp): _162.ValueOpAmino;
            fromAminoMsg(object: _162.ValueOpAminoMsg): _162.ValueOp;
            fromProtoMsg(message: _162.ValueOpProtoMsg): _162.ValueOp;
            toProto(message: _162.ValueOp): Uint8Array;
            toProtoMsg(message: _162.ValueOp): _162.ValueOpProtoMsg;
        };
        DominoOp: {
            typeUrl: string;
            encode(message: _162.DominoOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _162.DominoOp;
            fromPartial(object: Partial<_162.DominoOp>): _162.DominoOp;
            fromAmino(object: _162.DominoOpAmino): _162.DominoOp;
            toAmino(message: _162.DominoOp): _162.DominoOpAmino;
            fromAminoMsg(object: _162.DominoOpAminoMsg): _162.DominoOp;
            fromProtoMsg(message: _162.DominoOpProtoMsg): _162.DominoOp;
            toProto(message: _162.DominoOp): Uint8Array;
            toProtoMsg(message: _162.DominoOp): _162.DominoOpProtoMsg;
        };
        ProofOp: {
            typeUrl: string;
            encode(message: _162.ProofOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _162.ProofOp;
            fromPartial(object: Partial<_162.ProofOp>): _162.ProofOp;
            fromAmino(object: _162.ProofOpAmino): _162.ProofOp;
            toAmino(message: _162.ProofOp): _162.ProofOpAmino;
            fromAminoMsg(object: _162.ProofOpAminoMsg): _162.ProofOp;
            fromProtoMsg(message: _162.ProofOpProtoMsg): _162.ProofOp;
            toProto(message: _162.ProofOp): Uint8Array;
            toProtoMsg(message: _162.ProofOp): _162.ProofOpProtoMsg;
        };
        ProofOps: {
            typeUrl: string;
            encode(message: _162.ProofOps, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _162.ProofOps;
            fromPartial(object: Partial<_162.ProofOps>): _162.ProofOps;
            fromAmino(object: _162.ProofOpsAmino): _162.ProofOps;
            toAmino(message: _162.ProofOps): _162.ProofOpsAmino;
            fromAminoMsg(object: _162.ProofOpsAminoMsg): _162.ProofOps;
            fromProtoMsg(message: _162.ProofOpsProtoMsg): _162.ProofOps;
            toProto(message: _162.ProofOps): Uint8Array;
            toProtoMsg(message: _162.ProofOps): _162.ProofOpsProtoMsg;
        };
        PublicKey: {
            typeUrl: string;
            encode(message: _161.PublicKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _161.PublicKey;
            fromPartial(object: Partial<_161.PublicKey>): _161.PublicKey;
            fromAmino(object: _161.PublicKeyAmino): _161.PublicKey;
            toAmino(message: _161.PublicKey): _161.PublicKeyAmino;
            fromAminoMsg(object: _161.PublicKeyAminoMsg): _161.PublicKey;
            fromProtoMsg(message: _161.PublicKeyProtoMsg): _161.PublicKey;
            toProto(message: _161.PublicKey): Uint8Array;
            toProtoMsg(message: _161.PublicKey): _161.PublicKeyProtoMsg;
        };
    };
    namespace libs {
        const bits: {
            BitArray: {
                typeUrl: string;
                encode(message: _163.BitArray, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                fromJSON(object: any): _163.BitArray;
                fromPartial(object: Partial<_163.BitArray>): _163.BitArray;
                fromAmino(object: _163.BitArrayAmino): _163.BitArray;
                toAmino(message: _163.BitArray): _163.BitArrayAmino;
                fromAminoMsg(object: _163.BitArrayAminoMsg): _163.BitArray;
                fromProtoMsg(message: _163.BitArrayProtoMsg): _163.BitArray;
                toProto(message: _163.BitArray): Uint8Array;
                toProtoMsg(message: _163.BitArray): _163.BitArrayProtoMsg;
            };
        };
    }
    const p2p: {
        NetAddress: {
            typeUrl: string;
            encode(message: _164.NetAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _164.NetAddress;
            fromPartial(object: Partial<_164.NetAddress>): _164.NetAddress;
            fromAmino(object: _164.NetAddressAmino): _164.NetAddress;
            toAmino(message: _164.NetAddress): _164.NetAddressAmino;
            fromAminoMsg(object: _164.NetAddressAminoMsg): _164.NetAddress;
            fromProtoMsg(message: _164.NetAddressProtoMsg): _164.NetAddress;
            toProto(message: _164.NetAddress): Uint8Array;
            toProtoMsg(message: _164.NetAddress): _164.NetAddressProtoMsg;
        };
        ProtocolVersion: {
            typeUrl: string;
            encode(message: _164.ProtocolVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _164.ProtocolVersion;
            fromPartial(object: Partial<_164.ProtocolVersion>): _164.ProtocolVersion;
            fromAmino(object: _164.ProtocolVersionAmino): _164.ProtocolVersion;
            toAmino(message: _164.ProtocolVersion): _164.ProtocolVersionAmino;
            fromAminoMsg(object: _164.ProtocolVersionAminoMsg): _164.ProtocolVersion;
            fromProtoMsg(message: _164.ProtocolVersionProtoMsg): _164.ProtocolVersion;
            toProto(message: _164.ProtocolVersion): Uint8Array;
            toProtoMsg(message: _164.ProtocolVersion): _164.ProtocolVersionProtoMsg;
        };
        DefaultNodeInfo: {
            typeUrl: string;
            encode(message: _164.DefaultNodeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _164.DefaultNodeInfo;
            fromPartial(object: Partial<_164.DefaultNodeInfo>): _164.DefaultNodeInfo;
            fromAmino(object: _164.DefaultNodeInfoAmino): _164.DefaultNodeInfo;
            toAmino(message: _164.DefaultNodeInfo): _164.DefaultNodeInfoAmino;
            fromAminoMsg(object: _164.DefaultNodeInfoAminoMsg): _164.DefaultNodeInfo;
            fromProtoMsg(message: _164.DefaultNodeInfoProtoMsg): _164.DefaultNodeInfo;
            toProto(message: _164.DefaultNodeInfo): Uint8Array;
            toProtoMsg(message: _164.DefaultNodeInfo): _164.DefaultNodeInfoProtoMsg;
        };
        DefaultNodeInfoOther: {
            typeUrl: string;
            encode(message: _164.DefaultNodeInfoOther, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _164.DefaultNodeInfoOther;
            fromPartial(object: Partial<_164.DefaultNodeInfoOther>): _164.DefaultNodeInfoOther;
            fromAmino(object: _164.DefaultNodeInfoOtherAmino): _164.DefaultNodeInfoOther;
            toAmino(message: _164.DefaultNodeInfoOther): _164.DefaultNodeInfoOtherAmino;
            fromAminoMsg(object: _164.DefaultNodeInfoOtherAminoMsg): _164.DefaultNodeInfoOther;
            fromProtoMsg(message: _164.DefaultNodeInfoOtherProtoMsg): _164.DefaultNodeInfoOther;
            toProto(message: _164.DefaultNodeInfoOther): Uint8Array;
            toProtoMsg(message: _164.DefaultNodeInfoOther): _164.DefaultNodeInfoOtherProtoMsg;
        };
    };
    const types: {
        ValidatorSet: {
            typeUrl: string;
            encode(message: _169.ValidatorSet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _169.ValidatorSet;
            fromPartial(object: Partial<_169.ValidatorSet>): _169.ValidatorSet;
            fromAmino(object: _169.ValidatorSetAmino): _169.ValidatorSet;
            toAmino(message: _169.ValidatorSet): _169.ValidatorSetAmino;
            fromAminoMsg(object: _169.ValidatorSetAminoMsg): _169.ValidatorSet;
            fromProtoMsg(message: _169.ValidatorSetProtoMsg): _169.ValidatorSet;
            toProto(message: _169.ValidatorSet): Uint8Array;
            toProtoMsg(message: _169.ValidatorSet): _169.ValidatorSetProtoMsg;
        };
        Validator: {
            typeUrl: string;
            encode(message: _169.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _169.Validator;
            fromPartial(object: Partial<_169.Validator>): _169.Validator;
            fromAmino(object: _169.ValidatorAmino): _169.Validator;
            toAmino(message: _169.Validator): _169.ValidatorAmino;
            fromAminoMsg(object: _169.ValidatorAminoMsg): _169.Validator;
            fromProtoMsg(message: _169.ValidatorProtoMsg): _169.Validator;
            toProto(message: _169.Validator): Uint8Array;
            toProtoMsg(message: _169.Validator): _169.ValidatorProtoMsg;
        };
        SimpleValidator: {
            typeUrl: string;
            encode(message: _169.SimpleValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _169.SimpleValidator;
            fromPartial(object: Partial<_169.SimpleValidator>): _169.SimpleValidator;
            fromAmino(object: _169.SimpleValidatorAmino): _169.SimpleValidator;
            toAmino(message: _169.SimpleValidator): _169.SimpleValidatorAmino;
            fromAminoMsg(object: _169.SimpleValidatorAminoMsg): _169.SimpleValidator;
            fromProtoMsg(message: _169.SimpleValidatorProtoMsg): _169.SimpleValidator;
            toProto(message: _169.SimpleValidator): Uint8Array;
            toProtoMsg(message: _169.SimpleValidator): _169.SimpleValidatorProtoMsg;
        };
        blockIDFlagFromJSON(object: any): _168.BlockIDFlag;
        blockIDFlagToJSON(object: _168.BlockIDFlag): string;
        signedMsgTypeFromJSON(object: any): _168.SignedMsgType;
        signedMsgTypeToJSON(object: _168.SignedMsgType): string;
        BlockIDFlag: typeof _168.BlockIDFlag;
        BlockIDFlagSDKType: typeof _168.BlockIDFlag;
        BlockIDFlagAmino: typeof _168.BlockIDFlag;
        SignedMsgType: typeof _168.SignedMsgType;
        SignedMsgTypeSDKType: typeof _168.SignedMsgType;
        SignedMsgTypeAmino: typeof _168.SignedMsgType;
        PartSetHeader: {
            typeUrl: string;
            encode(message: _168.PartSetHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.PartSetHeader;
            fromPartial(object: Partial<_168.PartSetHeader>): _168.PartSetHeader;
            fromAmino(object: _168.PartSetHeaderAmino): _168.PartSetHeader;
            toAmino(message: _168.PartSetHeader): _168.PartSetHeaderAmino;
            fromAminoMsg(object: _168.PartSetHeaderAminoMsg): _168.PartSetHeader;
            fromProtoMsg(message: _168.PartSetHeaderProtoMsg): _168.PartSetHeader;
            toProto(message: _168.PartSetHeader): Uint8Array;
            toProtoMsg(message: _168.PartSetHeader): _168.PartSetHeaderProtoMsg;
        };
        Part: {
            typeUrl: string;
            encode(message: _168.Part, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.Part;
            fromPartial(object: Partial<_168.Part>): _168.Part;
            fromAmino(object: _168.PartAmino): _168.Part;
            toAmino(message: _168.Part): _168.PartAmino;
            fromAminoMsg(object: _168.PartAminoMsg): _168.Part;
            fromProtoMsg(message: _168.PartProtoMsg): _168.Part;
            toProto(message: _168.Part): Uint8Array;
            toProtoMsg(message: _168.Part): _168.PartProtoMsg;
        };
        BlockID: {
            typeUrl: string;
            encode(message: _168.BlockID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.BlockID;
            fromPartial(object: Partial<_168.BlockID>): _168.BlockID;
            fromAmino(object: _168.BlockIDAmino): _168.BlockID;
            toAmino(message: _168.BlockID): _168.BlockIDAmino;
            fromAminoMsg(object: _168.BlockIDAminoMsg): _168.BlockID;
            fromProtoMsg(message: _168.BlockIDProtoMsg): _168.BlockID;
            toProto(message: _168.BlockID): Uint8Array;
            toProtoMsg(message: _168.BlockID): _168.BlockIDProtoMsg;
        };
        Header: {
            typeUrl: string;
            encode(message: _168.Header, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.Header;
            fromPartial(object: Partial<_168.Header>): _168.Header;
            fromAmino(object: _168.HeaderAmino): _168.Header;
            toAmino(message: _168.Header): _168.HeaderAmino;
            fromAminoMsg(object: _168.HeaderAminoMsg): _168.Header;
            fromProtoMsg(message: _168.HeaderProtoMsg): _168.Header;
            toProto(message: _168.Header): Uint8Array;
            toProtoMsg(message: _168.Header): _168.HeaderProtoMsg;
        };
        Data: {
            typeUrl: string;
            encode(message: _168.Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.Data;
            fromPartial(object: Partial<_168.Data>): _168.Data;
            fromAmino(object: _168.DataAmino): _168.Data;
            toAmino(message: _168.Data): _168.DataAmino;
            fromAminoMsg(object: _168.DataAminoMsg): _168.Data;
            fromProtoMsg(message: _168.DataProtoMsg): _168.Data;
            toProto(message: _168.Data): Uint8Array;
            toProtoMsg(message: _168.Data): _168.DataProtoMsg;
        };
        Vote: {
            typeUrl: string;
            encode(message: _168.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.Vote;
            fromPartial(object: Partial<_168.Vote>): _168.Vote;
            fromAmino(object: _168.VoteAmino): _168.Vote;
            toAmino(message: _168.Vote): _168.VoteAmino;
            fromAminoMsg(object: _168.VoteAminoMsg): _168.Vote;
            fromProtoMsg(message: _168.VoteProtoMsg): _168.Vote;
            toProto(message: _168.Vote): Uint8Array;
            toProtoMsg(message: _168.Vote): _168.VoteProtoMsg;
        };
        Commit: {
            typeUrl: string;
            encode(message: _168.Commit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.Commit;
            fromPartial(object: Partial<_168.Commit>): _168.Commit;
            fromAmino(object: _168.CommitAmino): _168.Commit;
            toAmino(message: _168.Commit): _168.CommitAmino;
            fromAminoMsg(object: _168.CommitAminoMsg): _168.Commit;
            fromProtoMsg(message: _168.CommitProtoMsg): _168.Commit;
            toProto(message: _168.Commit): Uint8Array;
            toProtoMsg(message: _168.Commit): _168.CommitProtoMsg;
        };
        CommitSig: {
            typeUrl: string;
            encode(message: _168.CommitSig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.CommitSig;
            fromPartial(object: Partial<_168.CommitSig>): _168.CommitSig;
            fromAmino(object: _168.CommitSigAmino): _168.CommitSig;
            toAmino(message: _168.CommitSig): _168.CommitSigAmino;
            fromAminoMsg(object: _168.CommitSigAminoMsg): _168.CommitSig;
            fromProtoMsg(message: _168.CommitSigProtoMsg): _168.CommitSig;
            toProto(message: _168.CommitSig): Uint8Array;
            toProtoMsg(message: _168.CommitSig): _168.CommitSigProtoMsg;
        };
        Proposal: {
            typeUrl: string;
            encode(message: _168.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.Proposal;
            fromPartial(object: Partial<_168.Proposal>): _168.Proposal;
            fromAmino(object: _168.ProposalAmino): _168.Proposal;
            toAmino(message: _168.Proposal): _168.ProposalAmino;
            fromAminoMsg(object: _168.ProposalAminoMsg): _168.Proposal;
            fromProtoMsg(message: _168.ProposalProtoMsg): _168.Proposal;
            toProto(message: _168.Proposal): Uint8Array;
            toProtoMsg(message: _168.Proposal): _168.ProposalProtoMsg;
        };
        SignedHeader: {
            typeUrl: string;
            encode(message: _168.SignedHeader, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.SignedHeader;
            fromPartial(object: Partial<_168.SignedHeader>): _168.SignedHeader;
            fromAmino(object: _168.SignedHeaderAmino): _168.SignedHeader;
            toAmino(message: _168.SignedHeader): _168.SignedHeaderAmino;
            fromAminoMsg(object: _168.SignedHeaderAminoMsg): _168.SignedHeader;
            fromProtoMsg(message: _168.SignedHeaderProtoMsg): _168.SignedHeader;
            toProto(message: _168.SignedHeader): Uint8Array;
            toProtoMsg(message: _168.SignedHeader): _168.SignedHeaderProtoMsg;
        };
        LightBlock: {
            typeUrl: string;
            encode(message: _168.LightBlock, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.LightBlock;
            fromPartial(object: Partial<_168.LightBlock>): _168.LightBlock;
            fromAmino(object: _168.LightBlockAmino): _168.LightBlock;
            toAmino(message: _168.LightBlock): _168.LightBlockAmino;
            fromAminoMsg(object: _168.LightBlockAminoMsg): _168.LightBlock;
            fromProtoMsg(message: _168.LightBlockProtoMsg): _168.LightBlock;
            toProto(message: _168.LightBlock): Uint8Array;
            toProtoMsg(message: _168.LightBlock): _168.LightBlockProtoMsg;
        };
        BlockMeta: {
            typeUrl: string;
            encode(message: _168.BlockMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.BlockMeta;
            fromPartial(object: Partial<_168.BlockMeta>): _168.BlockMeta;
            fromAmino(object: _168.BlockMetaAmino): _168.BlockMeta;
            toAmino(message: _168.BlockMeta): _168.BlockMetaAmino;
            fromAminoMsg(object: _168.BlockMetaAminoMsg): _168.BlockMeta;
            fromProtoMsg(message: _168.BlockMetaProtoMsg): _168.BlockMeta;
            toProto(message: _168.BlockMeta): Uint8Array;
            toProtoMsg(message: _168.BlockMeta): _168.BlockMetaProtoMsg;
        };
        TxProof: {
            typeUrl: string;
            encode(message: _168.TxProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _168.TxProof;
            fromPartial(object: Partial<_168.TxProof>): _168.TxProof;
            fromAmino(object: _168.TxProofAmino): _168.TxProof;
            toAmino(message: _168.TxProof): _168.TxProofAmino;
            fromAminoMsg(object: _168.TxProofAminoMsg): _168.TxProof;
            fromProtoMsg(message: _168.TxProofProtoMsg): _168.TxProof;
            toProto(message: _168.TxProof): Uint8Array;
            toProtoMsg(message: _168.TxProof): _168.TxProofProtoMsg;
        };
        ConsensusParams: {
            typeUrl: string;
            encode(message: _167.ConsensusParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _167.ConsensusParams;
            fromPartial(object: Partial<_167.ConsensusParams>): _167.ConsensusParams;
            fromAmino(object: _167.ConsensusParamsAmino): _167.ConsensusParams;
            toAmino(message: _167.ConsensusParams): _167.ConsensusParamsAmino;
            fromAminoMsg(object: _167.ConsensusParamsAminoMsg): _167.ConsensusParams;
            fromProtoMsg(message: _167.ConsensusParamsProtoMsg): _167.ConsensusParams;
            toProto(message: _167.ConsensusParams): Uint8Array;
            toProtoMsg(message: _167.ConsensusParams): _167.ConsensusParamsProtoMsg;
        };
        BlockParams: {
            typeUrl: string;
            encode(message: _167.BlockParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _167.BlockParams;
            fromPartial(object: Partial<_167.BlockParams>): _167.BlockParams;
            fromAmino(object: _167.BlockParamsAmino): _167.BlockParams;
            toAmino(message: _167.BlockParams): _167.BlockParamsAmino;
            fromAminoMsg(object: _167.BlockParamsAminoMsg): _167.BlockParams;
            fromProtoMsg(message: _167.BlockParamsProtoMsg): _167.BlockParams;
            toProto(message: _167.BlockParams): Uint8Array;
            toProtoMsg(message: _167.BlockParams): _167.BlockParamsProtoMsg;
        };
        EvidenceParams: {
            typeUrl: string;
            encode(message: _167.EvidenceParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _167.EvidenceParams;
            fromPartial(object: Partial<_167.EvidenceParams>): _167.EvidenceParams;
            fromAmino(object: _167.EvidenceParamsAmino): _167.EvidenceParams;
            toAmino(message: _167.EvidenceParams): _167.EvidenceParamsAmino;
            fromAminoMsg(object: _167.EvidenceParamsAminoMsg): _167.EvidenceParams;
            fromProtoMsg(message: _167.EvidenceParamsProtoMsg): _167.EvidenceParams;
            toProto(message: _167.EvidenceParams): Uint8Array;
            toProtoMsg(message: _167.EvidenceParams): _167.EvidenceParamsProtoMsg;
        };
        ValidatorParams: {
            typeUrl: string;
            encode(message: _167.ValidatorParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _167.ValidatorParams;
            fromPartial(object: Partial<_167.ValidatorParams>): _167.ValidatorParams;
            fromAmino(object: _167.ValidatorParamsAmino): _167.ValidatorParams;
            toAmino(message: _167.ValidatorParams): _167.ValidatorParamsAmino;
            fromAminoMsg(object: _167.ValidatorParamsAminoMsg): _167.ValidatorParams;
            fromProtoMsg(message: _167.ValidatorParamsProtoMsg): _167.ValidatorParams;
            toProto(message: _167.ValidatorParams): Uint8Array;
            toProtoMsg(message: _167.ValidatorParams): _167.ValidatorParamsProtoMsg;
        };
        VersionParams: {
            typeUrl: string;
            encode(message: _167.VersionParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _167.VersionParams;
            fromPartial(object: Partial<_167.VersionParams>): _167.VersionParams;
            fromAmino(object: _167.VersionParamsAmino): _167.VersionParams;
            toAmino(message: _167.VersionParams): _167.VersionParamsAmino;
            fromAminoMsg(object: _167.VersionParamsAminoMsg): _167.VersionParams;
            fromProtoMsg(message: _167.VersionParamsProtoMsg): _167.VersionParams;
            toProto(message: _167.VersionParams): Uint8Array;
            toProtoMsg(message: _167.VersionParams): _167.VersionParamsProtoMsg;
        };
        HashedParams: {
            typeUrl: string;
            encode(message: _167.HashedParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _167.HashedParams;
            fromPartial(object: Partial<_167.HashedParams>): _167.HashedParams;
            fromAmino(object: _167.HashedParamsAmino): _167.HashedParams;
            toAmino(message: _167.HashedParams): _167.HashedParamsAmino;
            fromAminoMsg(object: _167.HashedParamsAminoMsg): _167.HashedParams;
            fromProtoMsg(message: _167.HashedParamsProtoMsg): _167.HashedParams;
            toProto(message: _167.HashedParams): Uint8Array;
            toProtoMsg(message: _167.HashedParams): _167.HashedParamsProtoMsg;
        };
        Evidence: {
            typeUrl: string;
            encode(message: _166.Evidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _166.Evidence;
            fromPartial(object: Partial<_166.Evidence>): _166.Evidence;
            fromAmino(object: _166.EvidenceAmino): _166.Evidence;
            toAmino(message: _166.Evidence): _166.EvidenceAmino;
            fromAminoMsg(object: _166.EvidenceAminoMsg): _166.Evidence;
            fromProtoMsg(message: _166.EvidenceProtoMsg): _166.Evidence;
            toProto(message: _166.Evidence): Uint8Array;
            toProtoMsg(message: _166.Evidence): _166.EvidenceProtoMsg;
        };
        DuplicateVoteEvidence: {
            typeUrl: string;
            encode(message: _166.DuplicateVoteEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _166.DuplicateVoteEvidence;
            fromPartial(object: Partial<_166.DuplicateVoteEvidence>): _166.DuplicateVoteEvidence;
            fromAmino(object: _166.DuplicateVoteEvidenceAmino): _166.DuplicateVoteEvidence;
            toAmino(message: _166.DuplicateVoteEvidence): _166.DuplicateVoteEvidenceAmino;
            fromAminoMsg(object: _166.DuplicateVoteEvidenceAminoMsg): _166.DuplicateVoteEvidence;
            fromProtoMsg(message: _166.DuplicateVoteEvidenceProtoMsg): _166.DuplicateVoteEvidence;
            toProto(message: _166.DuplicateVoteEvidence): Uint8Array;
            toProtoMsg(message: _166.DuplicateVoteEvidence): _166.DuplicateVoteEvidenceProtoMsg;
        };
        LightClientAttackEvidence: {
            typeUrl: string;
            encode(message: _166.LightClientAttackEvidence, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _166.LightClientAttackEvidence;
            fromPartial(object: Partial<_166.LightClientAttackEvidence>): _166.LightClientAttackEvidence;
            fromAmino(object: _166.LightClientAttackEvidenceAmino): _166.LightClientAttackEvidence;
            toAmino(message: _166.LightClientAttackEvidence): _166.LightClientAttackEvidenceAmino;
            fromAminoMsg(object: _166.LightClientAttackEvidenceAminoMsg): _166.LightClientAttackEvidence;
            fromProtoMsg(message: _166.LightClientAttackEvidenceProtoMsg): _166.LightClientAttackEvidence;
            toProto(message: _166.LightClientAttackEvidence): Uint8Array;
            toProtoMsg(message: _166.LightClientAttackEvidence): _166.LightClientAttackEvidenceProtoMsg;
        };
        EvidenceList: {
            typeUrl: string;
            encode(message: _166.EvidenceList, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _166.EvidenceList;
            fromPartial(object: Partial<_166.EvidenceList>): _166.EvidenceList;
            fromAmino(object: _166.EvidenceListAmino): _166.EvidenceList;
            toAmino(message: _166.EvidenceList): _166.EvidenceListAmino;
            fromAminoMsg(object: _166.EvidenceListAminoMsg): _166.EvidenceList;
            fromProtoMsg(message: _166.EvidenceListProtoMsg): _166.EvidenceList;
            toProto(message: _166.EvidenceList): Uint8Array;
            toProtoMsg(message: _166.EvidenceList): _166.EvidenceListProtoMsg;
        };
        Block: {
            typeUrl: string;
            encode(message: _165.Block, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _165.Block;
            fromPartial(object: Partial<_165.Block>): _165.Block;
            fromAmino(object: _165.BlockAmino): _165.Block;
            toAmino(message: _165.Block): _165.BlockAmino;
            fromAminoMsg(object: _165.BlockAminoMsg): _165.Block;
            fromProtoMsg(message: _165.BlockProtoMsg): _165.Block;
            toProto(message: _165.Block): Uint8Array;
            toProtoMsg(message: _165.Block): _165.BlockProtoMsg;
        };
    };
    const version: {
        App: {
            typeUrl: string;
            encode(message: _170.App, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _170.App;
            fromPartial(object: Partial<_170.App>): _170.App;
            fromAmino(object: _170.AppAmino): _170.App;
            toAmino(message: _170.App): _170.AppAmino;
            fromAminoMsg(object: _170.AppAminoMsg): _170.App;
            fromProtoMsg(message: _170.AppProtoMsg): _170.App;
            toProto(message: _170.App): Uint8Array;
            toProtoMsg(message: _170.App): _170.AppProtoMsg;
        };
        Consensus: {
            typeUrl: string;
            encode(message: _170.Consensus, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
            fromJSON(object: any): _170.Consensus;
            fromPartial(object: Partial<_170.Consensus>): _170.Consensus;
            fromAmino(object: _170.ConsensusAmino): _170.Consensus;
            toAmino(message: _170.Consensus): _170.ConsensusAmino;
            fromAminoMsg(object: _170.ConsensusAminoMsg): _170.Consensus;
            fromProtoMsg(message: _170.ConsensusProtoMsg): _170.Consensus;
            toProto(message: _170.Consensus): Uint8Array;
            toProtoMsg(message: _170.Consensus): _170.ConsensusProtoMsg;
        };
    };
}
